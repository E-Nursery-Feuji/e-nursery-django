2023-06-28 09:55:20,942 - WARNING - Not Found: /customer/signin/mukesh@gmail.com/TXVrZXNoQDEyMw==/
2023-06-28 12:06:29,625 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:06:35,395 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:06:42,716 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:06:54,711 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:07:00,141 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:07:11,554 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:07:17,805 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:07:21,800 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:07:25,801 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:07:32,242 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:07:35,954 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:07:41,147 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:07:54,220 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:08:01,285 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:08:08,771 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:08:12,568 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:08:20,960 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:08:29,201 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:08:37,893 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:08:45,351 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:08:53,794 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:08:57,856 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:09:13,381 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:09:17,271 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:09:34,673 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:10:03,673 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:10:11,619 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\models.py changed, reloading.
2023-06-28 12:10:32,630 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\models.py changed, reloading.
2023-06-28 12:11:12,096 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:11:16,187 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:11:28,423 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\serializer.py changed, reloading.
2023-06-28 12:12:15,631 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:12:41,869 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:12:49,934 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:13:22,354 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:13:28,140 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:13:31,765 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:13:35,117 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:13:38,417 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:13:44,448 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:14:07,956 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:14:16,102 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:14:23,182 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:18:23,483 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\models.py changed, reloading.
2023-06-28 12:18:34,523 - INFO - register_customer function started
2023-06-28 12:18:34,533 - INFO - register_customer:data is valid
2023-06-28 12:18:34,533 - INFO - Checking Email exits
2023-06-28 12:18:34,545 - INFO - Email not exist
2023-06-28 12:18:35,421 - INFO - customer data is saved
2023-06-28 12:18:57,165 - INFO - register_customer function started
2023-06-28 12:18:57,181 - INFO - data is invalid
2023-06-28 12:19:27,017 - INFO - register_customer function started
2023-06-28 12:19:27,022 - INFO - data is invalid
2023-06-28 12:20:44,778 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:21:37,118 - INFO - register_customer function started
2023-06-28 12:21:37,142 - INFO - data is invalid
2023-06-28 12:21:48,895 - INFO - register_customer function started
2023-06-28 12:21:48,900 - INFO - register_customer:data is valid
2023-06-28 12:21:48,900 - INFO - Checking Email exits
2023-06-28 12:21:48,904 - INFO - Email not exist
2023-06-28 12:21:49,483 - INFO - customer data is saved
2023-06-28 12:28:24,409 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:28:27,803 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:28:34,301 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:28:37,703 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:28:53,806 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:29:14,161 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:29:18,431 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:29:23,082 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:29:28,641 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:29:33,321 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:29:37,809 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:29:41,247 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:29:56,108 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:29:59,242 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:30:04,636 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:30:08,779 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:30:51,649 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:30:57,580 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:31:04,807 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:31:18,462 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:31:24,754 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:31:32,388 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:31:35,676 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:31:41,694 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:31:57,289 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:32:38,066 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:32:46,159 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:32:51,153 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:33:17,369 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:38:09,947 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:38:13,624 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:38:17,218 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:38:22,764 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:38:29,888 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:38:56,041 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:39:05,499 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:39:24,090 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:39:31,295 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:39:56,657 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:40:18,337 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\urls.py changed, reloading.
2023-06-28 12:40:35,988 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:40:39,433 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:40:43,691 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:40:49,221 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:40:53,832 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:40:58,742 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:41:06,477 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:41:15,012 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\urls.py changed, reloading.
2023-06-28 12:41:18,683 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\urls.py changed, reloading.
2023-06-28 12:42:02,336 - WARNING - Not Found: /customer/singin/
2023-06-28 12:42:22,979 - INFO - login_customer function started
2023-06-28 12:42:22,980 - WARNING - Bad Request: /customer/signin/
2023-06-28 12:42:33,101 - INFO - login_customer function started
2023-06-28 12:42:33,111 - INFO - Email exists
2023-06-28 12:42:34,000 - INFO - Password is correct
2023-06-28 12:42:34,056 - ERROR - Internal Server Error: /customer/signin/
Traceback (most recent call last):
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py", line 54, in login_customer
    token = generate_jwt_token(user.id)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py", line 77, in generate_jwt_token
    return token.decode('utf-8')
AttributeError: 'str' object has no attribute 'decode'
2023-06-28 12:44:00,974 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py changed, reloading.
2023-06-28 12:44:10,600 - INFO - login_customer function started
2023-06-28 12:44:10,611 - INFO - Email exists
2023-06-28 12:44:11,906 - INFO - Password is correct
2023-06-28 12:44:12,005 - ERROR - Internal Server Error: /customer/signin/
Traceback (most recent call last):
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\django\views\generic\base.py", line 104, in view
    return self.dispatch(request, *args, **kwargs)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\views.py", line 509, in dispatch
    response = self.handle_exception(exc)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\views.py", line 469, in handle_exception
    self.raise_uncaught_exception(exc)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\views.py", line 480, in raise_uncaught_exception
    raise exc
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\views.py", line 506, in dispatch
    response = handler(request, *args, **kwargs)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\decorators.py", line 50, in handler
    return func(*args, **kwargs)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\views.py", line 57, in login_customer
    'user': UserSerializer(user).data,
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\serializers.py", line 555, in data
    ret = super().data
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\serializers.py", line 507, in to_representation
    for field in fields:
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\serializers.py", line 368, in _readable_fields
    for field in self.fields.values():
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\django\utils\functional.py", line 57, in __get__
    res = instance.__dict__[self.name] = self.func(instance)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\serializers.py", line 356, in fields
    for key, value in self.get_fields().items():
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\serializers.py", line 1052, in get_fields
    field_names = self.get_field_names(declared_fields, info)
  File "D:\E Nursery Project\e-nursery-django\e_nursery\lib\site-packages\rest_framework\serializers.py", line 1106, in get_field_names
    raise TypeError(
TypeError: The `fields` option must be a list or tuple or "__all__". Got str.
2023-06-28 12:46:27,268 - INFO - D:\E Nursery Project\e-nursery-django\e_nursery\Scripts\e_nursery\customer_app\serializer.py changed, reloading.
2023-06-28 12:47:30,588 - INFO - login_customer function started
2023-06-28 12:47:30,606 - INFO - Email exists
2023-06-28 12:47:31,918 - INFO - Password is correct
2023-06-28 12:53:46,167 - INFO - login_customer function started
2023-06-28 12:53:46,182 - INFO - Email exists
2023-06-28 12:53:47,390 - INFO - Password is incorrect
2023-06-28 12:53:52,613 - INFO - login_customer function started
2023-06-28 12:53:52,620 - INFO - Email does not exist
2023-06-28 12:54:05,879 - INFO - login_customer function started
2023-06-28 12:54:05,884 - INFO - Email exists
2023-06-28 12:54:06,839 - INFO - Password is correct
2023-06-28 12:59:35,397 - INFO - login_customer function started
2023-06-28 12:59:35,409 - INFO - Email exists
2023-06-28 12:59:36,595 - INFO - Password is correct
2023-06-28 13:00:57,649 - INFO - login_customer function started
2023-06-28 13:00:57,658 - INFO - Email exists
2023-06-28 13:00:58,568 - INFO - Password is correct
2023-06-28 13:01:20,112 - INFO - login_customer function started
2023-06-28 13:01:20,119 - INFO - Email exists
2023-06-28 13:01:21,064 - INFO - Password is correct
2023-06-28 13:02:25,384 - INFO - login_customer function started
2023-06-28 13:02:25,390 - INFO - Email exists
2023-06-28 13:02:26,335 - INFO - Password is correct
2023-06-28 13:05:12,284 - INFO - login_customer function started
2023-06-28 13:05:12,289 - INFO - Email exists
2023-06-28 13:05:13,282 - INFO - Password is correct
2023-06-28 13:05:16,061 - INFO - login_customer function started
2023-06-28 13:05:16,067 - INFO - Email exists
2023-06-28 13:05:17,263 - INFO - Password is correct
2023-06-28 13:06:08,153 - INFO - login_customer function started
2023-06-28 13:06:08,162 - INFO - Email exists
2023-06-28 13:06:09,112 - INFO - Password is correct
2023-06-28 16:59:50,290 - INFO - register_customer function started
2023-06-28 16:59:50,322 - INFO - register_customer:data is valid
2023-06-28 16:59:50,322 - INFO - Checking Email exits
2023-06-28 16:59:50,338 - INFO - Email not exist
2023-06-28 16:59:50,697 - INFO - customer data is saved
2023-06-28 17:00:09,563 - INFO - login_customer function started
2023-06-28 17:00:09,579 - INFO - Email exists
2023-06-28 17:00:09,921 - INFO - Password is incorrect
2023-06-28 17:02:11,257 - WARNING - Not Found: /signin
2023-06-28 17:02:27,348 - INFO - login_customer function started
2023-06-28 17:02:27,359 - INFO - Email exists
2023-06-28 17:02:27,642 - INFO - Password is incorrect
2023-06-28 17:04:30,579 - INFO - login_customer function started
2023-06-28 17:04:30,610 - INFO - Email exists
2023-06-28 17:04:31,004 - INFO - Password is incorrect
2023-06-28 17:04:32,530 - INFO - login_customer function started
2023-06-28 17:04:32,545 - INFO - Email exists
2023-06-28 17:04:32,764 - INFO - Password is incorrect
2023-06-28 17:04:48,551 - INFO - login_customer function started
2023-06-28 17:04:48,567 - INFO - Email exists
2023-06-28 17:04:48,892 - INFO - Password is correct
2023-06-29 10:24:29,869 - ERROR - Internal Server Error: /products/saveimage/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\parsers.py", line 64, in parse
    return json.load(decoded_stream, parse_constant=parse_constant)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\utils\json.py", line 31, in load
    return json.load(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 293, in load
    return loads(fp.read(),
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\codecs.py", line 504, in read
    newchars, decodedbytes = self.decode(data, self.errors)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 135: invalid start byte

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 38, in saveImage
    image_data = JSONParser().parse(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\parsers.py", line 66, in parse
    raise ParseError('JSON parse error - %s' % str(exc))
rest_framework.exceptions.ParseError: JSON parse error - 'utf-8' codec can't decode byte 0xff in position 135: invalid start byte
2023-06-29 10:27:21,927 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:27:25,200 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:27:28,111 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:27:31,001 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:27:32,885 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:27:37,927 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:27:40,784 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:27:42,638 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:27:45,522 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:27:48,431 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:27:50,227 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:27:59,588 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:28:02,844 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:28:06,039 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:28:10,922 - ERROR - Internal Server Error: /products/saveimage/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 38, in saveImage
    image=request.data.image
AttributeError: 'WSGIRequest' object has no attribute 'data'
2023-06-29 10:28:16,520 - ERROR - Internal Server Error: /products/saveimage/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 38, in saveImage
    image=request.data.image
AttributeError: 'WSGIRequest' object has no attribute 'data'
2023-06-29 10:29:38,042 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:29:41,030 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:29:45,025 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:29:53,516 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:30:00,693 - ERROR - Internal Server Error: /products/saveimage/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 40, in saveImage
    image=request.data.image
AttributeError: 'WSGIRequest' object has no attribute 'data'
2023-06-29 10:32:05,926 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:32:32,583 - ERROR - Internal Server Error: /products/saveimage/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 40, in saveImage
    image=request.data
AttributeError: 'WSGIRequest' object has no attribute 'data'
2023-06-29 10:33:53,507 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:46:30,758 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:46:46,461 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:46:49,720 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:47:01,668 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:47:39,113 - ERROR - Internal Server Error: /products/saveimage/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 40, in saveImage
    image=request.Files['file']
AttributeError: 'WSGIRequest' object has no attribute 'Files'
2023-06-29 10:48:58,055 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:49:01,331 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:49:03,444 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:49:06,673 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:49:12,989 - ERROR - Internal Server Error: /products/saveimage/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\utils\datastructures.py", line 84, in __getitem__
    list_ = super().__getitem__(key)
KeyError: 'file'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 40, in saveImage
    image=request.FILES['file']
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\utils\datastructures.py", line 86, in __getitem__
    raise MultiValueDictKeyError(key)
django.utils.datastructures.MultiValueDictKeyError: 'file'
2023-06-29 10:51:02,927 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:51:06,204 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:51:10,837 - INFO - th.jpg
2023-06-29 10:51:10,887 - ERROR - Internal Server Error: /products/saveimage/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 204, in _get_response
    self.check_response(response, callback)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 332, in check_response
    raise ValueError(
ValueError: The view products_app.views.saveImage didn't return an HttpResponse object. It returned None instead.
2023-06-29 10:52:14,082 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:52:17,657 - INFO - th.jpg
2023-06-29 10:56:10,518 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:56:12,699 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:56:19,048 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:56:27,534 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:56:31,849 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:56:33,948 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:56:36,055 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:56:42,437 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 10:56:47,147 - INFO - th.jpg
2023-06-29 10:56:47,195 - ERROR - Internal Server Error: /products/saveimage/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 42, in saveImage
    file_path_binary = bytes(image, encoding='utf-8')
TypeError: encoding without a string argument
2023-06-29 11:01:17,953 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:01:20,967 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:01:25,035 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:01:39,846 - INFO - th.jpg
2023-06-29 11:01:39,957 - ERROR - Internal Server Error: /products/saveimage/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 42, in saveImage
    file_path_binary = image.encode('utf-8')
AttributeError: 'InMemoryUploadedFile' object has no attribute 'encode'
2023-06-29 11:09:27,877 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:09:31,171 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:09:33,309 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:09:43,033 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:09:47,456 - INFO - b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00`\x00`\x00\x00\xff\xdb\x00C\x00\x02\x01\x01\x02\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x03\x05\x03\x03\x03\x03\x03\x06\x04\x04\x03\x05\x07\x06\x07\x07\x07\x06\x07\x07\x08\t\x0b\t\x08\x08\n\x08\x07\x07\n\r\n\n\x0b\x0c\x0c\x0c\x0c\x07\t\x0e\x0f\r\x0c\x0e\x0b\x0c\x0c\x0c\xff\xdb\x00C\x01\x02\x02\x02\x03\x03\x03\x06\x03\x03\x06\x0c\x08\x07\x08\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\xff\xc0\x00\x11\x08\x00h\x00\xca\x03\x01"\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1f\x00\x00\x01\x05\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\xff\xc4\x00\xb5\x10\x00\x02\x01\x03\x03\x02\x04\x03\x05\x05\x04\x04\x00\x00\x01}\x01\x02\x03\x00\x04\x11\x05\x12!1A\x06\x13Qa\x07"q\x142\x81\x91\xa1\x08#B\xb1\xc1\x15R\xd1\xf0$3br\x82\t\n\x16\x17\x18\x19\x1a%&\'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\x83\x84\x85\x86\x87\x88\x89\x8a\x92\x93\x94\x95\x96\x97\x98\x99\x9a\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xff\xc4\x00\x1f\x01\x00\x03\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\xff\xc4\x00\xb5\x11\x00\x02\x01\x02\x04\x04\x03\x04\x07\x05\x04\x04\x00\x01\x02w\x00\x01\x02\x03\x11\x04\x05!1\x06\x12AQ\x07aq\x13"2\x81\x08\x14B\x91\xa1\xb1\xc1\t#3R\xf0\x15br\xd1\n\x16$4\xe1%\xf1\x17\x18\x19\x1a&\'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x92\x93\x94\x95\x96\x97\x98\x99\x9a\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xe8?g\xdf\xd8\xaf\xc5\xdf\x0b\xfcuo\xe2\xcd?\xc5\x1e0Y\xb4\x99\xb7\'\xf6\xed\xdcS\xd8\xcf\x90T\x83\x0e\x07\x9c\xa3 \x90A\x03\x83\xd4WY\xf1\xdf\xc0\xbf\x17>,\xc1\xfd\x8dq\xa0\xfc\x1d\xf1%\xabNUV\xefN\xb1\xb3\xb7\x8f9\xc4\x8d+B\xe4\xf1\xdcr\t\x1fQ\xdb\\k\x92XM#;\xed(\xdbw\x19\x15\x94\x12x\x1e\x83=1N\xbd\xf1\x0e\xa4\xb6\x8d&\xc5h\xd4\xed>Y\xdcA\xef\x9e+\xe1p\xb9n\x1b\x0f\x0fgIJ\x11\xdd\xa8\xc9\xa4\xfeI\xe9\xf2\xb1\xe7\xd6\xe7\xaa\xb9\xeb\xb6|\x1f\xf1\xcb\xfe\t]\xf1\x8bB\xd1n5\xef\r\xfc9\xf83kw\xa6\xcf\x0c\xf6\x17\xde\x18\xf1"\xdb\xea\xb6\xf7\xa9 h\xee\x06B\x99\x959\x1e^\xd5C\x9c\x9c\xed\x14h_\xb6\xef\xed\x7f\xe1M\x17Y\xf0^\xaf\xa2\xfcG\xf0\xe7\x88\x9e\x13k=\xed\xb6\x88\xf2\xabF\xc3\x120\x95"\x91\n\xed\xe0\x94c\xd7\xa85\xf6\xd1\xf1\xbc\xfb@\xf2\xdb\xd3\xe6SZ\xde\x18\xf1\xf5\xd4\x0c\xbeU\xc5\xc4\x1bH#d\xac\xb8\xfc\xab\xd0\xa7Z\x94)\xbaT\x9c\x92\xef{\xb5\xdfVs\xf2\xd3\x93V\x96\xc7\xe5>\xb5\xf0\x97U\xf8\xb7\xab\\[x\xc7Y\x9fW\xf1PQ4\xda\xdc\xb9\x8e\xe2\xe7\x7f!$W\x03yLm9\xc1\xe2\xab\xf8w\xf63_\n^\xfd\xb6\xfa\xf2\xe3T\xb7U?\xe8\xd1\xc7\xe5F\xde\xed\xf3\x168\xed\xb4\x8f\xad}\xc1\xfbp\xde\xea\xbf\x1a|I\xe1\xa8a\xf0g\x8a\x86\xb3\xa4\xf9\xb1\rN8\xfe\xd5\x15\xd4\x0eCl&%m\xb8|\xb0,\xd9\x1b\x9b\x8ex\xf3\xbd\x1b\xe1/\x8a\xbc:\x97M}\xe1\xfdnO\xb2\xa3M \x92\xd1\x8a@\x8a73\xb3\xfd\xdd\xaa\x01$\x93\x80\x05~k\x9dW\xcdr\xdcd\xa8\xe1\xa5/e=SJ\xfb\xee\x93\xd6\xda\xdfDy\xf8\xac\x0c*U\xe7\xe5\xe6o\xcbO\xb8\xf3]\x17^\xb6\xf0o\x85V\xc6m&K\x1d2\xd6/&\x13k\x1b<h\xbd\xb3\xd4\x83\xdf\x9ez\xf5\xaf\xd1\xef\xf8#o\xc5\x8b\xbf\x11\xf8n\xfbZk\x1b\x894\x1d.%\xd0\xac/$b\xd2\xfe\xec\x87\x92\xde\xde\xdccs\xf4g\x9aVTA\x81\x92r\x07\xc3\xdf\x12\xf5\xeb_\x82\x11\xe8\x87\xc6\xd0\xd9\xe81\xf8\x96\xc9u;D\xbc\xbb\x86E\xd4l\xe4,\x8b"y&@\x14\x95=px\xe4W\xa6\xfe\xc2\x9f\xf0Q\xd9\xbc\x00\xd0\xfc=\xf8\x7f\xae>\xa0\x8d$\xb7k\xa5h\xf6\x93]\xc5\x02\xbb\x16y\x19LE"\x05\x89%\xc9\x00\x92\x06r@\xae\xde\x13\x96\'\t\x8e\xf6\x98\x88N\xce\xf7\xf7e\xbb\xea\xee\x97\xde*\x14f\xa4\xa4\xa0\xed\xe4\x8f\xb7?k\x0f\xf8+\xcf\x87\x7fgI.\xd6\xce\xd3\xc4\x1a\xce\xa3\xbc\x93\xa7\xf8_G\x9fS\x93x\xeb\xe7\xea2\xc6\xb6\x91\x91\xddaY\x8a\xfa\xd7\xe4\xef\xfc\x14\x13\xfe\x0b\x0f\xf1\x13\xf6\xc1\xb5\xd4\xb4{;w\xf0/\x86\xf5\xabd\xb1\xd4\xe1K\xc7\xbb\xd5u\xa8\x91\x8by\x17\x17n\xa8D!\x98\x9f\xb3\xc2\x91\xc6I;\x83\x1a\xfd:\xd1\x7f\xe0\xa0>>\xd6bT\xb9\xbc\xf8\x81l\xf1\x8d\xa2+M%\x118\xf5f\xd9\x8f\xc6\xbc\xf7\xf6\x81\xf8\x9d\xf1\x07\xe3\xa6\x90\xd6\x17\xb7\x97Pi\xb2n\xf3\x06\xa7u\x01\x95\x91\xba\xaa\x88Q\x8ag\x1c\xe1\xc7z\xfb\xbc\xdb\x19R\xad\'*u\xb4\xfeU\x1f\xc1\xbb\xdf\xf07\xadVm|-\xf9=?S\xf0\x9e\xf2\x16\xb0\r\xe5\xb6\x19\x8e\x08S\\\xdf\x8b4\xbb\x7f\x10\xc1$\xd2\xc9\x0cW0\x9e\x0b\x1e$\x1f\xe3_\xac\xfa\xe7\xec\x1f\xe0\x9f\x13|=\xd6\xb4\x8dR\xcbL\xbf\xd75\x8b\x96\xbb\xfe\xdf\x8bM\x8e-B\xd2@\x9b#X\xdcr"E\x1f\xea\xc9!\x89fl\xb1\xc8\xf9[\xc6\x9f\xf0I?\x1bi\x10<\xba^\xa9\xe1}q\xc1\xf9c\xf3$\xb3\x91\xff\x00\xef\xb5+\x9f\xabW\xcb\xe1q\x8a\x9d\xa7=%\xfd]\\\xd27\x83\xe6\x89\xf0\x89\xd0V\xebQ\xb7\x81\x99a\x8aI\x15^r\tH\x97<\xb1\xeeH\x19\xe2\xb4|-\xe2}O\xc3\xf7\xdb\x16y.,cb\x15n\x06\x1bolc\xa1\xfd+\xea\x1b\xdf\xf8&\xc7\xc5\xf5\r\xe5\xf8\x0ei\xa3C\xcc\x91j\x16eO\xe2e\x15\xc6\xf8\xb7\xf6<\xf1\xef\x82\xec\xe7\xb8\xd4\xfc\x1b\xabAol3#\xc2"\xba\xd9\xcfq\x0b\xbb~\x95\xecK7\xa3:|\x95\x12w\xee\xd1\xd5S\x13)\xc6\xd2\x8f\xe0x\xfe\xa1\xf17R+\xe5[Lm"\x8c\x9d\x84._\x1fS\xe9\xedYrx\xefX\xb9\x97\xf7\x9a\xb5\xfc\x8c\xdd\x7fxy\xafW\xd1\xff\x00f\x0f\x16x\xa2\x115\x87\x81|]y\x1b\xf2\xb2&\x8bs\xb1\xbe\x8cP\x0f\xd6\xba=\'\xfe\t\xf5\xf1;W\\\xc7\xf0\xf7\\\x87\xd0\xcf\xe5[\xff\x00\xe8n(\x8e3\x07\r\x1cR\xfb\x8e)G\xab<GH\xf1\xce\xb7g(\xfb>\xa9\xa8#u\xcf\x9aq\xfe\x15\xb17\x8bu\xcdm\xd5\xaf5+\xf9\xb0r7L\xdf)\xcex\xaf\xa2|?\xff\x00\x04\xb1\xf8\xab}\xb4\xff\x00`iv*{\xddj\xf0\x8c~\t\xba\xbd\x17\xe1\xf7\xfc\x11\xd3\xc5\xba\xc6\xad\n\xf8\x87_\xd1\xf4\xbd?\xefJt\xc0\xf7\x97,?\xba\xbb\xd5\x11s\xfd\xe3\xbb\x1e\x86\xb9\xeac0\xd2\x95\xe1\x15~\xf6M\xfe\x03\xb4\xba\x18?\xb2\x07\x83n\xfe2\xfe\xcd\xbe.\xd2|A%\xee\xa9\xa0j\x17m`#\xdeY\xe2(\x91I\xba2A\n\xc8\xfbXu\x19\xe0\x8cW\xd5\x7f\xb3\xbf\xec\xbf\xe1\ro\xe0\x9e\x87\xe1\x1b}\x1f[\xd6\xf4{\x1ch7\x17\xba\xa1\xb2\x82\x08\xaeK\x13\x1d\xb4\xaadV28l\xab"m`3\x90rk\xe8\xbf\xd9\xb3\xe0\xcf\x83~\x0c\xfc*\xd2|\x1f\xa7\xf8\'J\xfe\xcc\xd3\x03~\xfe\xe26\x9a\xe2\xe5\xd8\xe5\xe5\x95\xc9\xf9\xdd\x8eI8\x1fL`WA\xfb\\xz\xd7\xc3?\x04,\xfciy\xe3\xbf\x0b\xf8O\xc2~\n\xbc\x8aY\xad \xb3\xf2\xaf\xad\xed$\x90\x0b\x95\xb4\x89S\rt\xe8\n\xc6X\xed\x0e\xc0\xb1\xdb\x91^[\xe1hb\'*\xae\xa7\xee\xdc\xb9\xf9RK\xde\xb5\xb9\xb5\xd9\xdb\xaa;\xb0\xf2u\x17\xb3\xab\xb7w\xd0\xf8s\xc6\x9f\xf0I\x1f\x83~,\xb5\xf1F\xa1\xe1\xff\x00\x88:\xc6\x88|\'\x18\x96\xfe\xde\xd2\xce}B6fm\x82;\x7f61\xe7\xb6\xf3\x82a\x91\xc2\xe0\x93\xc5x?\x82\xfe\x1e|\x19\xf8=\xf1]l-\xbcC\xe2\x0f\x18x\x9e\xce@m,\xb5\r*x"\xb2\x94\x11\xb6GO%7\xb0#\xe5\r\x91\x9caI\xe9\xed\r\xff\x00\x054\xd1u\x8f\x12j:\x97\x87\xbe\x17\xdck\x16P\xb9\x167\xbe&\xf1\x04\xfa\x94I\xc6O\xc8\xa9\nJ\xea\x08\x07p*\x1b?/J\xf1O\x8d?\xf0T\xef\x89>%\xbc\x8dt\xedJ-\x02K]\xc9\x13i\xd6pZ4\nF\n\xa3\xc6\x81\x82\xe0\x90FO\x15\xb5\\\xbe\xbdh\xfd]bjF6i\xa8\xc9+\xdf\xbbi\xca\xdeJJ\xfa\xf7\xb1\xab\x8e\x02\x9b\xd2<\xcf\xbd\xbf+\xff\x00\x91\xeb\x9a\xb7\x81\xbe(|C\xd7/<\x9f\x0c\xcd\xa6\xdb\x86bu\x1f\x12j6\xfa43c\x1b\x99V\xe6E\x9d\xd7\x9e\xab\x11\xaet|\x11\x12\xf8\xc5t]O\xe2\x8f\x83\xb4K\xb6m\xb3\\[\xd8^\xeaV1\x1c\x03\xb4L\xa1\x03\x9ez\x85\xdb\xc1\xf9\x8d|\x9b}\xf1\xff\x00\xc5\x97\x11\xbc\x93_[\xcf%\xc3ni%\xb6Fv\xe7\x92\xcd\x8c\x9c\xf7$\xe6\xb7\xbc%\xfbM\xcd\x1e\xfb]wI\xb7\xb9\xb3\x93\x81%\x9b\x18\xe4\x83\xa0\xc8V$7\xd3#\xeb_;S\x85\xe5\x84\x82\xfa\xa4#$\xbc\xf5\x7f\'dk\xcdJrm\xdf\xef>\x86\xf8\xa7\xe0-\x07K\xd5o4\xf7\xf8\xa5\xabx\xba\xebM\x81\x11/\xec\xb4\xb4\xb7\xb5\'\xb4h$\x99\xdd\x94/q\xb7\x9e=k"\xdb\xe1w\x81\xe6\xb7\x8d\xdb\xe2W\x8f\x11\x99C\x15\xff\x00\x84R\xd9\xb6\xe7\xb6~\xdf\xcds\xbe\x16\xb8\xd2\xfcC\xa4}\xafI\x97\xed\xb6\xed\x80\xcc\x1b\x0c\x8d\x8c\xeda\xd5O\xb1\xf7\xad\xf8\xfc<\x865\xf9\xbbz\xd7\x83,c\xa1\'\x07\x14\xbc\x9cR\xb1\x8c\xf9d\xfe\x1f\xc5\xff\x00\x99\xfae\xf1\x03\xe2\xde\x87\xf0_\xc0\x97O\xe2=B;]4\xee\xd5\xad\xf4X&\x06MR\\\x15VT\\\x81\xbb\x1b|\xd3\x80\xa3\'<`\xfcC\xe1\x1f\xf8)G\x8e\x92f\xb7i4\x9dR\xd5fbL\xf6\xbbYr\xc4\xedVR\x0e\xd1\x9c\x02rp\x01<\xd7=\xaa|g\xf0o\xc4\xcf\x13\xdeh\x9e\x18o\r\xdb\xcc\xb6/sr\x9aDk\xe5\x80\xa4\x00\x1d\xd4\x14\x0e\xd9\xf9Wp\xce1\xd4\xd67\x87>\x1cY\xde\xeb\xf2Y\xdb\xddi\xa92\xb71\xc7\'\x9f.@\xe4\x15@@a\x83\x91\x9e0k\xf4L\x1eyW\x11\x87\x8dyBT\xaf\xd2[\xb5\xdfN\x9d\x8f\xa4\xa5\x82\xa5~F\xf9\x8f\xa25\xbf\xf8(~\xa3\xe0\x8f\x0cG\xaak\x1e\x17\xb7\x9e\xdd\x99U\x8d\xbc\xd2@F\xee:\xb6\xe5#\xde\xb0|?\xff\x00\x05\x84\xf0}\xfe\xbbq\xa3\xc7\xe1=n=am\x9ako6\xf6#c)\\\x12\xaf"\xae\xf5\xcex\xc2\x9a\xf1\x8f\x8f_\x11\x1f\xc5\xbe\x1f\xd3\xfc+c\x1d\xc6\xa0\xf0\xabZ\xdf0\xb6\x11\xa4,\xa0\x95\x07,H=\xf1\x81\xd6\xbc\xf3\xf6h\xff\x00\x82w\xf8\xdb\xf6\x87\xb0\xd7\xfcM\xe0\xdb\x8d7Q\x93\xc1)t\xda\xbe\x98\xf2<s\xac1\xc2\x1c\xb29\x1bY\x8eT,c\xe6$c\xb8\xaf\xa8\xca\xed\x89\x9f,\xe3\xcd\xd7k;~\x07\xa9\xc3\xb9\x0e\x0f\x15\x9bP\xa5Z\x9f5\'%\xce\x93k\xdc\xbaRw\xbe\x96N\xf7_s>\x8d\xf1\xaf\xfc\x15\xf7\xc6\x96\x9f\xd9V\x1e\x1d\xd0\xfe\x1e\xe9\xba\xe6\xb4\xa5m\xedn\x9e\xea\xf2kw\x07\x85\x94\x96\x8d\x01\xc7<+\x0eW\xa89\xaf\x1e\xfd\xa2\xbfi\xaf\x8d\x7f\xb4W\xc3\x15\xd3\xf5\x7f\x1ak\x17\x93,E\xf5_\x0e\xe9\xcf\x1e\x9fat\xccs\xe5,Q*\x07\xd9\xf7~wp\xc4g\x83\xc9\xec\xbfdI\xb4;\x8f\r\xeb\xd7z\xa7\x854\xbf\x11j\x1fb\x8a\xcdL\xf0\xc4\xf2\xcb\x14>c\xa1\x05\x94\x95d\x0e\x00+\x86\xc2\xa7?(\xae6m&=\x03\xe2\r\xbd\xf5\x8f\x9d\r\xa5\xe4\xb2\x13\xe7\xcc\x14\xdb\x97\x07 \xbf\x03\x8e\xc4\xe3\x07\x1e\x99\xaf\xb5\xcb\xf2hQ\xc3\xfby\xbb\xc5\xbd\xff\x00\x957\xbf\xf9\x9f\xd4|+\xf4s\xca\x95\x0cL3g*\x9c\xee\xd0\x92vT\xe0\xdf\xbb+Y\xde\xa2j\xed\xbb\xc6\xcf\x96\xdb\xb7\xc6\xf8\xdb\xe1G\xed\x05\xfb\x17\xdfxo@\xd6<+\xa8h#^U\xbc\xd2\xed\xe4\x89.me3\x00\xd820(\xad\x81\x96\x04\x800{\x83_S\xfc\x1e\xfd\xa5\xef\xbff\x7f\x0f\x1d\'Z\xf0\xfd\xe7\x8b|u\xe2\t\xa1Y\xdbN\xd6\xe1]\x0e;a\x1e\xe5X\xd4@f\x13+;\x96f\x90)\n\t\\p<\x9b\xc6\xff\x00\x15\xfcq\xfbJ\xf8\xdbV\xf1\xa7\x885\r[Z\xd4R8\xad\xa4\xbauyR\xc2\x00\xa1#RyX\xc6\x06y\xc6X\x96\xeaI\xaa\xb6\xf0\xb6\x90\xb0Y\xdb\xc9\x8b\x9b\xd6\xda\xb2\x120\x14\x03\x9f\xa7l\x1f\xadw\xe0\xb2l-hJ\xb5MS\xd1v\xd7O\x9b}4\xd0\xf58O\xe8\xc1\x91\xd1\x85J\xd9\x9c\xddY\xb5d\xbe\xcc.\x92iZ\xcd\xb6\xefg$\xac\xad\xa1\xf6\xed\xc7\xedK\xa1\xf8k\xc1\xfa^\xb9\xe2H\xb5O\t\xd9\xea\x92\xb5\xb8k\x97Y\xe2\x82a\x14\x92\xf9l\xd1\xf2\xd9\x11\x95VU \xbb\x00v\x80\xcc9\x0b\x0f\xf8(\xa7\x80|I7\xd9\xec\xed\xfcG}u\xbd#h\xfc\xabHV=\xed\xb5K\xca\xf7!\x14\x16 d\x9c}@5\xe2_\x16>\x1a\xea\x9a\x9f\xec\xf5\xe0\xcd\x1d\x94\xea\xd7\x9a\xb7\x89\xd6v\x8eI|\x98!\xb6\x8e\x07Q\xe6<\x9bB\x01\xbb\x1b\x9b\x00o=k\x8c\xd3~\x1d\xe8\xba\xa7\x8f\x96\xce+\x8b\x1d+\xc0\xfa\t\x92\xe6\xe2\xe5m\x8c\xd2\xdf\xe0\x92\xef\x1a\xe3,\xcf\x91\x14fA\xf2\xae\x18\xe3\xe6\xaf\x8e\xc6\xf0\xff\x006i,%\x18~\xea\n.R\xbb\xeb\xab]\xaf\xf7$\xb7\xe8~1\x8e\xf0\x16\x95^*\xaf\x96\xe0\x1c\xe3\x83\xa1\x15*\x95\x1e\xad>[\xd96\xb9y\x9b\xd6\xd6\xd1kmU\xfdK\xe2\x87\xfc\x15s\xc3\x9e\r\xf1\x05\xf6\x9dc\xe0\x1d[R\xb8\xb1\x9d\xed\xcc\xed\xae\xc0\xb6\xee\xcapJ4q8e$p\xc0\xe0\x8f\xce\xa7\xfd\x9a\xbfl/\x89\x9f\xb6?\x8b\xaf\xf4\xff\x00\x06\xf8?\xc1>\x11\xd3\xf4O.\xe3V\xd75k\xab\x9dDZ\xc5!"8\xe2\xb6V\x8c\xcf;\x14r\x17!@\\\xb1\x03\x19\xf8\xfa\xcb\xc0Zo\x8b^\xf6\xeeMr\xd7K\xb42;D\xd70\xc94\xb2\r\xc7\x1c \xc1b:\xe0\xf5\xf4\xae\xc3\xf6w\xf8\'\xf1\xabR\xd6u\x1b\x9f\x84\xb6~6\xf2\xcb\xa4m\xaai\x97\xeb\xa5\xc2\x9b\\:\x19\x1c\xc8\xa4\x1c\xa8 \x03\xd4g\'\x15\xf9\xd6\x1b\x11C\x11\x88\x958\xd3\xda\xfb&\xdf\xe2\xf5\xfb\xcf\xe7\xfa\xd87\x1a\xad\xc1{\x97v\xd57k\xe9\xb2\xfcl\x8f\xd2\xa5\xf0u\xf4\xe9\n\xdck:\xad\xfd\xf5\xbb$\xc6t\x8cY2\xba\x9e\n$!Dk\x91\xd3\'\xd0\x93W?\xe1\x02\xd3>\xce\xad\x16\x9dc\x1d\xc6\xf1)\x95l"Y\x9d\x86rL\xa0\x079\xceH\'\x04\xe0\x9c\xe0W\xcd\xff\x00\x02\xff\x00f\x7f\xda;\xc2\xde\x1b\xb7\xb1\xf1&\x93\xe0\xbdj\x1bk\xf1\xa8[.\xbf\xe3\xcdQ\x1a\xd9\x8cB\'\x06;\x1f\x96M\xc1"8\x91\x9dW\xcb\x05UK9o\xa04_\x0c\xf8\xba\xd0\xa9\xd5\xb4?\x02\xc7\xfd\xe8t\xddJ\xfe\xe0\xe3\xd8\xcd\x178\xf7\xc5uK!\xa8\xdf:\x9a\xb3\xee\xad\xfa\xbf\xcc\xa8\xd3r^\xf5\xd7\xc8\xda\xbd\xd0\xae\xe4\x8dc\xb8\x9ee\x1dU[\xe5\x1f\x97\xb51|5\xfd\x9a<\xcb\x86\x868\xc2\xee\xf3ee\x8d\x07\xaeY\x88\x1f\xad^\xb2\xd1t\xb8l..\xae\xfc?o\x0c\x90\xab\x16\xdc\xa8\xca\xca\xa0\x92s\xb7<c\xd3\xf3\xaf\x02\xf1G\xc4\x0b\x8f\x86\xdf\xf0Q\xdb\xef\x03\xf8\x8a\x1d.\xd7\xc1z\xd4\x16\x115\xad\xed\xac3\x7ff\x81\xa7\x89w${\x8c~i\x99\x8e\xf5\x0c\t\xc9\xdd\xc8\x18\xdb\x0b\xc2\xf5\xea\xc6S\x8c\xd3\xb6\xbf\xf0\x0f\xa9\xc8x6\xb6n\xab<;\xd6\x959M\xe9\xba\x8d\xae\x96\xbb\xd9\xe9\xdfm7^\xe1\xe1\xedS\xc3\xfa\xcd\xe2\xdb\xd9\xf8\x83\xc2\xf7w\x19\xe2+mf\xd6i?\xef\x95\x90\x9f\xd2\xbb\r\x1e\x1d.\xdfM\x9e\xfaMB\xd1mm|\xa4v\x0f\x90^Vq\x1a.\x07\xcc\xcd\xe5\xc9\x80?\xb8\xc4\xe3\x15\xe0\x9f\x1f\xbfh\x8f\x0b\xfc\x08\xf8\x8f\xe2\x8f\x87\xfa&\x97\xa7\xda\xde\xcd\xe1\xdb)4\xbb\xc8\xf4\xb8\xac\xa5\x9e\xf6yU\xa5\x8aB\x8d\xfb\xb5\xfb;\r\xac\x0er\xad\x93\xf3\x0cx\xe7\x8d\x7fi\x8f\x89_\r\xeef][Z\xd1\xfcAqqe\x12\x1bI\xec\x05\xcd\xb0\xf2\xed\xf6\tcS\xcco\x02\xb2\x85\x980m\xce\xc7\x9d\xcc\x0f\xd4\xe4<!:\xd4\xbd\xadYi\xe5\xe8}\xff\x00\x0e\xf8%\x98f8\x08fz\xc6\x9c\xec\xe2\xb4\xbb\x8bQjK\xcb\xde\xb3\xbaVh\xfb\x93\xc4z\xc5\xe5\xff\x00\x87.4\xff\x00\x0f\xff\x00hh\x9a\x85\xd1\x11\xc7\xaa\x18\x12G\xb5L\xfc\xed\x1cl\x19D\x84p\xac\xd9\xdb\x9c\xed\'\x18\xf9\xb7\xf6\xfb\xf0\xd6\xa1\xaf\xe8>\x19\xd2u-SU\xd6\xfe\xcf\t\x96\xe2[\xc2\x19\xd8#0\x8c9\xc0\xe0\x17s\x9c\x7f\x1dX\xfd\x9f\x7f\xe0\xa1\x1a\xb6\xb7\xf0\xf6\x11\xa9xwT\xf1\x06\xbf\xa5\xcc$\xbcX\xf1\xa7\xd9\xbe\x99\x1a+\x99\xcc\x81q\xf6\x890aHPd\xbf\xef\x0e\xc4\x06\xab\xfe\xd5\x7f\xb5g\x87>4\xfc<\x93\xc6\xf0X\xea\x1e\x1b\xb5\xd4nZ\xc7N\x8e3\x1c\xae\x91F\x88e\x90\xe3h\x13ydg\n\xaa\x1d\x8e\x0e\xe1\x9a\xe2\xab\xc1y\x95J\xcd\xca\xab\xba\xf7R\xf8ck\xea\xec\x9b\xbd\x96\xad\xbb\xbb\x1e<|#\xe2J\xf5\xbf\xb3\xd5\x17\x1ej\x8a\nN\xca/k\xca\xfb\xf2\xa8\xfb\xcf\xc9=\x1bG\xce\xde/\xf8em\xe1\xaf\x86\xf2\x7fg\xe8m\n\xb6\xd8U\xfe\xcf\xb2\x10\xe4\x16`\x0fL\x92w\x11\xf8\xd7\xcc\xde5\xfd\x9c\xf5]SJ\x92\xfdv\xc3\n\x96v\xd8\xab\xe5\xa7\x19\xfa\xfe5\xf6\'\xc2\xaf\x88v?\x10\xfcS&\x97y\xa6\xfd\x89\xb5i\xa4{8cm\xe9el\x96\xd1\x18\x90\x02\x00vvI\x8b\x1e\xc5zs]\xce\xb7\xf0\xc1o``\xcb\x0c+l\xa4\x95\xc0E\x18\x19,\xdd\x82\x81\xc9\xcf\x03\xafj\xf9\xec\xd7\rW)\xc6\xbc;wZY\xf7W\xb2\xd3\xcf\xb1\xf0\xbcy\xc0\xb8\xde\x17\xcee\x96b=\xe6\xd2pz{\xd1m\xc54\xae\xedw\x16\x97\xfc\x13\xf2cS\x8ek;\xb9-n\x11\xa2\x9a\xdc\x98\xdd\x18c\x07\xe9Q\xc5(U5\xf6\xbf\xed+\xfb\x11\xc7\xf1_\xc1\x17~*\xf0\xad\x8d\xf2\xeb\x11\xdc$6\xb2\xc9\x0f\xd9\xe0\xd6\xc6\xd6i\x02\xf9\x98b\xcb\xf2\x95\x91\x82\x83\xbb\x07\xa8#\xe2\rcO\xbe\xd05K\x8b\x1b\xebk\x9b;\xdb71\xdc[\xcf\x19\x8eX\\uVS\xca\x9fc^\xec\xb0s\xbf$\xd7,\xec\x9b\x8b\xdd_k\xfa\x9e>a\x96\xe32\xda\xcb\r\x8e\xa6\xe9\xd4\xb2|\xaft\x9e\xd7]\x1f\x93\xd4\xd8\xf0\xe7\x8bo\xbc#\xa9\xad\xe6\x9bp\xd6\xf3/\x07\xba\xc8=\x18t"\xbdV\xd3\xf6\xbbT\xb5\x8dd\xf0\xfc\xed"\xa0\x0cR\xf8*\x93\x8ep\n\x12\x07\xe3^\x105\x06U\xfb\xa4\xfdjE\xd4~Q\xf2\x8a\xf2\xf1\xb9%\x1cD\x93\xaf\x0b\xb5\xf7\xfe\x07/1\xfbC\xe1/\xf8&\x9f\xc1\x0f\nk\r>\x93\x0f\xc4\x08&1<2F\xde &\xdc\xa1\xea\n\x94\xc3\x0e;\xf7\xae\x9b\xc3_\xb1_\xc3\x9f\x06\xeb\xf7z\x96\x8f}\xe2\xed"\xf2\xea\x1f).\x0c\xf6\xd3-\xb8\xc7\xf0\xa7\x94\xa3\xfck\xdbWL\x8d.$e\xb3\xb5\x85\xa5\xc8R\x89\x96Q\x9e\xe4\xe3\xf4\xab\x9aW\xc3{\x9d^I."\xb7\x8aE\xb5\x19\x904\x9bY=\xc2\x8e\xa3\xeb\xc5|\x8d:\x98\xfa\xb0\xf6N\xd2\xbf\x96\xff\x00\x89\xef\xc6\xb4\xaf\xee?\x91\xf3\xff\x00\x8d?d\xbf\n\xf8w\xe1Dv\xf6PM\xe2\xe9ayH\xd5/\xed\xe1\xb5\xd4 \xdf!p\xaf,(\xa6H\xc6\xe2\x14\xb6\xe2\xb9\xc1$b\xb8_\x87\x1f\xb3\xd7\x83~\x10\xf8GR\xd4\xbc7\xe2\x0f\x1aC\xe2\x0b\x89E\xdf\x89\xf4{\xcb\xc8\x9b\xedvj\x17\xcc\x9e\xc4E\x1cbF\x84\xacsl$\xbb\x08\xddx\xe1\xab\xec[\x7f\t\xfd\xb8\xb4p\xacr\xfc\xa66\xd9\x86\x1bH\xf9\x81\xcfc^K\xf1\xa7\xf6u\x96\xcfL{\xcbXL\xbaJ\xb2\x95\xf9\xb7\xb5\x83\x1e0\xc4r\x14\xe7\x86\xe88\x07\x9c\x13\xfa\x9f\x0c\xe2\x96&1\xc2c\x17\xb3\xab\x1br\xcd+&\xbf\x96K\xae\x9az\x1f\xb8\xf8i\x99ey\x85ZY~e\xfb\x9cM?\xe1\xd5Zs\xc5\xe8\xe15\xb3\xba\xbaW\xb3k\xe1jK_\x8b<S\xf0\xdaO\xd9\xdb\xe3\xdd\xe6\x92\x97\x16w:^\xa2\xb1\xeazV\xa3m\xb9\xado\xac\xeeT<SFN\tC\x82\xbe\xc4\x11\xd4T?\x14~\x1d5\xbf\x89\xa4\xb0A\xfb\x8dA\xc0\x87\xcc\x1b\xb0$`\x07\xe4Mzw\xc7\xbf\x87\x97M\xf0\xbbJ\x8e\xf7l\xbf\xf0\x8a\xdc\xcc-n[\xe5h,\xe7;\xe5\x82N9E\x9b\xf7\xaas\xf2\xef\x94r\x18\x11\x83\xf1*\xeaM\x03\xe0V\x91\xe2\xc9\x1a\xd6=gC\xbd\x82\xd5a\x96E\xdf9I\x01\x04s\x96R\x8a2FF\x18\x1e\x875\xfa~\x02\x8c\xb0\xd4\'J\xb7\xc3\xaf\xcd5\xfd#\xfb\x9b#\xc4\xfdW\x01\t\xd6\x92\x94\x92\x957\xfd\xe6\x95\xe1/\x9e\x97\xec\xef\xe5\x7f\xb9\xbfd\xff\x00\x87Z\'\xc1\xaf\x80\xb6z\x0e\x9bc\x1f\xd9VS\r\xcf\x98\x82G\xbbb\x81d/\xd9\x8b\x92A\xcf\xd3\xa0\x00~x\xfe\xd4\x7f\x0em\xfe\x1f~\xd4V\x16\xbam\xbf\xd9t}Z\xee\xde]:,\xeeX\xd1\xe4\n\xe8?\xdd}\xc3\x1d\xb2\x05}\xd5\xf0\x87\xe2\x96\x93\xae~\xce\xab\xe2\x985\x08m\xb4T\xb5\x1a\xa4\xf7o\xf7mQ\x14\xb4\xa5\xfd\xd4\xa9\x04u\xdc\x00\xeb_\x94_\x19\xff\x00i\xbdK\xe2\x8f\xed\x01?\x8a\xad\xa4\x92\xcd\xa1\xbbV\xd2\xa2|;Z\xc6\x8eZ!\x83\x90_?;z\xb31\xaf70\x9c)\xe1\x94\x13\xb6\xb1\xb2\xf2V\xfd\x0f\xca\xf8W\x1fS/\xcc15\xea\xc9\xfe\xf1\xd9\xae\xefu\xf7t\xf2\xb9\xf5\x0f\xedA\xae\xc9\r\xe6\x93\xe1Xf\x8fv\x97\x11{\xd8\xa2|\xbf\x9b&6\xc6W\xb6\x14\x03\x83\xcf\xcd\x8fZIt\x1b_\x84\x1f\x0f\xec\xd7X\xd0$\x9b\xfbb\xd1\xf5\x0b\x99\xae\x14\xc5ms\x13o\x89!Y\x1b\x00\xa2\xa8\x90eG\xcc\xee\xdc\x90\xa9\\o\xecQ\xa9\xf8\'M\xf8\x85\x1f\x89>-j\x1a\x8d\xf5\x8f\xda\xa3\xfb\x17\x87t\xe7\xf3u\xcf\x15\xea\x12>\x119?\xb8\x84\xbb\x02\xf3HT\x9e\x88\x19\xb9\x1f`\xeb?\x03\xfc\'\xe2\xef\x8e7^"\xd6\xac\xac|3\xff\x00\t\x15\xc4-a\xa4\xeb\x1e#\x9fSh\xd6\x14\x11\xa2\xc1\xf6\xc720U\xc6\x16$X\xd7\xa0AY\xe3+b3,$\xa9a\xbd\xd4\xdf\xbc\xe5\xd1v^\xa8\xe7\xf1/:\xc5b\xf2\xb5\xc3\xf9?\xb9\x19\'*\xf5\xa5\xee\xc5_\xecEo6\xfa\xb4\x9cRVo\x9bo\x8a~\x15\xff\x00\xc1?<e\xf1\xa6\xe0\\\xe8"\xd2\xcfB\xb8|\xa5\xfe\xa8\xcd\x1cV\xf1\x9e\x80\x05R\xd2\x11\xd3\x08\xbc\xf1\xc8\xcdo|^\xf8\x1d\xe2\x0f\xd8\x1b\xe2\r\x85\x8f\x80~\'x\x83U\xf1\xf3E\xe6\xeb\x91\xe9\xb6Keg\xa6\xa6\x01\x8e\x06\x06G3J\xc4\x96h\xd8\x10\x8b\xb7w\xcc\xd8\x1f\xa1\x9f\x12\xee\xfcE\xe1\xaf\x03\xae\x99\xf0\xadt\xd8\xb5\x0c2M}vd\xf3#N\xe2\xd8\xe3j\xb9\xfe\xfbc\xb6\xdd\xa7\xe6\x1f2\xfc\x1c\xfd\x91\xf4\xcdF\xfa\xe3\xc4\xde)\x8em{Z\x82p\xb2i|\xad\xae\x8bp\x0e\xe6\x8a\xe4g7\x17\x00\x95.\x1f1+\x12\x148\x02F\xfc\xc72\xc8\xf0XH8`9\x9c\xde\xbc\xfd#o\xe5K\xf1\xdc\xfe%\xcf\xa9\xe4\xd8E\xf5l\x0c\x9dY\xec\xe7}?\xed\xd4\x9d\xbem\xb3\xca|=\xff\x00\x05B\xf8\xbd\xe0\xeb-\xfe >\x12\xf1\x00\x8c\x0f\xf8\xfa\xd2\x16\t\x07_\xbd$\r\x18\xcf\xb6;Q\'\xfc\x17?T\xd1nYu/\x87>\x0f\xb8\x8f\xee\x97\x87W\xb8\xb7#\xdcn\xde+\xea\xbdK\xc2:\x80V\xb8\xfb\ng\x80\xad\xe5\x86\xf2\xc7a\x8e\x9e\xf8\xab\xb2?\xc4\x0f\x05hbm7A\xd0\xef,\xef\x028\x92\xe3I\xb6\xbe\\\xaepT2\xb2\x8e\xe0\xee\xf5\xc5|\xfe\x0e\xbe6\x94\x9f\xb7\xa9)/(_\xf3>.\xa4\xeb\xca\xea\x92zy\\\xf0\x8f\x83_\xf0T\x8f\x16~\xd1\ru\x1f\x85\xbe\x03\xdck\xf6J\x1a\x0b\xcb\xb4\xf1\'\xd9\xf4\xfb]\xcb\x82\xb2\\\xc9\x00\x8d[\r\xf7A/\xc8;My\xd7\xc7\xcf\x1d\xeb\x1e\x16\xf8\xd3y\x0f\x88\xad\xe3\x98x\xb2\x085\x8b\xe86\xfd\xa6;k\xcf,G1\xb7\x97joS\xb01 .s\xb4\x81\xb4\xd7\xd2\x9a?\xc7\xdb?\x0c\xe9P\xe8\xf7\xde\x13]&\x18\xe7\x9ag\x1aU\xa46\xd6\xf1\xbb\xb1g"\xd5\x15\x11K1$\xec#>\x95\xce\xfcs\xf8o\xa6\xfe\xd2\xbe\x0cG\xf0\xcd\xe6\x9d\xa9x\x9b\xc3\xed\xfd\xa1cd\xb9\x8a\xf9\xd0s5\xb9\x85\xf6\xb9WM\xd8 \x15\xde\x06\x0f&\xbe\x9b\x87\xb8\x92\x14\xb1\x91\x8c\xa5\xcd\x19h\xee\xac\xd7\xca\xcb\xd0\xfdk\xc1~4\x86K\x9fEc\xad*\x15\x97$\xde\x9e\xebmY\xbe\xca\xf6\xbfm\xcf\x88\xff\x00h\x7f\x18\xdfx\xc7\xe2d\x1a\xf5\xe3]^\xb9\xb6\xb7\x8a\x17\x9ec#\xaf\x91\x1a\xc6\xaa\x1f\xaf\xc8\x15@\x07\x900+\x03Z\xd4\x1f\xe2G\x8c\x9aO2\xe9I\x11Z\xdb\xbc\xb2\x16\xf2\x9f#.\xde\xa0|\xcd\x8fa\xd6\xbe\xd6\x87\xf6j\xf07\xc5_\x80z?\xf6\x96\x98\xba>\xbdy\x03\xad\xae\xa7h\xcd\x16]$uM\xeb\xf7\x0b\x05\x1bX0\xc9\xe3\'"\xbe`\xf1\x0f\xc1=W\xe0\xef\x8e\x1bO\xd4\xfc\xb9%\x12\x19c\x9e\x12\x1a)3\xd1\x86\t\xc3`\x9e\x0fNz\xd7\xe9\xde\xc6\xaa\xae\xbd\x9a\xfd\xd5F\x9e\x9d<\xbf\x13\xfb\xd3\'\xfa\xb6=\xfdS\x0b\x1eH_H\xd9Z\xcbM\x1a\xde\xd7\xf9\x1d\xf5\xef\x8a\xee>\x1f\xe9wq\xe9\xf6\xc7\xfb\x06\xd6\xdak;\x81\x13|\xccv\x16Y2\xc0\x95v\xc7\xde9\xdd\xb9\x8fS\xc6\x0f\xc0\xbd^c\x04z\xf7\x89mm\xae\xb4o\x0f]y\xda}\x89\x840\xba\xb9\x9aPQv\xfd\xd6_1I9\xe7(\xd9\xdd\x8c\x18\xbch\xf7\xd6\xd1\\^M\xe4,3\xdb\x99\xcb\xa2\x91\x8d\xa1\xb8\xff\x00xm\xeb\xef[\xbf\n\xb5\t\xbcO\xa9x~\xcfK\xb1\xb6\x8fM\xd3\xa0\x13"M\xd6%\nG\x9c\xe4d3\x96\x91\x8fLd\xfdM}\x06"\x95\xf1I-\xb9[k\xa7E\xb7[\xaf\xd4\xfa<vV\xb4qK\x96\xcd\xbf\xbb\x95\xfc\xdan>Ho\x80-\xa2\xd2?k\x1b\x19o/`\x83M\x8e{\xdb\xd9.e\xdd\xb2\x04kY\xe49\x00d\xedw+\xd3$\xe3\x1dEz\xc7\x88~9/\xc5\x8f\x18\xc9\xa7\xf8oM\x9a\xcf\xc36Q\x8f\xb4<\xe9\x91w\x82[\xcc\xb9 \x82\xa8\xc5N\xd8\x94\xf0:\x92y\x1e\t\xa5h:\x87\xc4\x9f\x8d\xb2\xe9\xfaZ\xc7qr\xc3\r,\xc7d1ol\x19\\\x8f\xba\xa0zw8\x1c\xd7\xd8\x7f\x06>\x15[|\x18\xf0\\\x96:m\xba\xcdp\xf3\xac\xb7\xfa\xc6\xa5f&\x92\xe2N\x00\xfb4\x07\xe5\x01\x89\n\x81\xb2pFNk\xc2\xa5\x94\xe0\xa5\x8f\xa9\x8d\x9cy\xe7\x16\xe2\x9b\xda)n\xd7\x9d\xdb\xd7\xa5\x8f\xcf8\xbb\x85\xf2:9\xb4s\xdcT=\xae*4\xd58&\xd7-5\x19I\xb9\xdb\xf9\xaf&\x93\xd6\xd6\xd1\x0c\xf0\xef\xc2\xadS\xc46k\xab\xeb\x12\\\xdeO\xa8\xc4\x8f\x0c\xd3 \x8a\x08\xad\xf9eX\xe3\xc0\xda\x18\xbb6\x00\xce\ng$d\xf1\xbf\x1b?`\xff\x00\x01\xfc\x7f\xd3\x99\xbcA\xe1\xbb\x8b\xbdB\xd5\x02.\xa9f\xcdiwj\x9d\x02\xf9\xa3\xef.s\x85p\xc3\xae\x00\xe6\xbe\xab\xb86~\x0b\xf0Q\xd4<E1F\x84\x05\x9evM\xcd,\xcd\xf7-\xe2Q\xf7\xe5#\x80\x8b\xee\xdf*\x02\xc2+V\x8f^\xb5\x8c-\x8c\x96)\xe5\x86\x16\xa7\xe6h\xce\xd1\xbeIX|\xbb\x89\xe0g\x85P\x07R\xc4\xfeE\x9b\xe1\xebO0\x9e.3\xd6M\xd9\xad4Zi\xe4\xb6\xf3?\xcf\xee4\xe6\xcc\xf3\x8cVf\xe5\xcd\t\xcd\xa8\xb4\xac\x9d\xac\x92\x8f\xf7b\x92I\xf6I\xb4\x9b?2<M\xff\x00\x04J\xd2\xee\xae\'\xfe\xc5\xf1\xde\xbdj\xa7\x98\xe1\xbe\xd2\xe2\xba\t\xf5dh\x89\xfa\xe2\xb0G\xfc\x10\xff\x00\\\x03\xfeJ&\x96=\xbf\xb0\xe5\xe3\xff\x00#W\xde\x1f\x19\xff\x00l\xff\x00\x84\xff\x00\x03\x12X\xf5\xaf\x14i\xf3\xdfBv\xfd\x8bN\xdbs.}\t\x04"\x9f\xc4\xfd+\xc6\x1b\xfe\x0b/\xf0\xf6&*\x9e\x17\xd6\xa4U8V\xfbP\x1b\x87\xaf\xfa\xaa\xf2\x9eo8\xe9\x1a\x8e^\x91\xe6_zV>Ue\xed|V^\xad#\xf4\x05\xaf\x9a\xde\xe1\xc4i\xe5\x8c\x1c\xa9\x8b\x1d\xfdqQ.\xb1wmz\xb7P\xdd-\xbc\xf1\x92\x10\xac\xc3p\xcf\xe1Y\x91\xf8\x96\x0b\x8b\xa6\x8d$\xf3y\xe1~d\x0b\xe9\x9c\xd5\xbb\xa7\xbc\xb8\xb3\x93\xfb-t\xd7\xd4\x991\x14w\xad\'\x93\x9e\xfb\x8ck\xb8\x91\xed^tj:\x8a\xd1w:\xb5Z\x9d-\xcf\x8a\x17[\xb0S\xa9\xe96\xb3\\/\x02\xee\x18c\xdcO\xba\xe3\x07\xf0\xc5S>\x07\xf0\xef\x8a\xaeM\x9cz\x86\x95c=\xd2|\xf6\xf7R\xbe\x9f$\x8a\x7f\xb8\xd2.\xc3\x9e8Rk\xc1>0~\xd6k\xf0\x16\xc6g\xf16\xb9\xf0\x9e\xceh\x81-o\r\xf5\xe3L\x0e\x0e\x15\xcba\x10\x9e\x07\'#\xd2\xbeJ\xf8\x93\xff\x00\x05\xcc\xd5t\xf2\xd6\xbe\x1f\xd0\xfe\x18\xddF\xad\x92\xb2\xbe\xa5\xac,\x9fUX\xe2\x8c\xfd7\x11\xef^\xbe\x07\x891\x10\x97\xb1\xa0\xe3S\x97}9\xbe\\\xd1\xb6\xbe\xad\x9fM\x96\xe7\x18\x9c*OF\xba_F\xbe\xedO\xac\xbfh\x7f\xd8K\xe3G\x88\xcd\xc5\xbf\x85\xf5\xed\n\xc6\xcahM\xb3Z^\xc5\x14\xb6\xf7\x08r7+\x88\x9eD,\xa4\xa9S\xb9OQ\xb6\xbf1>)\xf8\'U\xf0x\xfb-\xd5\xe5\x8c\xaf\x19*\xc6\x12\xe4C\x8e:\xb0\x06\xa2\xbe\xff\x00\x82\xe2\xfe\xd0\x1e\x10\xf1+M\xe1\xff\x00\x13X\xe86K1\x91l-mJ\xda\xaf9\x01c\x9d\xa4*\x07\xb7\xa79\xaf\x0f\xf1\x9f\xed\x7f\xacx\xf7\xc57\x1a\xc5\xc6\x8b\xa2\xde\\\xdeL\xf7\x13\x1dBK\x8b\xe429,\xc5S|q\xaa\xe4\x9e6\xd7\xde\xc7<\x9dZIb)\xb7\xa6\x96\x97\xe1wg\xf8\x1f\xb7\xf0\xef\x8e\x98\x8c-\x17\x87\xc6k\x1bi\xcb\x1b7\xea\xee\xef\xeaz&\xa3\xfb]x\xd3\xc2_\x06\xb5_\x86:}\xf2\xc9\xe1\xbd~\xe6=J\xe6\x14S\xe6\x9d\xbd\x15X\xf2!v\n\xcc\xa0`\xb4js\xd4\x1e\x03B\xf1G\x884u\x9b\xec\xb1\xc3o%\xd7\xde\x94"\x89\x80\x19\xf9U\xf1\xb9A\xcf!H\xcf|\xe0W\x15\xf1\xe7\xe3\x0e\xb1\xf1\x0f\xc7\xba\x1e\xab\xf6}\'O\x9a\xce\xc6+q\xfd\x95\xc4ck1b\xcaX\x85\'\'\xe5\xce\x00\x02\xba\xef\x14\xdbx\x8b\xc2\xb1\xc54\x96\x7f\xdbzL\xd1\xa5\xc2j\xfa\x13\x8b\xabx\xd4\xf4\x13\x01\xfe\xa6A\x9c2\xbe9\xe8H\xc1\xad0x\xcau\xd4e\x8e\x97#\xe8\xaft\xbc\xaf\xa5\xff\x00\xad\x0f\x1a~(T\xaf\x89\x9c\xb9\xbd\x9f\xbd\xa3\xb7\xa6\xbd\xef\xeb\xf7\x9e\xa9\xfb+k\x1a~\x8f\xf1R\xc7Y\xf1\x07\x88<I\xe1\x99\xf4\xf9\x04\xd6\xb7z5\xa47\x17\x0b)\xe00yN##\'\x0e\x11\xca\x9c\x102\x01\xaf\xd2/\xd9\x83\xe1\x1d\x97\x88\xf4\xe9<I\xe1{\xef\x86\x9ae\xe6\xa2\xed\xe6\xea~-\xf1\xec?\xf0\x90\xdf\x85;L\xd35\xc2\x89|\xb2A\x0b\xb7\x08v\x1c/z\xfc\xa5\xf8]\xf1[\xc2\xb6\x1a\xa4m\xab\xea:\x95\xbe?\xbf\xa5\xb4\x83\xf0dr?:\xfd$\xf8\'\xe1\xcf\xd97\xfe\n\r\xfb(i\x7f\x0e\xbc]\xe2\xab}3\xc5\xde\x17\x82\xee\xff\x00C\xd5\xee\xee\x05\x8d\xe5\x8c\xcc\xe5\xfe\xc5\x19\x8d7\x98\x1d\x81f\x8d\xcb\xe432\xede\x18\xe8\xce0\xf8ia\xdb\xa7V\xeb{sY~k_S\xe78\xe39\x96c\x84Px\x99J\xfb\xa8J\xd1~\xb1\xb6\xbf;\x9fHx\xc7\xe2\x87\x81\xfe\x14\xd8\xbc>9\xf8\xd9\xf0\x8e\xd6\xe2\xce\'\x9d\xac<7\xa8\\x\x82\xfc\xa2c."\xb6P\xaa\x06@.\xee\xa8\t\x00\x91\x91_%\xea\xff\x00\xf0X\x1f\x00\xcf\xf1NKK_\r\xebW^\x1a\xf3c\x07Z\xbd\xbe\x10\xc8\xc5\x14"\xc9,*\x18ya@\\\x19X\xaa\x81\xd4\x0cV\x85\x9f\xc1\x7f\t\xfe\xcf\x1f\x0e\xe1\xf0/\x80\xf4\xf8t\xff\x00\xed\xe9"\xb9\xf1\x1e\xa3\x0c\xb2\xcfu\xaeM\x18\xf9cye,\xe6\xd6,\xb7\x97\x19\xc2\x92Y\xca\x96n:\xcf\x81\x7f\xb2\xa7\xc2?\x08h\xd7\x1a\xd6\xad\xe0\xff\x00\x07\xea\x9a\xce\xa7\x96\x8e\xe2\xefOK\xa7\x89\x89\xc6\x16\'\x065\xc1\x1c\x92\xa0\x9f^q_\x97\x7f\xac\x14\xaa\xe2^\x0e-\xa4\x96\xb2\xba\xb7\xe6\xef\xea\xb4?\x13\xc4b\xbd\x9a\xe5\xa6\x9f\xab\xb1\xf4\'\xc3\xad~\xf3\xe2\xbe\x89g6\x93k}kg}!\x8a\x03\x1c\x02X\x89\'\x00\xe5H;I\xe01\x18 g\xa75\xd7ZC\xe2\x7f\x81\xbe\x15\xd6\xb5\x9dA\xb4\xaf\xf8E\xb4pd\xd5\xa4\xbd\x9b\xc9\x8a\xc3\xb1/\xbf\x05\t\xca\x8f\x94\x92I\x00d\xf1^S\xa4\xfcQ\x93\xc2:\xabj\x1a\x95\xed\xc6\x8f\xa6\xc3o\xe4Z\xda\xe93\xa6!(6\xc5\xbd@\x00m\x1d\x00\x00\x858\xf6\x1e\x7f\xf1\xb7\xc1\x10~\xd5>\x18\xb5\x93V\xf1g\x88\xa3\xb1\xb7\x99\xda\x1b\x0bk\xb0"\x9c\xa9\xc2\xcf-\xbb\x86C/\xcd\x80\xddq\xc0\'\x15t\xf3j)$\xe4\xf9\xf5\xb3\xbd\x9f\xad\x95\xf4d`\xf3:\xb4\xea\xaa\x8aN>k\xfc\x8f\xa5\xb4)|\x1b\xfbBhqjZ]\xc6\x87\xa8d\x90\xd1\xcec\xbd\xb7$\xff\x00\n\xdc\xc6|\xc5?\xec\x96\xfc+\xcf\xfe(\xfe\xca\xfa\x1d\xa3\xc2\xd7\x9e\x1f\xba\xb1u\x90L\x92\xda\xbb^\xc3\x13\x0c\x1d\xea\x0f\xce\xb8\x1c\xe5pF85\xf3\x8f\x81\xff\x00a]K\xc0\xda\xcak^\x15\xf1\xe5\xee\x83\x7f\x17F\xfe\xcf\xdb0\x1c`>\xd9B\xba\x9c\xfd\xd6R=E}\x15\xff\x00\x0b\x03\xe2\xf7\x83\xfe\x10_Ig\xff\x00\x08O\xc4O\x14i\xac\x8f\x0e\x99:\xdc\xe8\x8d\xa8\xc29\x90$\x81\xa5\x89f\xdb\xd0\x10\x88\xc4\x8e;\x1fw/\xcc0x\xa4\xa3\x8f\x84\\\x9f^\xbf\x92?A\xcbs,\xaa\xbdH\xacu8\xce\xfas$\xe3%~\xb7V\xf9\xb4yo\x86\xbe(xeb_\x0cGyu\xe6]^\xb6\xcb\x1dF\x17Y\xa1\xb8\xe0o\x05\x89\xce\xf27}\xe2\xdb\x89\xeeEy_\xed\xf2\xb2xc\xe1V\xad\xadZ\xdb\xdd\xcf&\x96\x96\xe2\x0b\xcce\x83\xbc\xaa\xad\xe6\xf1\x8d\xa07\xcb\x9e\xb9\x1c\xe7\x8a\xf9\xe7\xfe\n)\xfbf\xa7\x89<\x7f\xa7\xea\x97\x1f\x0f\xfcK\xe0}b\xf0K\x06\xb1\xa4\xcf\x7f\x0c\xcdm{n\xe8\xac\xc0l\x8eh\x98\x82\xb9\x0f\x1a\xe4\x80\xca[\'\x1e)\xf1[\xfe\n\x95\xe3\x1f\x89\xbf\x06n<\x03\xadB\xb7\xd67W\x16\xf2\x9dN\x7f\x97Rxbb\xc2\tYN\xd9\x17~\xd6\xdc\xc3~Pd\x9a\xfd.\x86aO\r\x82\xfa\xbc$\xdf\xba\xd2}V\x9a\x7f\xc0?\xa92\x7f\x102\\\xa3/\xa7\xecq2\xe7Qk\xdeR\xe6\x8b{]\xf2\xab\xdb\xa3}7\xbb7\xe1\xfd\xa8\xefu_\t\xeaV\x1a\xdd\xd4r[\xbd\xb3El\xee\xaa\x8d\x03\x16\x04\xf2\x00\xe0\xe4\x8e}\xab\xe8\xef\xd9\xc7\xc5R\xe9\x7f\x0fm\xd3A\xf0\xe6\xb5\xe2\xbf\x1bx\xb2\xc9,\xb4-2+)\xa1\x8bbG\x99.\xa6\x9eEX\x92\xdd\x01f/\xbf\x18PK(\xcb\x0f\x87\xfe\x17\xfe\xdcz\xa7\xc1\x0f\x12\xdb\xea\x9e\x1b\xd0\xfc\x03\x1c\xd6\xce$\x03U\xf0\xcd\x9e\xb0\xccA\xef%\xd2I"\xf7\xe66B3\xc68\xc7\xbf\xfe\xd6\x7f\xf0p_\xc5O\xda\x8f\xe0|~\x05k]\'\xc1z-\xc7:\xb2\xe8WwE\xb5\x90\x01\x0b\x03\x19\xa4s\x15\xb8\xcb\x13\x12\x1c1?1 \x01^&\x1f7\xc5\xd2\x97<\xa4\xdc\xad\xca\x9b\xd6\xca\xf7\xbd\xef\xfa3\xcb\xc5x\xf1\x8b\xa6\xfe\xab\x0eY\xc6Z9\xb9;\xaf{\x9a\xf6I\xdf\xd1\xda\xfd\xce"\xc7\xf6\xb2\xd7<\x13\xacj\x12Y\\E\x0c\x9a\x95\xcc\x12\xdd\xc00b\x9da%\x96&\xfe\xf4d\x9c\xe388\x07\xb0\xaf\xd4\x7f\x06~\xd3\xfe\x0f\xd14\r\'T\x8e\xde\xf3\xc6\xde0\xd6\xed\x17P\xf0\xdf\x85\xa1\xbb\x16\xcbm\x11\x88<\x9a\x96\xa7;|\xb6v\xc8\x0e\x14\xbe\x1bb\x97\x01C+\x8f\xc1m+\xe2F\xa1oz\xf7\x96\xd6v\xd7\x17{\xb7+\xcf\xfb\xc1\x11\xeb\xbboL\xfa\x13\x9cWW\xe1?\x8b\x9e3\x96\xd7T\xb1\xd55K\xeb\x1d?V*\xd7q\xdcZ\x83ot\x06D{\xc6\x01p\x85\xb7\xaa\x93\x80\xe1\\\r\xea\xa4tR\xc6\xe2\x1d)P\x8f\xbd\xcd\xd1\xfa\xeb~\xf7\xf9~\x87\xce\xe6\xde*S\xcc\xb0\xb5#\x89\x8c\xeas\xb7\xa2\\\xa9\xae\xaaS\xd1\xa4\xfa\xa8\xadV\x97KC\xf4\xff\x00\xe3\xdf\xfc\x15/\xc3\xff\x00\x04<Iu}\xaem\xf8\xa1\xf1Ec\xd9\xa7iv\xc1\xf4\xed\x03@\x8d\xc6\xef\xdd\xa1]\xf1\xc3\xcf\x19\x1fh\x9f\x01\xe41\xa9P~5\xf8\xfd\xff\x00\x05\x15\xf8\xb3\xfbK+\xc7\xadx\x86\xe7F\xd2X\x93&\x95\xa3/\xd9,\x94zmS\xb9\xbe\xae\xccO\xade\xf8\x07@\xd3<Euc\x16\xb1\xa0I\xaa^]X\x01cq\x15\xdc\x8d/\x97\x12\xb7\x0b,\x85A\x89\x88bA\xf9T\x907\xf1X~*\xf17\x82\xed\xef\x96\xdfM\xba\xd1\xa5i\xa1IIct\x86<\x8f\xb8L\xa1Sp\xe8J\xe5I\x1c1\xaf\x81\xcecU\xd7\xb4\xe8\xcaK\xbf\xd9\xd3\xca\xf6\xd3\xd2\xe8\xfc\x0f6\xc6V\xc6Us\xaa\xe3\x17\xb2\x84tQ]\x12Ih\xbbw\xdc\xe2m\xb4\x95\xd7/d[yc\x92eB\xecK\xedb\x07S\x93\xd7\xf35q|\x07tT|\xd0\xf4\xff\x00\x9f\x84\xff\x00\xe2\xabK\xfe\x11E\xd5m\xe4\x9a\xce8\xae\xad\xe2\xe1\xda\x16\x12\xacy\xe8\t\x19\x1fL\xf5\xa1>\x15]\xba+-\x8d\xc3\x06\x19\x04By\xfd+\x81b \xb4\x95\xd1\xf3\x8f.\xbb\xb9\xf4w\x89\xbf\xe0\xb3\x1f\x1e\xbcK,m\xa5\xc3\xa2\xe8\xea\t\x19\x83O\x0c\xd8\xc9\xe8p\x08\x1e\xbe\xb5\x9d\xe1O\xda\xc3\xf6\xb9\xfd\xaf\xb5\xcb\xaf\n\xf8\x7f\xc5Z\xf5\xe3:$\x97\xf1\xda\xb2X\xdaX\xc0\xc4\x81%\xc4\xe7\x88\xd0\x90@\x19,\xe4\x10\xaa\xc4b\xba\xbf\x87\x1f\x06t\xbf\x19\xdcCc\x1d\xbe\x97\xa8\xea:\x8d\xd0\xb7\x8aH\x9eQ\x15\x94o\x85\xf3d;\xf1\xbb\'\x81\xfe\xc3\x1e\xd8\xaf\xd0\xaf\r|\x05\xf0\xe7\xec\xed\xe0\x98|\x1f\xe1{\x11o\xa7\xd8\x9d\xf7\x13\xc9\xfe\xbfS\xb9\xc0\x12\\\xcc\xdd]\xdf\x1cvE\xc2\xa8\n\x00\xaf&\x8e\n\x85\x18\xca\xa4\xb0\xf1\xb2\xefy]\xbe\x97\x95\xf6\xeat\xe2+:q\xe6\x93\xbf\x92\xd0\xf8oD\xff\x00\x82A\xe9W\x1aTw\x9f\x10>\'x\x83]\xf1$\xec\xaf0\xd2a\x8cYA\x9e\xb1\xab\\+K\'\xfb\xd8\x8f\xfd\xda\xf3\xff\x00\x8e\x1f\xf0O\xdb?\x86\xf66\xf6\x1e\x1d\xb8\xd6|I\xaa^6\xf0\x90h\xce\xb1\xdbC\xcf2J\x1d\x81v8\xc2\xa8\x1c\x02N8\x07\xf4KQ\xd0-[\xfdd1H\xcc{\x8e\x9cQ\xa5\xf8j3\xb4\x08\xd4\x8eA\x18\xca\x81^\x15\\vc,G5\xed\x05\xb4V\x8b\xcb\xa1\xe7}u\xb7\xb2?0|\r\xff\x00\x04\xb1\xf1\xf7\x8d\xe6Y\x1fD\x87I\xb6\x90\xf36\xa1r\x91\xb7=\xfc\xa0K\xfe`W}\xab\xff\x00\xc1#<A\xe1\xe8\xad\xd7K\xba\xd3uR\xc3\x13\x9b\x98\xda\xc8D\xd9\xfe\x1f\xf5\x9b\x97\x18\xe7\x83\xed_\xa3\xd6\x1a\x05\xbcQ\x1d\xb1\xc0\xa3\x1f\xf3\xccu\xfa\xd3nto"fW\x1bXq\xc8Q\xb7\xf4\xae\xff\x00\xed\x0c\x7f\xc4\xe5\xf2\xb6\x9f\x8e\xa7T1\x92\x8b\xbc,~f\xf8\xef\xfe\t\x1b\xe2\xad7N[\xcd2\xf3J\xd5.\x00\xcb\xd8\xc5\x03[\xf1\x8evH\xc7k\x1c\xfa\x85\x07\xd7\xb5x\xaf\x8c?g\x1f\x15|\x1a\xd4V\xdfR\xd1\xf5\x8d&\xe6\xeb1\xc7\x18FSu\xdbj\xec\xc8|\xfas_\xb2\xd7\x1ato\x13~\xf9A_\x9b\xe5Q\xc1\xff\x00=\xaa\x8d\x9a\xc1ep\xb2H\x82E\xdd\x85\xc9$\xff\x00\x85mG\x88\xb14}\xda\xb6\x9c|\xf4k\xee_\xd7sjx\xa7\xcdy\xa4|k\xe0_\xf8$\x07\x84|Q\xf0\xc7I\xb8\x85\xfc]\xe1\xff\x00\x185\x9d\xbd\xc5\xf5\xd8\x97\xed\x10\xc5rcV\x91\x0c\x1c.\xd0\xe4\x8c\x02\xa7\x03\x86\xafC\xf8\x1b\xfb\x14M\xf0sF\xf1d\x9e9\xf0\xd6\x9b\xa8x\xa2\xd7W\x10\xd9\xdeAm\x1b\xc5\x1d\x82C\x1bC4\x0c\xb1\xa4\x88\xd34\xb21\r\xf3\x0f,.N\t?H\xde[\xdb_\xc9\xe7[\xcdqi2\xa81\xc4\x922\xa99\xeeT\x8c{\x0ejm\x1b\xc2z\xc6\xa7\x15\xc7\xdb\xae!\xb8Y\x1e0eyI-\x12\xa8\n\x1c\xe7sm\xc6\x00<\x01\xc0\xadh\xe7\x15\xaa\xd1\x95\x19\xcaRr\xea\x9e\xde\x9f\x81\x15+T\x9d7I\xcbM\xd1\xe6\xbe\x1f\xf0V\xaf\xa8\xe9\xf7\x17\x92\xdb^E5\xd1U\x86\']\xbeLc g\xae\t\xe3=\xf8\x03\xd6\xb4\x93\xc2\x9a\xd5\xb6\x8b\x0e\x9do\xa5\xc3\xb7j\xb3\xdclm\xdb\xf3\xcb\x12O~\x9c\xf6\xafh\xb0\x97\xfb*\xc8\xc4\xc5\xa4\xda\x0f\xca\x14\x05\xfa\xd6e\xee\xaf\x0bH\xcd\xe5\xa9\xe3h]\xd5\xe3\xc7)\xa5\x17\xce\xe6\xee\xf7<|E(\xdbS\xc7t\xaf\x82\xd7QM#\xdf\xdfy\x92HFS%\xb3\xf9\x03]\x8f\x87\xfc\x19\x16\x84\x99Y\xb8\x0b\x8d\xa9\x16\xd5\xef\xd6\xba\x89Z6\x93\xee\xe3x\xee\x14\xf1Ud\xb6\x85N\xe9\x1dNNH\xdbZ\xd3\xcb\xa9\xc3X\x9c\xf0\x84b\xf4,\xe9\xaf\xe5\xbf\xca\xbf\xbcl|\xc4\xe2\xb5SQ\x06`\xc5\x97\xcc\x18\xf9\x97\xadd\xa4V\xf9]\xbeVOL\x8cf\xac\xd8I\x0e[j\xc6\x07\xaa\x9e\xb5\xd9N\x9f.\x87u\x1a\x8d4\xcf\x9b\xbfmO\xd8_\xc2\xff\x00\x14\xbe\x1d\xf8\x93Z\xd1|\x1euo\x1cjW\xd1\xde5\xcb]\xcb,\xdbL\x85\xa7\xf2\x91\xdfb\xb3g8\x03$d\x0fJ\xf8\x0f\xe2\xa7\xfc\x12\'\xe2\x9d\x97\xc3\x9do\xc7Zo\x87\xee\xa3\xd3t[\x7f\xb5\xdci\xd7\x92\xaa\xeaR\xc4\xb92I\x04#,\xcb\x1a\x02\xec\x1fkm\x04\xa8l\x10?g e\xd9\xfc8>\x94\xdf\x1fx\xbfG\xf8c\xf0\x97\xc4\x9e&\xf1-\xca\xd8\xf8{H\xd3\xa67r2\x82d.\x8c\x89\n\x0f\xe2\x96F`\x8a\x83\x92O\xa0$}\xa6M\x98Wv\xa0\xfd\xeb\xbe\xb7o\xd0\xfb\x0c\x0ei^\xad%\x83q\xe7m\xabn\xdf\xa2?\x9a;\xad5\x90\xee\x1d\x1b\x91\xe9\x8am\xa5\x86\xf9\x88\xdb\xce:\xd7\xaa\xf8\x9f\xe0e\xe2\xe9\xcd6\x94\x1a\xff\x00\xc9\\\xbd\xb0\xc3\\\x15\x03\x96E\x03\xe7\xc7u_\x98u\xc1\x19#\xd0\xff\x00do\xd9\'\xfe\x1a[\xe1\xdf\x8a\xad\xf4\xd8<\xbf\x16\xe9\xbb\xee\xb4\xb6,\x7f\xd2\xccI\xf3[:\xff\x00\x06\xe2\n\xa98;\xc8\xed\x9a\xfaLT\x9e\x1b\xdd\xaa\xac\xee\x97\xdezX\xbc\x8f\x13\x85\xc5}W\x13\x07\x19Z\xf6k\xa7\x93\xd9\x9f<\xcdh-$\x8aKs$rF\xb9v=\x18\xf5\xaf\xa9\xbfgo\x18Y\xff\x00l\xe9z\xbe\xb7y\xa5h+\xa1\xff\x00\xc4\xc3\x1a\xad\x9d\xcd\xc4R\xc9\xb7"\x13\x14(\xe5\xd6erU\xd9\x7fvN\xe0\xea@\xaf\x1d\xb5\xf8={\xae\xcb}\x1c%\x13\xec\xa2)$\xf3>W\x08\xfc3\x01\xdc\xa1# s\xfa\xd7\xbex\xcb\xc0"\xef\xc3p\xeaV\xf6\xed\x0c\xda}\xaa\xdb\x14e\xcf\x9b\n\xafL\xfb\x0f\x98\x1fL\x8a\xf6\xf09}^I9-6\xd7\xa9\xfa\x87\t\xf0\xde.\x11\xaf\n\x9e\xecZI&\x93\\\xda\xd9\xa5\xfd\xd7\xba\xea\x9e\xe9\xd9\xac\xef\x8b\xfe\x08\xd0\xff\x00i]WQ\xd5\xfe\x19\xf8\x97R\xb5\xf1=\xd4\x01\xf5_\t\xdf\xdeI*\xdeB\x80\xb1kY\x0e\x04\xc8\x83$\xc7\x80\xc82J\x01\x96\xaf\x9b\xda\xd2\xdfL[\xab{\xa8o"\xd4m\xdc\xa1\x8d\xb6\x85\x8f\x1f\xc2{\xe3\xd3\xf0\xafH\xb4\xf8[\xe2H5\xdf\r\xcd\xe1y\xaf\xee\xae\xb5K\xed\xb6\x82\xdeD\x86k[\xa8\xd80\n\xe4\xe1HVG\x0eq\xc1\xf6"\xbb\xbf\xdb\xb3\xc3\x90\xda\xcfiu\xafC\x0e\x8b\xe3\xc8a\x8do"\x05\x1e=z"0.A\x85\x164\x9d[;\xd3\x01X|\xcaz\xa8\xf9)9\xd3\xaf\xec\x9e\xd7\xb5\xba\xc5\xfev\xfc|\xcf\xc4\xf3\xc9sb\xaaC\x11\x15N\xb4[\xba[;vZ\xd9\xf9\xdf]\xcf\x99\xeddkfu\x8cm\xdd\xc1\xab@\xcc\x07\xfa\xc9?\xef\xe1\xa7I\x16,\xd9\xf6\xf2\xa3\xb5VX\x99\x86w7<\xf4\xafB*/S\xe7\xbd\xa1\xfa\x13\xe0\xeb\xedZ\xc7K\x91\x97u\xb6\x9f\x1d\xec\x17\rj\xbf)g\x8c\x92\x1dx?0\x0c\xcb\x9e\xbb]\x80\xe4\xd7\xdf\xdf\x0c?j\xbf\x07\xfcJ\xd2l\xf4\xff\x00\x10\xeb\x11i\xfa\xd1\xb7\x8dc\xd4\xafm\xbe\xc3e\xa9\x1d\xa0ww\xf2\xa4\xc8\xc1\xf3\n\x86\xc1o\x97;G\xc0\xbe\x11\xd2\xb5\x8b\xed~\xde\rQ\xa5:\x1c\x80\xc8o\xd6,r:q\xdf\x9fL\xf4\xad\xef\x13\xeaVz6\xab\x17\xdb\xfc\xc5\xd0\xd5\x8c/\x7f\x0b0\x99\x17\xf8[f\t*{\xe7\xde\xbcH\xe2a\x83\x8a\xc2\xe6T_\xb3\x93\xdd=b\xfb\xf5V}\x9e\xe2\xad\xfb\xd5\xed(\xb4\xdfT\xf6\x7f\xa9\xfa\x1b\xafx-\xac\x84sy#\xc9\x98\tb\x91\x08h\xe5R8*\xc3\x86\x07\xd4\x1c\x1a\xc9\x8a\xd1\xad\xff\x00\x85\x95Tc\x81\xd3\xad|\x15\xe0\xef\xda\xab\xc4\x1f\x06\xfcx\xfao\x81|}\x05\xf7\x86\x04M<\x89$\x91\xb4q\xb0\x1d\x1a\xdd\xf7D\xd9\'\x03\n\x1b\x1c\xd7m\xa4\x7f\xc1Zukm~\xde-r\xdf\xc0:\xa5\xbf\x98"\x9e\t\xad.\xf4;\xacg\x04\xac\xead\xb6\xc9\xed\x94\x03\xd7\x15\x85n\x1b\xa1Ys\xe1+Gv\x92\x93Q\x96\x9eOO\x9d\xc9\x95\x19\xc2\x94k\xce-FW\xb7\xda\xda\xd7\xda\xed-wi\x1fb#I\x0cg\x00\x0e;\x8c\xd5{\xb9\x83\x12[\xe7lp\x00\xc6~\xb5\xe7\x1f\x0f\xff\x00l\xff\x00\nx\xba\xc9\x9fZ\xd1\xef|\x16\xdetq\x99/u\x18/\xed<\xa6}\xafq\xe6\xc4\xaa\x04Q\xf0N\x01v\x1c\xaa\xb6\rj\xd9\xfe\xd6_\nn|\xd3m\xf1\'\xc36\xa3-\x93|.,\xf7\x0e\x99\x06h\x95q\xc7\x18\'\x8cW\x8f\x8a\xe1\xbc\xca\x9d\xe2\xe97n\xda\xfeWL\x98\xf2\xdb\x995o\xeb\xfa\xd4\xeb\x95$\x08\xbf\xbbd\x0cq\xc7R*\xab\xe9\x8a\xd3o-\xbb\x91\xc3r+\x9dO\xda7\xe1\xc5\xfcl\xd6\xff\x00\x13>\x1d\xcd\xf6\x7f\xbf\x9f\x10\xdb(L\x8e>\xf3\x0c\xe7\x07\xa7\xa5\\\xb9\xf8\x89\xe1\xd9<\x08|L\x9e&\xf0\xcc\xfe\x19\x8e\xfc\xe9\xa7Y\xfe\xd3\x8b\xfb<]\x08\xc4\xa6\xdcO\xbb\xcb\xf3Dd6\xcd\xdb\xb6\x9c\xe2\xbc\n\xb9>)i:r\xfb\x99\xa7\xbf\xd1\x1d\x05\xbc1\xc3h9@\xc7?2\xf1\x9a\xb9\xa3\xebQ\xe9\xf7K\x1b\x1f2)\x81\x8d\xff\x00\xa7\xe3\x9f\xe7^Gy\xfbQ|1\xb4\xb1\x9a\xf2\xe3\xe2\x97\xc3\x94\x82\xdd\x95%s\xafA"D\xcd\xb8\xaa\x9d\x85\xb9`\xac@\xeav\xb7\xa1\xac\xbb\x9f\xdbG\xe1\x1c\xc2\x18-\xfe\'\xf8\x1e\xeak\x80Z5\x82\xf5\xdc\x908\'!\x08\x18>\xb5\x14\xf2\xfcL}\xe8A\xe9\xe4\xff\x00\xc8?y\xd9\xfd\xc7\xbcM\xac\xab\xb1\xd8\xaf\xf3\x83\xf7\x87J\xcf\x92\xe5\xe0\xdd\x8eww#5\xe5W\xdf\xb5\xd7\xc3\xa8\xf4\x7f\xb7\xb7\x8f<-%\x98\x08\xa1\xad\xe7\x92\xe6R[w\x02(\x91\xa4\xe3i\xe4\xae\x01\xc7\xa8\xcf7\xa9\xfe\xde\x7f\x0b\xf4\x97\x8dc\xd7u\xedO*$\x02\xc3\xc3W\x93\x8c\x11\x9ce\xd5\x06\xee\xc4pA\xe3\xd6\xbd*y&c5x\xd1\x9b\xff\x00\xb7e\xfeG\x1dI]\xdbO\xbd/\xcc\xf7\x18\xef6\xc6\xc5\xd21\xe5\xf7\xdd\xb7\xf2\xa8\xcf\x88#\x8d2\xac\x83p\xe0\x91\xcd|\xd1\xaa\x7f\xc1G<2\xf7A4\xbf\x04\xfcJ\xd6\x95\x8f\xfc\xb4\xd3\xedt\xf5o\xa1\x92f=?\xd9\xaew[\xff\x00\x82\x90j\xc4O\x16\x8f\xf0\xf7\xc3ZL\x91\xfc\xdb\xbcA\xe2\x07\xbc\x95\x17\xd7\xc9\xb5X\xf2\xde\xdb\xcdz\x11\xe1L\xdd.i\xd3p\x8fy\xb8\xc1\x7f\xe4\xcd\x19\'\x0b\xdb\x9d|\x9ao\xeeWg\xd6\xd0\xebFV\xdd\xe6nPp\x17o_z\xd5\x9e\xf6\x1f\x0ci\x0b\xa9k\x17\xfan\x81\xa5\xb1\xc9\xbc\xd4\xee\xa3\xb4\x80\x8f\xf6ZB7\x1fe\xc9\xf6\xaf\x80|Y\xfbq|K\xbf\xfb?\xfcT\xcf\xa4GtH\x8e?\r\xe96\xfa\\G\x8eA\x9d\xbc\xdb\x8f\xc9\x85s>.\xf0\xcf\x8b5_\x1cY\xeaW\xd7\x96\xda\xd4w\x96\x91\\\xad\xed\xfd\xcb\xdf_\x97\xe7\xcc\x8bt\xec\xec\x14p7\r\xa3\xe7\xc0\x1cq\xd5\x87\xca2\xea\t\xd5\xcc1\xd0Q\x8a\xbb\xe4\xbc\xbeI\xd9F\xefe\xab\xbb;\xf08y\xd7\xa8\xe3\x1bF\xc9\xbb\xce\xf1Z+\xd9Y96\xf6J\xda\xbe\xabs\xee\x1f\x1e~\xdf\x1e\x01\xf0\x06\x8b<\x9a%\xbe\xa1\xe3\xadJ4&\xdc\xc3\x03\xd8\xe9nGV3\xca\xa2Y\x10u>TG#\xa3\x0e\xb5\xf9\x9b\xfbi\xfe\xdb\xdf\x10?h\xcf\x8c\x1f\xd9\xfe%\xd6`\x9b\xc3\xba|\x82m\x1fM\xb0\xb7kM>\xd4:czBI&C\xca\x99$,\xe4\x0f\xbd\x83]\xcf\x80\xecc\xf0\x8f\xc3\xedkM\x13\x86\xbd\x92\xfa\xe8Y\xf9\xa0\xcc\xd6\xd0\xb9\xfd\xdf,q\xc2\x9d\xbbNzf\xbc\xb7\xe2\xdf\xc1\xeb\x9doL]N\xea\xe1b\xd5\xb4\xa8\x83Z\xb0\x1b\x92\xf5\x01,\xc8\xfc\xe5[\'*\xdc\x8e\xaaF\x08#\xe9\xa8gy\x06\x19\xd2\xa5\x82\x97\xbc\xec\xe5&\xee\xd5\xd6\x89\xbb[}\xec\xb4\xd9\xbe\xdf\xa7e\xf3\xca\xf2\x8cF\x1e\xae\x1a\xab\xa9R\xc9\xc9\xe8\xa1\x1b\xa4\xec\x92N\\\xda\xd9\xbem=v\xe4D\x97SL\xe8\xa5<\xb9\x17\x01ORO\xf5\xafX\xf0\xc7\xed7\xf1\x1f\xc0\xf6\xda}\xd5\xb7\x88\xa3\xbc\x9am#\xfb\x1e\xdbP\xd4m\xa3\xbb\xbe\xb7\xb6t*bI\xd8o\x18\xc3l,[n\x01\\u\xaf3\xd0-%\xd5\xde\xceh\x97u\xad\xe2\x96\x94\xb7h\xb1\xf3\x12{c8\xfa\xe0W]\'\x86\xef<k\xe1\x08\xec\xcd\xaa,:\\)e\x04\xb0\xae\xd6\xc0vtf\x1d\xc8$\xae\x7f\xbaG\xa5}f+\x13\x85X\xdaxJ\xe97%u~\xf7\\\xbf\x7fC\xf5l\xeb8\xc2\xff\x00j\xe1\xb0\x18\x88\xc6J\xa4[NOf\xec\xe1n\xcaVg\x0fc\xad\xcf\xa3|K\xd3\xee-\xe4\xf2\x9a\xdc\x99\x9bw\xdc!cr\x14\xfb\x12\xa2\xbd\xd7\xe1\xe3j\x1e/\xf0\xb7\xf6\xf7\x87\xed\xa6\xd4\xac7\x81\xa8i\x8cq=\x9b\x7f\x10\x8c7\xdfA\xd4c\x828\xf6\x1e]\xe0\xcf\x85\x13|@\xb9\xbc\xf3\xae\xadt\x96\x84\x1bX%\x9c\x13\xe64k\xb5\xfav\xdcXg\xda\xbd\xaa\xe2\xee\xfb\xe0\xff\x00\x82\xb4\xbbxt\xfd?\xc3Z\xa5\x9a\x96:\xb2N/\x13QV\xfe\xecx\xeb\xc8\xe1\xb23\x8ct\xc5yo\x88\xbd\x86>t\xe9{\xd0N\xd2]\x9a\xec|\x1e}\xe25l\xb7=\xab\xec\x93\x95$\xf9e\x1d\xb5Ox\xf9\xfe\x0e\xdeG\x96\xeb\xcf\x0f\xc3\x9f\x88Q\xd8\xff\x00jjz\x1e\x9b\xa9\x08\xb5->h\xee\x8c\r\x17.\xaa\x08\x03+$gzg\xd0\xe0\x8a\xe7\xff\x00i\x8d\x1e\xd7\xc7\xb2\xd9\xebo\xa5j\xb7S\xc4~\xcds\xa8\xae\xa7\xe6}\xbdG\xdd\x7f-\x90\xecn\x9f\xc4A\xc1\xe3\x9a\xe8\xfe>\xeao\xf1\x8f\xc4\xfa\x0b6\x9f\x0e\xa9w\xa6\x95&\xe6\xda&\x8f\xed(\xc4\x16FQ\xc1b\xd99\x18\xe4\xd7\xa6\xfe\xd1\x16^\x19\xf1\xfe\x87\x1d\xbf\x84t\xcb\xed3P\xb2\x823=\xac\xc8c-\xf2\xf4\xc6Ols\x81^\x06m\x8a\x8dI\xcb\x1f\x87\x9d\xd3i;\xe9k\xff\x00\x91\xf9\x9f\x12f\x94\xb1\xd9\xa4\xf14n\xd4\xac\xd5\xd5\x9a\xd1]y\xdb^\xafK\x1f+x/\xc0Z.\xa5\xa8\xa5\x9d\xc4w\xd0\xc70%\xa5\x92\xe5\x03A\xd7\x07\x1b0GN\xb5\xa3u\xf0\xff\x00\xc3p\\\xc9\x1a_]:\xa3\x15V\xdc\x9f0\x07\xafJ\x96\xff\x00B\xbd\xb2\xd6M\x80\xb3hn/\x17i;p@\xfa\xd5\xe8\xfe\x13L\x11~Xz\x7fz\xbc\xda\xd8\xb8B\xcaU\x1f~\xe7\x83\xcd+\xdd#\xef\xff\x00\x8c\x9a\xa7\x87\xfe\x1fh:5\xbb\x7f\xa7}\x98\xedx\x83c\xca\'\xd7\x1dy\xed^\x1f\xf1\xcf\xc6\x86\xe3J\x92\xe3JhYX\x8c\xc5\xd1\x8f=1E\x15\xf7y\xe6\x16\x9e\t\xbc,\x174jB\xef\x9b[i\xd3\xb1\xe1\xfdj\xa4\xdc^\xdc\xad\xad;\x1eJ\xdf\x0f\xa6H\xe4\xd7,\xe6\x8e\xdfP\xb7O6[<\xe2F\xc8\xecq\xfa\xd7\x07q\xab\xcd\xe3\x1b\xf8\xec\xe3\xf2\xb4\xfb\xc9\xa49\x98)lg\xb9\xfa{c\xebE\x15\xf0\xb52\xea4q\xd5\xa9Ei\x05\x0b_\xcdm\xe8{tqU\x1d\x08\xcd\xee\xef\xf8\r\xf8\xaf\xe1\x0b\xaf\x06\xf8\xb7I\xb7]V]B\xc4\x84bT\x15\x8c\xb9<\xf1\x93\x93\x9c\x1c\x92j\xf6\x83\x06\xa7\xe1K\x96\xbak\xdb\xabX\xd8e^\xd8\x9c\xe3\xb7\xb7=\x0eA\xe34Q_e\x97\xd6\x9a\xca\xab\xd7\x8b\xb4\xa2\xd5\x9a\xe9\xa7\xfc\x03\xf5\x1c\x874\xaf\x1e\x15\xc7b\xe4\xf9\xa7\xcd\x15w\xaf\xc6\xb9^\x9eIi\xd1\x1fNx/\xc1\x9e\x1e\xd6<\x1b\xe1\x9f\x11^]i\xba\xa4\xd2,\xb0\xeb\x1al\x90*\xdc@~c\x1d\xc0\\\x9d\xea\x07\xca\xd8\xc0\x1f)\xc7\'\x1eu\xfbA|I\xd6\x1f\xc5\xf6\xbe\x13\xf0\xbd\xe7\xfcQ:K#\xcdf\x11[Nk\xd6\xc9\x96eL\x15\x04\x06T,\xbc\xb1S\xebE\x15X\\\xf3\x17S\x01*\xb3\x97\xbd\x15&\x9e\xbb\xa4\xda\xeb\xdc\xc7\x840\xf8Z\xb9=H\xd4\xa1M\xfb5;7\x05wh\xb9+\xbe\xba\xfe\x07\x11\xf6-[T\xd4\x96\xe7\xec\xbaM\xa5\x9c\x8d\xb5"\x87M\x8d#\x8f\x0b\xc2n \x9fq\x93\xc8\xce=+\xad\xf0\xdbG\xaa\xf8F\xfe]:\xea\xd6=N\xc2M\xb7A\xe3\x11y#\xe8\x00\x04q\xdf\xd2\x8a+\xcd\xa7\x9dcqThJ\xa5Y+\xc6W\xb3j\xf6j\xcd\xeb\xb9\xf2\xfcI\x87\xc3<\xab\x05\x89\x85\x18FMJ\xfc\xb1J\xf6kW\xe7\xdc\x9f\xe1\x9e\xb7\xaaC\xe2\xcbk\x8dcX\x9e}%n\x07\xda\x16\xde\x13"\x14\x1d\xb6\xe4u\xc7\xaf\x15\xab\xf1o\xe3v\x8f\xe2\xef\x12\xea\xd6\xfe\x13\xb1\xd4-\xact\xfc\x11%\xc3\x94K\x83\xb7\x07\xe5\\m\x03\xd34Q^z\xc4\xd6\x9b\xa9\x19NZ]\xee\xef\xb7\xa9\xf2\xb2\xb2Qi/\xb9wG\x97h\x9f\x17m\xfcA3iz\x95\x95\xa5\xa5\xb4\x8cY\xefl\xd2O6<v$\x96;~\x9c\xd7a\xf0\x9b\xc0~\x13\xf1\xd7\x8c&y\xb5\xab\x1d+\xec\xb18\xb6\xbbh\xcb,\xac:\r\xb9\x18\xcf\xf9\xc5\x14W\x93\x9aaa:Jr\xbd\xd2\xef\xe4uQ\x93U,\xbfB\xe7\xc4=\x19\xb5\r2\xdeK;\xa4\xb8\xb7\xd3w\t^\xdf?!=\xf0:~=3\\\xcf\x82\xbcM\xaa\x0b\xcf\xf4{\xc9\xae\xadrA\x9byl\x0fL\xf3\xd2\x8a+\xe5\xf2\xec-:\xb87N\xae\xaa\xfdMk\xd4\x92\x92h\xef,\xe6\xd2o\xf5\x8b;M5\xe4\xfbD\xa73\x16\xdc7\xb7\xd7$V\x97\xc4_\x87\xf7S[yd1\x9a5\x1b\x95\x19x\x1d\xbd:\x8a(\xaf\xa2\xe2\x8e\x1f\xc1\xe1\xf2Z8\xfa1\xb5K\xda\xeb\xaa\xb6\xc7\x99\x82\xc6U\x962T\xa4\xf48\xbd?\xc1\xdao\x85\x96\xed%\x8ea6\xa4v\x84/\x88\xd3\x90K\x05\xe8\t \x13\xef\xf55\xed\xbf\x00\xff\x00g\x01\xf1#\xe1\xee\xad\xa9>\xad\x0e\x93ca\x99Im\xe9\xbd\xd4d|\xea\xa4\x0c`\x1f\xc4QEy\x99%i\xe6Ua<[rj6Z\xf6\xd8\xf5\xb1\xf8\xaa\xd2\x92\x94\xe6\xdbI$\xdb\xd5%\xb2^\x9d\n_\xb2\xdf\xc0\x1d/\xe3\xb7\xc6k?\r\\k_a\x8eY\xa5\xb9\x9e\xf48M\xc3qb\x89\xbb\x00\x97c\x92}\t5\xca\xfe\xd0_\x0c\xf4\x9f\x86\xbf\xb4^\xbd\xe1Xoc\x9bL\xd2/~\xcd\x1c\xa0p\xf8\x00\xe4\x0e\xdfA\xde\x8a+\xe9p\xb4i\xd5\x85:\x95#v\xe6\xe2\xf7\xd5%\xd4\xe0\x9dI\xcb\x9eM\xea\xd75\xfc\xdd\xb5=\x17\xc4\x7f\x06<\x0b\xf0\xb7\xc1\x9a\x0f\x8f<=\xe3k}cR\xb0x\xe6\xba\xd2^T\xdc\xb2+\xabcf\x03\x81\xc1\x1c\xe79\x1c\xfa\xf3_\x1e\x7fj\x9d\x0f\xe3\xd5\xda\xddh^\x03\xd4\xf4\x7f\x14O\x1a\xc0\xf7\x8a\xe8\xd1\xb2)\x1c\x820\xc4c#\x04w\xa2\x8a\xd2\x8d\x1an\xbc\xb0QV\xa7)$\xd2\xf5\xf3\xbe\xa7,\xb1U\x15\xea\xf5G\x91\xdch\ti\xad\xc8\xfa\xe3Ikyj\xe0\xa0\xdb\xf7\xd4\x8f_\xaf\xeb^\x97a\xe0\xbf\xb6X\xc32\xc9\x0e\xd9cW\x19\x8aN\xe3>\x94Q_Q\xc3\xfc7\x83\xc4U\xadB\xa2v\xa6\xd2Z\xeb\xaf}\x0f7\x15\x99V\x82\x8c\xe2\xfe%v\x7f\xff\xd9'
2023-06-29 11:10:22,049 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:10:24,246 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:10:26,102 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:10:28,195 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:10:33,468 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:10:35,665 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:10:38,870 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:10:42,009 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:10:47,264 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:10:49,367 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:10:54,714 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:10:58,900 - INFO - th.jpg
2023-06-29 11:10:58,900 - INFO - b'\xff\xd8\xff\xe0\x00\x10JFIF\x00\x01\x01\x01\x00`\x00`\x00\x00\xff\xdb\x00C\x00\x02\x01\x01\x02\x01\x01\x02\x02\x02\x02\x02\x02\x02\x02\x03\x05\x03\x03\x03\x03\x03\x06\x04\x04\x03\x05\x07\x06\x07\x07\x07\x06\x07\x07\x08\t\x0b\t\x08\x08\n\x08\x07\x07\n\r\n\n\x0b\x0c\x0c\x0c\x0c\x07\t\x0e\x0f\r\x0c\x0e\x0b\x0c\x0c\x0c\xff\xdb\x00C\x01\x02\x02\x02\x03\x03\x03\x06\x03\x03\x06\x0c\x08\x07\x08\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\x0c\xff\xc0\x00\x11\x08\x00h\x00\xca\x03\x01"\x00\x02\x11\x01\x03\x11\x01\xff\xc4\x00\x1f\x00\x00\x01\x05\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\xff\xc4\x00\xb5\x10\x00\x02\x01\x03\x03\x02\x04\x03\x05\x05\x04\x04\x00\x00\x01}\x01\x02\x03\x00\x04\x11\x05\x12!1A\x06\x13Qa\x07"q\x142\x81\x91\xa1\x08#B\xb1\xc1\x15R\xd1\xf0$3br\x82\t\n\x16\x17\x18\x19\x1a%&\'()*456789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\x83\x84\x85\x86\x87\x88\x89\x8a\x92\x93\x94\x95\x96\x97\x98\x99\x9a\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xe1\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xf1\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xff\xc4\x00\x1f\x01\x00\x03\x01\x01\x01\x01\x01\x01\x01\x01\x01\x00\x00\x00\x00\x00\x00\x01\x02\x03\x04\x05\x06\x07\x08\t\n\x0b\xff\xc4\x00\xb5\x11\x00\x02\x01\x02\x04\x04\x03\x04\x07\x05\x04\x04\x00\x01\x02w\x00\x01\x02\x03\x11\x04\x05!1\x06\x12AQ\x07aq\x13"2\x81\x08\x14B\x91\xa1\xb1\xc1\t#3R\xf0\x15br\xd1\n\x16$4\xe1%\xf1\x17\x18\x19\x1a&\'()*56789:CDEFGHIJSTUVWXYZcdefghijstuvwxyz\x82\x83\x84\x85\x86\x87\x88\x89\x8a\x92\x93\x94\x95\x96\x97\x98\x99\x9a\xa2\xa3\xa4\xa5\xa6\xa7\xa8\xa9\xaa\xb2\xb3\xb4\xb5\xb6\xb7\xb8\xb9\xba\xc2\xc3\xc4\xc5\xc6\xc7\xc8\xc9\xca\xd2\xd3\xd4\xd5\xd6\xd7\xd8\xd9\xda\xe2\xe3\xe4\xe5\xe6\xe7\xe8\xe9\xea\xf2\xf3\xf4\xf5\xf6\xf7\xf8\xf9\xfa\xff\xda\x00\x0c\x03\x01\x00\x02\x11\x03\x11\x00?\x00\xe8?g\xdf\xd8\xaf\xc5\xdf\x0b\xfcuo\xe2\xcd?\xc5\x1e0Y\xb4\x99\xb7\'\xf6\xed\xdcS\xd8\xcf\x90T\x83\x0e\x07\x9c\xa3 \x90A\x03\x83\xd4WY\xf1\xdf\xc0\xbf\x17>,\xc1\xfd\x8dq\xa0\xfc\x1d\xf1%\xabNUV\xefN\xb1\xb3\xb7\x8f9\xc4\x8d+B\xe4\xf1\xdcr\t\x1fQ\xdb\\k\x92XM#;\xed(\xdbw\x19\x15\x94\x12x\x1e\x83=1N\xbd\xf1\x0e\xa4\xb6\x8d&\xc5h\xd4\xed>Y\xdcA\xef\x9e+\xe1p\xb9n\x1b\x0f\x0fgIJ\x11\xdd\xa8\xc9\xa4\xfeI\xe9\xf2\xb1\xe7\xd6\xe7\xaa\xb9\xeb\xb6|\x1f\xf1\xcb\xfe\t]\xf1\x8bB\xd1n5\xef\r\xfc9\xf83kw\xa6\xcf\x0c\xf6\x17\xde\x18\xf1"\xdb\xea\xb6\xf7\xa9 h\xee\x06B\x99\x959\x1e^\xd5C\x9c\x9c\xed\x14h_\xb6\xef\xed\x7f\xe1M\x17Y\xf0^\xaf\xa2\xfcG\xf0\xe7\x88\x9e\x13k=\xed\xb6\x88\xf2\xabF\xc3\x120\x95"\x91\n\xed\xe0\x94c\xd7\xa85\xf6\xd1\xf1\xbc\xfb@\xf2\xdb\xd3\xe6SZ\xde\x18\xf1\xf5\xd4\x0c\xbeU\xc5\xc4\x1bH#d\xac\xb8\xfc\xab\xd0\xa7Z\x94)\xbaT\x9c\x92\xef{\xb5\xdfVs\xf2\xd3\x93V\x96\xc7\xe5>\xb5\xf0\x97U\xf8\xb7\xab\\[x\xc7Y\x9fW\xf1PQ4\xda\xdc\xb9\x8e\xe2\xe7\x7f!$W\x03yLm9\xc1\xe2\xab\xf8w\xf63_\n^\xfd\xb6\xfa\xf2\xe3T\xb7U?\xe8\xd1\xc7\xe5F\xde\xed\xf3\x168\xed\xb4\x8f\xad}\xc1\xfbp\xde\xea\xbf\x1a|I\xe1\xa8a\xf0g\x8a\x86\xb3\xa4\xf9\xb1\rN8\xfe\xd5\x15\xd4\x0eCl&%m\xb8|\xb0,\xd9\x1b\x9b\x8ex\xf3\xbd\x1b\xe1/\x8a\xbc:\x97M}\xe1\xfdnO\xb2\xa3M \x92\xd1\x8a@\x8a73\xb3\xfd\xdd\xaa\x01$\x93\x80\x05~k\x9dW\xcdr\xdcd\xa8\xe1\xa5/e=SJ\xfb\xee\x93\xd6\xda\xdfDy\xf8\xac\x0c*U\xe7\xe5\xe6o\xcbO\xb8\xf3]\x17^\xb6\xf0o\x85V\xc6m&K\x1d2\xd6/&\x13k\x1b<h\xbd\xb3\xd4\x83\xdf\x9ez\xf5\xaf\xd1\xef\xf8#o\xc5\x8b\xbf\x11\xf8n\xfbZk\x1b\x894\x1d.%\xd0\xac/$b\xd2\xfe\xec\x87\x92\xde\xde\xdccs\xf4g\x9aVTA\x81\x92r\x07\xc3\xdf\x12\xf5\xeb_\x82\x11\xe8\x87\xc6\xd0\xd9\xe81\xf8\x96\xc9u;D\xbc\xbb\x86E\xd4l\xe4,\x8b"y&@\x14\x95=px\xe4W\xa6\xfe\xc2\x9f\xf0Q\xd9\xbc\x00\xd0\xfc=\xf8\x7f\xae>\xa0\x8d$\xb7k\xa5h\xf6\x93]\xc5\x02\xbb\x16y\x19LE"\x05\x89%\xc9\x00\x92\x06r@\xae\xde\x13\x96\'\t\x8e\xf6\x98\x88N\xce\xf7\xf7e\xbb\xea\xee\x97\xde*\x14f\xa4\xa4\xa0\xed\xe4\x8f\xb7?k\x0f\xf8+\xcf\x87\x7fgI.\xd6\xce\xd3\xc4\x1a\xce\xa3\xbc\x93\xa7\xf8_G\x9fS\x93x\xeb\xe7\xea2\xc6\xb6\x91\x91\xddaY\x8a\xfa\xd7\xe4\xef\xfc\x14\x13\xfe\x0b\x0f\xf1\x13\xf6\xc1\xb5\xd4\xb4{;w\xf0/\x86\xf5\xabd\xb1\xd4\xe1K\xc7\xbb\xd5u\xa8\x91\x8by\x17\x17n\xa8D!\x98\x9f\xb3\xc2\x91\xc6I;\x83\x1a\xfd:\xd1\x7f\xe0\xa0>>\xd6bT\xb9\xbc\xf8\x81l\xf1\x8d\xa2+M%\x118\xf5f\xd9\x8f\xc6\xbc\xf7\xf6\x81\xf8\x9d\xf1\x07\xe3\xa6\x90\xd6\x17\xb7\x97Pi\xb2n\xf3\x06\xa7u\x01\x95\x91\xba\xaa\x88Q\x8ag\x1c\xe1\xc7z\xfb\xbc\xdb\x19R\xad\'*u\xb4\xfeU\x1f\xc1\xbb\xdf\xf07\xadVm|-\xf9=?S\xf0\x9e\xf2\x16\xb0\r\xe5\xb6\x19\x8e\x08S\\\xdf\x8b4\xbb\x7f\x10\xc1$\xd2\xc9\x0cW0\x9e\x0b\x1e$\x1f\xe3_\xac\xfa\xe7\xec\x1f\xe0\x9f\x13|=\xd6\xb4\x8dR\xcbL\xbf\xd75\x8b\x96\xbb\xfe\xdf\x8bM\x8e-B\xd2@\x9b#X\xdcr"E\x1f\xea\xc9!\x89fl\xb1\xc8\xf9[\xc6\x9f\xf0I?\x1bi\x10<\xba^\xa9\xe1}q\xc1\xf9c\xf3$\xb3\x91\xff\x00\xef\xb5+\x9f\xabW\xcb\xe1q\x8a\x9d\xa7=%\xfd]\\\xd27\x83\xe6\x89\xf0\x89\xd0V\xebQ\xb7\x81\x99a\x8aI\x15^r\tH\x97<\xb1\xeeH\x19\xe2\xb4|-\xe2}O\xc3\xf7\xdb\x16y.,cb\x15n\x06\x1bolc\xa1\xfd+\xea\x1b\xdf\xf8&\xc7\xc5\xf5\r\xe5\xf8\x0ei\xa3C\xcc\x91j\x16eO\xe2e\x15\xc6\xf8\xb7\xf6<\xf1\xef\x82\xec\xe7\xb8\xd4\xfc\x1b\xabAol3#\xc2"\xba\xd9\xcfq\x0b\xbb~\x95\xecK7\xa3:|\x95\x12w\xee\xd1\xd5S\x13)\xc6\xd2\x8f\xe0x\xfe\xa1\xf17R+\xe5[Lm"\x8c\x9d\x84._\x1fS\xe9\xedYrx\xefX\xb9\x97\xf7\x9a\xb5\xfc\x8c\xdd\x7fxy\xafW\xd1\xff\x00f\x0f\x16x\xa2\x115\x87\x81|]y\x1b\xf2\xb2&\x8bs\xb1\xbe\x8cP\x0f\xd6\xba=\'\xfe\t\xf5\xf1;W\\\xc7\xf0\xf7\\\x87\xd0\xcf\xe5[\xff\x00\xe8n(\x8e3\x07\r\x1cR\xfb\x8e)G\xab<GH\xf1\xce\xb7g(\xfb>\xa9\xa8#u\xcf\x9aq\xfe\x15\xb17\x8bu\xcdm\xd5\xaf5+\xf9\xb0r7L\xdf)\xcex\xaf\xa2|?\xff\x00\x04\xb1\xf8\xab}\xb4\xff\x00`iv*{\xddj\xf0\x8c~\t\xba\xbd\x17\xe1\xf7\xfc\x11\xd3\xc5\xba\xc6\xad\n\xf8\x87_\xd1\xf4\xbd?\xefJt\xc0\xf7\x97,?\xba\xbb\xd5\x11s\xfd\xe3\xbb\x1e\x86\xb9\xeac0\xd2\x95\xe1\x15~\xf6M\xfe\x03\xb4\xba\x18?\xb2\x07\x83n\xfe2\xfe\xcd\xbe.\xd2|A%\xee\xa9\xa0j\x17m`#\xdeY\xe2(\x91I\xba2A\n\xc8\xfbXu\x19\xe0\x8cW\xd5\x7f\xb3\xbf\xec\xbf\xe1\ro\xe0\x9e\x87\xe1\x1b}\x1f[\xd6\xf4{\x1ch7\x17\xba\xa1\xb2\x82\x08\xaeK\x13\x1d\xb4\xaadV28l\xab"m`3\x90rk\xe8\xbf\xd9\xb3\xe0\xcf\x83~\x0c\xfc*\xd2|\x1f\xa7\xf8\'J\xfe\xcc\xd3\x03~\xfe\xe26\x9a\xe2\xe5\xd8\xe5\xe5\x95\xc9\xf9\xdd\x8eI8\x1fL`WA\xfb\\xz\xd7\xc3?\x04,\xfciy\xe3\xbf\x0b\xf8O\xc2~\n\xbc\x8aY\xad \xb3\xf2\xaf\xad\xed$\x90\x0b\x95\xb4\x89S\rt\xe8\n\xc6X\xed\x0e\xc0\xb1\xdb\x91^[\xe1hb\'*\xae\xa7\xee\xdc\xb9\xf9RK\xde\xb5\xb9\xb5\xd9\xdb\xaa;\xb0\xf2u\x17\xb3\xab\xb7w\xd0\xf8s\xc6\x9f\xf0I\x1f\x83~,\xb5\xf1F\xa1\xe1\xff\x00\x88:\xc6\x88|\'\x18\x96\xfe\xde\xd2\xce}B6fm\x82;\x7f61\xe7\xb6\xf3\x82a\x91\xc2\xe0\x93\xc5x?\x82\xfe\x1e|\x19\xf8=\xf1]l-\xbcC\xe2\x0f\x18x\x9e\xce@m,\xb5\r*x"\xb2\x94\x11\xb6GO%7\xb0#\xe5\r\x91\x9caI\xe9\xed\r\xff\x00\x054\xd1u\x8f\x12j:\x97\x87\xbe\x17\xdck\x16P\xb9\x167\xbe&\xf1\x04\xfa\x94I\xc6O\xc8\xa9\nJ\xea\x08\x07p*\x1b?/J\xf1O\x8d?\xf0T\xef\x89>%\xbc\x8dt\xedJ-\x02K]\xc9\x13i\xd6pZ4\nF\n\xa3\xc6\x81\x82\xe0\x90FO\x15\xb5\\\xbe\xbdh\xfd]bjF6i\xa8\xc9+\xdf\xbbi\xca\xdeJJ\xfa\xf7\xb1\xab\x8e\x02\x9b\xd2<\xcf\xbd\xbf+\xff\x00\x91\xeb\x9a\xb7\x81\xbe(|C\xd7/<\x9f\x0c\xcd\xa6\xdb\x86bu\x1f\x12j6\xfa43c\x1b\x99V\xe6E\x9d\xd7\x9e\xab\x11\xaet|\x11\x12\xf8\xc5t]O\xe2\x8f\x83\xb4K\xb6m\xb3\\[\xd8^\xeaV1\x1c\x03\xb4L\xa1\x03\x9ez\x85\xdb\xc1\xf9\x8d|\x9b}\xf1\xff\x00\xc5\x97\x11\xbc\x93_[\xcf%\xc3ni%\xb6Fv\xe7\x92\xcd\x8c\x9c\xf7$\xe6\xb7\xbc%\xfbM\xcd\x1e\xfb]wI\xb7\xb9\xb3\x93\x81%\x9b\x18\xe4\x83\xa0\xc8V$7\xd3#\xeb_;S\x85\xe5\x84\x82\xfa\xa4#$\xbc\xf5\x7f\'dk\xcdJrm\xdf\xef>\x86\xf8\xa7\xe0-\x07K\xd5o4\xf7\xf8\xa5\xabx\xba\xebM\x81\x11/\xec\xb4\xb4\xb7\xb5\'\xb4h$\x99\xdd\x94/q\xb7\x9e=k"\xdb\xe1w\x81\xe6\xb7\x8d\xdb\xe2W\x8f\x11\x99C\x15\xff\x00\x84R\xd9\xb6\xe7\xb6~\xdf\xcds\xbe\x16\xb8\xd2\xfcC\xa4}\xafI\x97\xed\xb6\xed\x80\xcc\x1b\x0c\x8d\x8c\xeda\xd5O\xb1\xf7\xad\xf8\xfc<\x865\xf9\xbbz\xd7\x83,c\xa1\'\x07\x14\xbc\x9cR\xb1\x8c\xf9d\xfe\x1f\xc5\xff\x00\x99\xfae\xf1\x03\xe2\xde\x87\xf0_\xc0\x97O\xe2=B;]4\xee\xd5\xad\xf4X&\x06MR\\\x15VT\\\x81\xbb\x1b|\xd3\x80\xa3\'<`\xfcC\xe1\x1f\xf8)G\x8e\x92f\xb7i4\x9dR\xd5fbL\xf6\xbbYr\xc4\xedVR\x0e\xd1\x9c\x02rp\x01<\xd7=\xaa|g\xf0o\xc4\xcf\x13\xdeh\x9e\x18o\r\xdb\xcc\xb6/sr\x9aDk\xe5\x80\xa4\x00\x1d\xd4\x14\x0e\xd9\xf9Wp\xce1\xd4\xd67\x87>\x1cY\xde\xeb\xf2Y\xdb\xddi\xa92\xb71\xc7\'\x9f.@\xe4\x15@@a\x83\x91\x9e0k\xf4L\x1eyW\x11\x87\x8dyBT\xaf\xd2[\xb5\xdfN\x9d\x8f\xa4\xa5\x82\xa5~F\xf9\x8f\xa25\xbf\xf8(~\xa3\xe0\x8f\x0cG\xaak\x1e\x17\xb7\x9e\xdd\x99U\x8d\xbc\xd2@F\xee:\xb6\xe5#\xde\xb0|?\xff\x00\x05\x84\xf0}\xfe\xbbq\xa3\xc7\xe1=n=am\x9ako6\xf6#c)\\\x12\xaf"\xae\xf5\xcex\xc2\x9a\xf1\x8f\x8f_\x11\x1f\xc5\xbe\x1f\xd3\xfc+c\x1d\xc6\xa0\xf0\xabZ\xdf0\xb6\x11\xa4,\xa0\x95\x07,H=\xf1\x81\xd6\xbc\xf3\xf6h\xff\x00\x82w\xf8\xdb\xf6\x87\xb0\xd7\xfcM\xe0\xdb\x8d7Q\x93\xc1)t\xda\xbe\x98\xf2<s\xac1\xc2\x1c\xb29\x1bY\x8eT,c\xe6$c\xb8\xaf\xa8\xca\xed\x89\x9f,\xe3\xcd\xd7k;~\x07\xa9\xc3\xb9\x0e\x0f\x15\x9bP\xa5Z\x9f5\'%\xce\x93k\xdc\xbaRw\xbe\x96N\xf7_s>\x8d\xf1\xaf\xfc\x15\xf7\xc6\x96\x9f\xd9V\x1e\x1d\xd0\xfe\x1e\xe9\xba\xe6\xb4\xa5m\xedn\x9e\xea\xf2kw\x07\x85\x94\x96\x8d\x01\xc7<+\x0eW\xa89\xaf\x1e\xfd\xa2\xbfi\xaf\x8d\x7f\xb4W\xc3\x15\xd3\xf5\x7f\x1ak\x17\x93,E\xf5_\x0e\xe9\xcf\x1e\x9fat\xccs\xe5,Q*\x07\xd9\xf7~wp\xc4g\x83\xc9\xec\xbfdI\xb4;\x8f\r\xeb\xd7z\xa7\x854\xbf\x11j\x1fb\x8a\xcdL\xf0\xc4\xf2\xcb\x14>c\xa1\x05\x94\x95d\x0e\x00+\x86\xc2\xa7?(\xae6m&=\x03\xe2\r\xbd\xf5\x8f\x9d\r\xa5\xe4\xb2\x13\xe7\xcc\x14\xdb\x97\x07 \xbf\x03\x8e\xc4\xe3\x07\x1e\x99\xaf\xb5\xcb\xf2hQ\xc3\xfby\xbb\xc5\xbd\xff\x00\x957\xbf\xf9\x9f\xd4|+\xf4s\xca\x95\x0cL3g*\x9c\xee\xd0\x92vT\xe0\xdf\xbb+Y\xde\xa2j\xed\xbb\xc6\xcf\x96\xdb\xb7\xc6\xf8\xdb\xe1G\xed\x05\xfb\x17\xdfxo@\xd6<+\xa8h#^U\xbc\xd2\xed\xe4\x89.me3\x00\xd820(\xad\x81\x96\x04\x800{\x83_S\xfc\x1e\xfd\xa5\xef\xbff\x7f\x0f\x1d\'Z\xf0\xfd\xe7\x8b|u\xe2\t\xa1Y\xdbN\xd6\xe1]\x0e;a\x1e\xe5X\xd4@f\x13+;\x96f\x90)\n\t\\p<\x9b\xc6\xff\x00\x15\xfcq\xfbJ\xf8\xdbV\xf1\xa7\x885\r[Z\xd4R8\xad\xa4\xbauyR\xc2\x00\xa1#RyX\xc6\x06y\xc6X\x96\xeaI\xaa\xb6\xf0\xb6\x90\xb0Y\xdb\xc9\x8b\x9b\xd6\xda\xb2\x120\x14\x03\x9f\xa7l\x1f\xadw\xe0\xb2l-hJ\xb5MS\xd1v\xd7O\x9b}4\xd0\xf58O\xe8\xc1\x91\xd1\x85J\xd9\x9c\xddY\xb5d\xbe\xcc.\x92iZ\xcd\xb6\xefg$\xac\xad\xa1\xf6\xed\xc7\xedK\xa1\xf8k\xc1\xfa^\xb9\xe2H\xb5O\t\xd9\xea\x92\xb5\xb8k\x97Y\xe2\x82a\x14\x92\xf9l\xd1\xf2\xd9\x11\x95VU \xbb\x00v\x80\xcc9\x0b\x0f\xf8(\xa7\x80|I7\xd9\xec\xed\xfcG}u\xbd#h\xfc\xabHV=\xed\xb5K\xca\xf7!\x14\x16 d\x9c}@5\xe2_\x16>\x1a\xea\x9a\x9f\xec\xf5\xe0\xcd\x1d\x94\xea\xd7\x9a\xb7\x89\xd6v\x8eI|\x98!\xb6\x8e\x07Q\xe6<\x9bB\x01\xbb\x1b\x9b\x00o=k\x8c\xd3~\x1d\xe8\xba\xa7\x8f\x96\xce+\x8b\x1d+\xc0\xfa\t\x92\xe6\xe2\xe5m\x8c\xd2\xdf\xe0\x92\xef\x1a\xe3,\xcf\x91\x14fA\xf2\xae\x18\xe3\xe6\xaf\x8e\xc6\xf0\xff\x006i,%\x18~\xea\n.R\xbb\xeb\xab]\xaf\xf7$\xb7\xe8~1\x8e\xf0\x16\x95^*\xaf\x96\xe0\x1c\xe3\x83\xa1\x15*\x95\x1e\xad>[\xd96\xb9y\x9b\xd6\xd6\xd1kmU\xfdK\xe2\x87\xfc\x15s\xc3\x9e\r\xf1\x05\xf6\x9dc\xe0\x1d[R\xb8\xb1\x9d\xed\xcc\xed\xae\xc0\xb6\xee\xcapJ4q8e$p\xc0\xe0\x8f\xce\xa7\xfd\x9a\xbfl/\x89\x9f\xb6?\x8b\xaf\xf4\xff\x00\x06\xf8?\xc1>\x11\xd3\xf4O.\xe3V\xd75k\xab\x9dDZ\xc5!"8\xe2\xb6V\x8c\xcf;\x14r\x17!@\\\xb1\x03\x19\xf8\xfa\xcb\xc0Zo\x8b^\xf6\xeeMr\xd7K\xb42;D\xd70\xc94\xb2\r\xc7\x1c \xc1b:\xe0\xf5\xf4\xae\xc3\xf6w\xf8\'\xf1\xabR\xd6u\x1b\x9f\x84\xb6~6\xf2\xcb\xa4m\xaai\x97\xeb\xa5\xc2\x9b\\:\x19\x1c\xc8\xa4\x1c\xa8 \x03\xd4g\'\x15\xf9\xd6\x1b\x11C\x11\x88\x958\xd3\xda\xfb&\xdf\xe2\xf5\xfb\xcf\xe7\xfa\xd87\x1a\xad\xc1{\x97v\xd57k\xe9\xb2\xfcl\x8f\xd2\xa5\xf0u\xf4\xe9\n\xdck:\xad\xfd\xf5\xbb$\xc6t\x8cY2\xba\x9e\n$!Dk\x91\xd3\'\xd0\x93W?\xe1\x02\xd3>\xce\xad\x16\x9dc\x1d\xc6\xf1)\x95l"Y\x9d\x86rL\xa0\x079\xceH\'\x04\xe0\x9c\xe0W\xcd\xff\x00\x02\xff\x00f\x7f\xda;\xc2\xde\x1b\xb7\xb1\xf1&\x93\xe0\xbdj\x1bk\xf1\xa8[.\xbf\xe3\xcdQ\x1a\xd9\x8cB\'\x06;\x1f\x96M\xc1"8\x91\x9dW\xcb\x05UK9o\xa04_\x0c\xf8\xba\xd0\xa9\xd5\xb4?\x02\xc7\xfd\xe8t\xddJ\xfe\xe0\xe3\xd8\xcd\x178\xf7\xc5uK!\xa8\xdf:\x9a\xb3\xee\xad\xfa\xbf\xcc\xa8\xd3r^\xf5\xd7\xc8\xda\xbd\xd0\xae\xe4\x8dc\xb8\x9ee\x1dU[\xe5\x1f\x97\xb51|5\xfd\x9a<\xcb\x86\x868\xc2\xee\xf3ee\x8d\x07\xaeY\x88\x1f\xad^\xb2\xd1t\xb8l..\xae\xfc?o\x0c\x90\xab\x16\xdc\xa8\xca\xca\xa0\x92s\xb7<c\xd3\xf3\xaf\x02\xf1G\xc4\x0b\x8f\x86\xdf\xf0Q\xdb\xef\x03\xf8\x8a\x1d.\xd7\xc1z\xd4\x16\x115\xad\xed\xac3\x7ff\x81\xa7\x89w${\x8c~i\x99\x8e\xf5\x0c\t\xc9\xdd\xc8\x18\xdb\x0b\xc2\xf5\xea\xc6S\x8c\xd3\xb6\xbf\xf0\x0f\xa9\xc8x6\xb6n\xab<;\xd6\x959M\xe9\xba\x8d\xae\x96\xbb\xd9\xe9\xdfm7^\xe1\xe1\xedS\xc3\xfa\xcd\xe2\xdb\xd9\xf8\x83\xc2\xf7w\x19\xe2+mf\xd6i?\xef\x95\x90\x9f\xd2\xbb\r\x1e\x1d.\xdfM\x9e\xfaMB\xd1mm|\xa4v\x0f\x90^Vq\x1a.\x07\xcc\xcd\xe5\xc9\x80?\xb8\xc4\xe3\x15\xe0\x9f\x1f\xbfh\x8f\x0b\xfc\x08\xf8\x8f\xe2\x8f\x87\xfa&\x97\xa7\xda\xde\xcd\xe1\xdb)4\xbb\xc8\xf4\xb8\xac\xa5\x9e\xf6yU\xa5\x8aB\x8d\xfb\xb5\xfb;\r\xac\x0er\xad\x93\xf3\x0cx\xe7\x8d\x7fi\x8f\x89_\r\xeef][Z\xd1\xfcAqqe\x12\x1bI\xec\x05\xcd\xb0\xf2\xed\xf6\tcS\xcco\x02\xb2\x85\x980m\xce\xc7\x9d\xcc\x0f\xd4\xe4<!:\xd4\xbd\xadYi\xe5\xe8}\xff\x00\x0e\xf8%\x98f8\x08fz\xc6\x9c\xec\xe2\xb4\xbb\x8bQjK\xcb\xde\xb3\xbaVh\xfb\x93\xc4z\xc5\xe5\xff\x00\x87.4\xff\x00\x0f\xff\x00hh\x9a\x85\xd1\x11\xc7\xaa\x18\x12G\xb5L\xfc\xed\x1cl\x19D\x84p\xac\xd9\xdb\x9c\xed\'\x18\xf9\xb7\xf6\xfb\xf0\xd6\xa1\xaf\xe8>\x19\xd2u-SU\xd6\xfe\xcf\t\x96\xe2[\xc2\x19\xd8#0\x8c9\xc0\xe0\x17s\x9c\x7f\x1dX\xfd\x9f\x7f\xe0\xa1\x1a\xb6\xb7\xf0\xf6\x11\xa9xwT\xf1\x06\xbf\xa5\xcc$\xbcX\xf1\xa7\xd9\xbe\x99\x1a+\x99\xcc\x81q\xf6\x890aHPd\xbf\xef\x0e\xc4\x06\xab\xfe\xd5\x7f\xb5g\x87>4\xfc<\x93\xc6\xf0X\xea\x1e\x1b\xb5\xd4nZ\xc7N\x8e3\x1c\xae\x91F\x88e\x90\xe3h\x13ydg\n\xaa\x1d\x8e\x0e\xe1\x9a\xe2\xab\xc1y\x95J\xcd\xca\xab\xba\xf7R\xf8ck\xea\xec\x9b\xbd\x96\xad\xbb\xbb\x1e<|#\xe2J\xf5\xbf\xb3\xd5\x17\x1ej\x8a\nN\xca/k\xca\xfb\xf2\xa8\xfb\xcf\xc9=\x1bG\xce\xde/\xf8em\xe1\xaf\x86\xf2\x7fg\xe8m\n\xb6\xd8U\xfe\xcf\xb2\x10\xe4\x16`\x0fL\x92w\x11\xf8\xd7\xcc\xde5\xfd\x9c\xf5]SJ\x92\xfdv\xc3\n\x96v\xd8\xab\xe5\xa7\x19\xfa\xfe5\xf6\'\xc2\xaf\x88v?\x10\xfcS&\x97y\xa6\xfd\x89\xb5i\xa4{8cm\xe9el\x96\xd1\x18\x90\x02\x00vvI\x8b\x1e\xc5zs]\xce\xb7\xf0\xc1o``\xcb\x0c+l\xa4\x95\xc0E\x18\x19,\xdd\x82\x81\xc9\xcf\x03\xafj\xf9\xec\xd7\rW)\xc6\xbc;wZY\xf7W\xb2\xd3\xcf\xb1\xf0\xbcy\xc0\xb8\xde\x17\xcee\x96b=\xe6\xd2pz{\xd1m\xc54\xae\xedw\x16\x97\xfc\x13\xf2cS\x8ek;\xb9-n\x11\xa2\x9a\xdc\x98\xdd\x18c\x07\xe9Q\xc5(U5\xf6\xbf\xed+\xfb\x11\xc7\xf1_\xc1\x17~*\xf0\xad\x8d\xf2\xeb\x11\xdc$6\xb2\xc9\x0f\xd9\xe0\xd6\xc6\xd6i\x02\xf9\x98b\xcb\xf2\x95\x91\x82\x83\xbb\x07\xa8#\xe2\rcO\xbe\xd05K\x8b\x1b\xebk\x9b;\xdb71\xdc[\xcf\x19\x8eX\\uVS\xca\x9fc^\xec\xb0s\xbf$\xd7,\xec\x9b\x8b\xdd_k\xfa\x9e>a\x96\xe32\xda\xcb\r\x8e\xa6\xe9\xd4\xb2|\xaft\x9e\xd7]\x1f\x93\xd4\xd8\xf0\xe7\x8bo\xbc#\xa9\xad\xe6\x9bp\xd6\xf3/\x07\xba\xc8=\x18t"\xbdV\xd3\xf6\xbbT\xb5\x8dd\xf0\xfc\xed"\xa0\x0cR\xf8*\x93\x8ep\n\x12\x07\xe3^\x105\x06U\xfb\xa4\xfdjE\xd4~Q\xf2\x8a\xf2\xf1\xb9%\x1cD\x93\xaf\x0b\xb5\xf7\xfe\x07/1\xfbC\xe1/\xf8&\x9f\xc1\x0f\nk\r>\x93\x0f\xc4\x08&1<2F\xde &\xdc\xa1\xea\n\x94\xc3\x0e;\xf7\xae\x9b\xc3_\xb1_\xc3\x9f\x06\xeb\xf7z\x96\x8f}\xe2\xed"\xf2\xea\x1f).\x0c\xf6\xd3-\xb8\xc7\xf0\xa7\x94\xa3\xfck\xdbWL\x8d.$e\xb3\xb5\x85\xa5\xc8R\x89\x96Q\x9e\xe4\xe3\xf4\xab\x9aW\xc3{\x9d^I."\xb7\x8aE\xb5\x19\x904\x9bY=\xc2\x8e\xa3\xeb\xc5|\x8d:\x98\xfa\xb0\xf6N\xd2\xbf\x96\xff\x00\x89\xef\xc6\xb4\xaf\xee?\x91\xf3\xff\x00\x8d?d\xbf\n\xf8w\xe1Dv\xf6PM\xe2\xe9ayH\xd5/\xed\xe1\xb5\xd4 \xdf!p\xaf,(\xa6H\xc6\xe2\x14\xb6\xe2\xb9\xc1$b\xb8_\x87\x1f\xb3\xd7\x83~\x10\xf8GR\xd4\xbc7\xe2\x0f\x1aC\xe2\x0b\x89E\xdf\x89\xf4{\xcb\xc8\x9b\xedvj\x17\xcc\x9e\xc4E\x1cbF\x84\xacsl$\xbb\x08\xddx\xe1\xab\xec[\x7f\t\xfd\xb8\xb4p\xacr\xfc\xa66\xd9\x86\x1bH\xf9\x81\xcfc^K\xf1\xa7\xf6u\x96\xcfL{\xcbXL\xbaJ\xb2\x95\xf9\xb7\xb5\x83\x1e0\xc4r\x14\xe7\x86\xe88\x07\x9c\x13\xfa\x9f\x0c\xe2\x96&1\xc2c\x17\xb3\xab\x1br\xcd+&\xbf\x96K\xae\x9az\x1f\xb8\xf8i\x99ey\x85ZY~e\xfb\x9cM?\xe1\xd5Zs\xc5\xe8\xe15\xb3\xba\xbaW\xb3k\xe1jK_\x8b<S\xf0\xdaO\xd9\xdb\xe3\xdd\xe6\x92\x97\x16w:^\xa2\xb1\xeazV\xa3m\xb9\xado\xac\xeeT<SFN\tC\x82\xbe\xc4\x11\xd4T?\x14~\x1d5\xbf\x89\xa4\xb0A\xfb\x8dA\xc0\x87\xcc\x1b\xb0$`\x07\xe4Mzw\xc7\xbf\x87\x97M\xf0\xbbJ\x8e\xf7l\xbf\xf0\x8a\xdc\xcc-n[\xe5h,\xe7;\xe5\x82N9E\x9b\xf7\xaas\xf2\xef\x94r\x18\x11\x83\xf1*\xeaM\x03\xe0V\x91\xe2\xc9\x1a\xd6=gC\xbd\x82\xd5a\x96E\xdf9I\x01\x04s\x96R\x8a2FF\x18\x1e\x875\xfa~\x02\x8c\xb0\xd4\'J\xb7\xc3\xaf\xcd5\xfd#\xfb\x9b#\xc4\xfdW\x01\t\xd6\x92\x94\x92\x957\xfd\xe6\x95\xe1/\x9e\x97\xec\xef\xe5\x7f\xb9\xbfd\xff\x00\x87Z\'\xc1\xaf\x80\xb6z\x0e\x9bc\x1f\xd9VS\r\xcf\x98\x82G\xbbb\x81d/\xd9\x8b\x92A\xcf\xd3\xa0\x00~x\xfe\xd4\x7f\x0em\xfe\x1f~\xd4V\x16\xbam\xbf\xd9t}Z\xee\xde]:,\xeeX\xd1\xe4\n\xe8?\xdd}\xc3\x1d\xb2\x05}\xd5\xf0\x87\xe2\x96\x93\xae~\xce\xab\xe2\x985\x08m\xb4T\xb5\x1a\xa4\xf7o\xf7mQ\x14\xb4\xa5\xfd\xd4\xa9\x04u\xdc\x00\xeb_\x94_\x19\xff\x00i\xbdK\xe2\x8f\xed\x01?\x8a\xad\xa4\x92\xcd\xa1\xbbV\xd2\xa2|;Z\xc6\x8eZ!\x83\x90_?;z\xb31\xaf70\x9c)\xe1\x94\x13\xb6\xb1\xb2\xf2V\xfd\x0f\xca\xf8W\x1fS/\xcc15\xea\xc9\xfe\xf1\xd9\xae\xefu\xf7t\xf2\xb9\xf5\x0f\xedA\xae\xc9\r\xe6\x93\xe1Xf\x8fv\x97\x11{\xd8\xa2|\xbf\x9b&6\xc6W\xb6\x14\x03\x83\xcf\xcd\x8fZIt\x1b_\x84\x1f\x0f\xec\xd7X\xd0$\x9b\xfbb\xd1\xf5\x0b\x99\xae\x14\xc5ms\x13o\x89!Y\x1b\x00\xa2\xa8\x90eG\xcc\xee\xdc\x90\xa9\\o\xecQ\xa9\xf8\'M\xf8\x85\x1f\x89>-j\x1a\x8d\xf5\x8f\xda\xa3\xfb\x17\x87t\xe7\xf3u\xcf\x15\xea\x12>\x119?\xb8\x84\xbb\x02\xf3HT\x9e\x88\x19\xb9\x1f`\xeb?\x03\xfc\'\xe2\xef\x8e7^"\xd6\xac\xac|3\xff\x00\t\x15\xc4-a\xa4\xeb\x1e#\x9fSh\xd6\x14\x11\xa2\xc1\xf6\xc720U\xc6\x16$X\xd7\xa0AY\xe3+b3,$\xa9a\xbd\xd4\xdf\xbc\xe5\xd1v^\xa8\xe7\xf1/:\xc5b\xf2\xb5\xc3\xf9?\xb9\x19\'*\xf5\xa5\xee\xc5_\xecEo6\xfa\xb4\x9cRVo\x9bo\x8a~\x15\xff\x00\xc1?<e\xf1\xa6\xe0\\\xe8"\xd2\xcfB\xb8|\xa5\xfe\xa8\xcd\x1cV\xf1\x9e\x80\x05R\xd2\x11\xd3\x08\xbc\xf1\xc8\xcdo|^\xf8\x1d\xe2\x0f\xd8\x1b\xe2\r\x85\x8f\x80~\'x\x83U\xf1\xf3E\xe6\xeb\x91\xe9\xb6Keg\xa6\xa6\x01\x8e\x06\x06G3J\xc4\x96h\xd8\x10\x8b\xb7w\xcc\xd8\x1f\xa1\x9f\x12\xee\xfcE\xe1\xaf\x03\xae\x99\xf0\xadt\xd8\xb5\x0c2M}vd\xf3#N\xe2\xd8\xe3j\xb9\xfe\xfbc\xb6\xdd\xa7\xe6\x1f2\xfc\x1c\xfd\x91\xf4\xcdF\xfa\xe3\xc4\xde)\x8em{Z\x82p\xb2i|\xad\xae\x8bp\x0e\xe6\x8a\xe4g7\x17\x00\x95.\x1f1+\x12\x148\x02F\xfc\xc72\xc8\xf0XH8`9\x9c\xde\xbc\xfd#o\xe5K\xf1\xdc\xfe%\xcf\xa9\xe4\xd8E\xf5l\x0c\x9dY\xec\xe7}?\xed\xd4\x9d\xbem\xb3\xca|=\xff\x00\x05B\xf8\xbd\xe0\xeb-\xfe >\x12\xf1\x00\x8c\x0f\xf8\xfa\xd2\x16\t\x07_\xbd$\r\x18\xcf\xb6;Q\'\xfc\x17?T\xd1nYu/\x87>\x0f\xb8\x8f\xee\x97\x87W\xb8\xb7#\xdcn\xde+\xea\xbdK\xc2:\x80V\xb8\xfb\ng\x80\xad\xe5\x86\xf2\xc7a\x8e\x9e\xf8\xab\xb2?\xc4\x0f\x05hbm7A\xd0\xef,\xef\x028\x92\xe3I\xb6\xbe\\\xaepT2\xb2\x8e\xe0\xee\xf5\xc5|\xfe\x0e\xbe6\x94\x9f\xb7\xa9)/(_\xf3>.\xa4\xeb\xca\xea\x92zy\\\xf0\x8f\x83_\xf0T\x8f\x16~\xd1\ru\x1f\x85\xbe\x03\xdck\xf6J\x1a\x0b\xcb\xb4\xf1\'\xd9\xf4\xfb]\xcb\x82\xb2\\\xc9\x00\x8d[\r\xf7A/\xc8;My\xd7\xc7\xcf\x1d\xeb\x1e\x16\xf8\xd3y\x0f\x88\xad\xe3\x98x\xb2\x085\x8b\xe86\xfd\xa6;k\xcf,G1\xb7\x97joS\xb01 .s\xb4\x81\xb4\xd7\xd2\x9a?\xc7\xdb?\x0c\xe9P\xe8\xf7\xde\x13]&\x18\xe7\x9ag\x1aU\xa46\xd6\xf1\xbb\xb1g"\xd5\x15\x11K1$\xec#>\x95\xce\xfcs\xf8o\xa6\xfe\xd2\xbe\x0cG\xf0\xcd\xe6\x9d\xa9x\x9b\xc3\xed\xfd\xa1cd\xb9\x8a\xf9\xd0s5\xb9\x85\xf6\xb9WM\xd8 \x15\xde\x06\x0f&\xbe\x9b\x87\xb8\x92\x14\xb1\x91\x8c\xa5\xcd\x19h\xee\xac\xd7\xca\xcb\xd0\xfdk\xc1~4\x86K\x9fEc\xad*\x15\x97$\xde\x9e\xebmY\xbe\xca\xf6\xbfm\xcf\x88\xff\x00h\x7f\x18\xdfx\xc7\xe2d\x1a\xf5\xe3]^\xb9\xb6\xb7\x8a\x17\x9ec#\xaf\x91\x1a\xc6\xaa\x1f\xaf\xc8\x15@\x07\x900+\x03Z\xd4\x1f\xe2G\x8c\x9aO2\xe9I\x11Z\xdb\xbc\xb2\x16\xf2\x9f#.\xde\xa0|\xcd\x8fa\xd6\xbe\xd6\x87\xf6j\xf07\xc5_\x80z?\xf6\x96\x98\xba>\xbdy\x03\xad\xae\xa7h\xcd\x16]$uM\xeb\xf7\x0b\x05\x1bX0\xc9\xe3\'"\xbe`\xf1\x0f\xc1=W\xe0\xef\x8e\x1bO\xd4\xfc\xb9%\x12\x19c\x9e\x12\x1a)3\xd1\x86\t\xc3`\x9e\x0fNz\xd7\xe9\xde\xc6\xaa\xae\xbd\x9a\xfd\xd5F\x9e\x9d<\xbf\x13\xfb\xd3\'\xfa\xb6=\xfdS\x0b\x1eH_H\xd9Z\xcbM\x1a\xde\xd7\xf9\x1d\xf5\xef\x8a\xee>\x1f\xe9wq\xe9\xf6\xc7\xfb\x06\xd6\xdak;\x81\x13|\xccv\x16Y2\xc0\x95v\xc7\xde9\xdd\xb9\x8fS\xc6\x0f\xc0\xbd^c\x04z\xf7\x89mm\xae\xb4o\x0f]y\xda}\x89\x840\xba\xb9\x9aPQv\xfd\xd6_1I9\xe7(\xd9\xdd\x8c\x18\xbch\xf7\xd6\xd1\\^M\xe4,3\xdb\x99\xcb\xa2\x91\x8d\xa1\xb8\xff\x00xm\xeb\xef[\xbf\n\xb5\t\xbcO\xa9x~\xcfK\xb1\xb6\x8fM\xd3\xa0\x13"M\xd6%\nG\x9c\xe4d3\x96\x91\x8fLd\xfdM}\x06"\x95\xf1I-\xb9[k\xa7E\xb7[\xaf\xd4\xfa<vV\xb4qK\x96\xcd\xbf\xbb\x95\xfc\xdan>Ho\x80-\xa2\xd2?k\x1b\x19o/`\x83M\x8e{\xdb\xd9.e\xdd\xb2\x04kY\xe49\x00d\xedw+\xd3$\xe3\x1dEz\xc7\x88~9/\xc5\x8f\x18\xc9\xa7\xf8oM\x9a\xcf\xc36Q\x8f\xb4<\xe9\x91w\x82[\xcc\xb9 \x82\xa8\xc5N\xd8\x94\xf0:\x92y\x1e\t\xa5h:\x87\xc4\x9f\x8d\xb2\xe9\xfaZ\xc7qr\xc3\r,\xc7d1ol\x19\\\x8f\xba\xa0zw8\x1c\xd7\xd8\x7f\x06>\x15[|\x18\xf0\\\x96:m\xba\xcdp\xf3\xac\xb7\xfa\xc6\xa5f&\x92\xe2N\x00\xfb4\x07\xe5\x01\x89\n\x81\xb2pFNk\xc2\xa5\x94\xe0\xa5\x8f\xa9\x8d\x9cy\xe7\x16\xe2\x9b\xda)n\xd7\x9d\xdb\xd7\xa5\x8f\xcf8\xbb\x85\xf2:9\xb4s\xdcT=\xae*4\xd58&\xd7-5\x19I\xb9\xdb\xf9\xaf&\x93\xd6\xd6\xd1\x0c\xf0\xef\xc2\xadS\xc46k\xab\xeb\x12\\\xdeO\xa8\xc4\x8f\x0c\xd3 \x8a\x08\xad\xf9eX\xe3\xc0\xda\x18\xbb6\x00\xce\ng$d\xf1\xbf\x1b?`\xff\x00\x01\xfc\x7f\xd3\x99\xbcA\xe1\xbb\x8b\xbdB\xd5\x02.\xa9f\xcdiwj\x9d\x02\xf9\xa3\xef.s\x85p\xc3\xae\x00\xe6\xbe\xab\xb86~\x0b\xf0Q\xd4<E1F\x84\x05\x9evM\xcd,\xcd\xf7-\xe2Q\xf7\xe5#\x80\x8b\xee\xdf*\x02\xc2+V\x8f^\xb5\x8c-\x8c\x96)\xe5\x86\x16\xa7\xe6h\xce\xd1\xbeIX|\xbb\x89\xe0g\x85P\x07R\xc4\xfeE\x9b\xe1\xebO0\x9e.3\xd6M\xd9\xad4Zi\xe4\xb6\xf3?\xcf\xee4\xe6\xcc\xf3\x8cVf\xe5\xcd\t\xcd\xa8\xb4\xac\x9d\xac\x92\x8f\xf7b\x92I\xf6I\xb4\x9b?2<M\xff\x00\x04J\xd2\xee\xae\'\xfe\xc5\xf1\xde\xbdj\xa7\x98\xe1\xbe\xd2\xe2\xba\t\xf5dh\x89\xfa\xe2\xb0G\xfc\x10\xff\x00\\\x03\xfeJ&\x96=\xbf\xb0\xe5\xe3\xff\x00#W\xde\x1f\x19\xff\x00l\xff\x00\x84\xff\x00\x03\x12X\xf5\xaf\x14i\xf3\xdfBv\xfd\x8bN\xdbs.}\t\x04"\x9f\xc4\xfd+\xc6\x1b\xfe\x0b/\xf0\xf6&*\x9e\x17\xd6\xa4U8V\xfbP\x1b\x87\xaf\xfa\xaa\xf2\x9eo8\xe9\x1a\x8e^\x91\xe6_zV>Ue\xed|V^\xad#\xf4\x05\xaf\x9a\xde\xe1\xc4i\xe5\x8c\x1c\xa9\x8b\x1d\xfdqQ.\xb1wmz\xb7P\xdd-\xbc\xf1\x92\x10\xac\xc3p\xcf\xe1Y\x91\xf8\x96\x0b\x8b\xa6\x8d$\xf3y\xe1~d\x0b\xe9\x9c\xd5\xbb\xa7\xbc\xb8\xb3\x93\xfb-t\xd7\xd4\x991\x14w\xad\'\x93\x9e\xfb\x8ck\xb8\x91\xed^tj:\x8a\xd1w:\xb5Z\x9d-\xcf\x8a\x17[\xb0S\xa9\xe96\xb3\\/\x02\xee\x18c\xdcO\xba\xe3\x07\xf0\xc5S>\x07\xf0\xef\x8a\xaeM\x9cz\x86\x95c=\xd2|\xf6\xf7R\xbe\x9f$\x8a\x7f\xb8\xd2.\xc3\x9e8Rk\xc1>0~\xd6k\xf0\x16\xc6g\xf16\xb9\xf0\x9e\xceh\x81-o\r\xf5\xe3L\x0e\x0e\x15\xcba\x10\x9e\x07\'#\xd2\xbeJ\xf8\x93\xff\x00\x05\xcc\xd5t\xf2\xd6\xbe\x1f\xd0\xfe\x18\xddF\xad\x92\xb2\xbe\xa5\xac,\x9fUX\xe2\x8c\xfd7\x11\xef^\xbe\x07\x891\x10\x97\xb1\xa0\xe3S\x97}9\xbe\\\xd1\xb6\xbe\xad\x9fM\x96\xe7\x18\x9c*OF\xba_F\xbe\xedO\xac\xbfh\x7f\xd8K\xe3G\x88\xcd\xc5\xbf\x85\xf5\xed\n\xc6\xcahM\xb3Z^\xc5\x14\xb6\xf7\x08r7+\x88\x9eD,\xa4\xa9S\xb9OQ\xb6\xbf1>)\xf8\'U\xf0x\xfb-\xd5\xe5\x8c\xaf\x19*\xc6\x12\xe4C\x8e:\xb0\x06\xa2\xbe\xff\x00\x82\xe2\xfe\xd0\x1e\x10\xf1+M\xe1\xff\x00\x13X\xe86K1\x91l-mJ\xda\xaf9\x01c\x9d\xa4*\x07\xb7\xa79\xaf\x0f\xf1\x9f\xed\x7f\xacx\xf7\xc57\x1a\xc5\xc6\x8b\xa2\xde\\\xdeL\xf7\x13\x1dBK\x8b\xe429,\xc5S|q\xaa\xe4\x9e6\xd7\xde\xc7<\x9dZIb)\xb7\xa6\x96\x97\xe1wg\xf8\x1f\xb7\xf0\xef\x8e\x98\x8c-\x17\x87\xc6k\x1bi\xcb\x1b7\xea\xee\xef\xeaz&\xa3\xfb]x\xd3\xc2_\x06\xb5_\x86:}\xf2\xc9\xe1\xbd~\xe6=J\xe6\x14S\xe6\x9d\xbd\x15X\xf2!v\n\xcc\xa0`\xb4js\xd4\x1e\x03B\xf1G\x884u\x9b\xec\xb1\xc3o%\xd7\xde\x94"\x89\x80\x19\xf9U\xf1\xb9A\xcf!H\xcf|\xe0W\x15\xf1\xe7\xe3\x0e\xb1\xf1\x0f\xc7\xba\x1e\xab\xf6}\'O\x9a\xce\xc6+q\xfd\x95\xc4ck1b\xcaX\x85\'\'\xe5\xce\x00\x02\xba\xef\x14\xdbx\x8b\xc2\xb1\xc54\x96\x7f\xdbzL\xd1\xa5\xc2j\xfa\x13\x8b\xabx\xd4\xf4\x13\x01\xfe\xa6A\x9c2\xbe9\xe8H\xc1\xad0x\xcau\xd4e\x8e\x97#\xe8\xaft\xbc\xaf\xa5\xff\x00\xad\x0f\x1a~(T\xaf\x89\x9c\xb9\xbd\x9f\xbd\xa3\xb7\xa6\xbd\xef\xeb\xf7\x9e\xa9\xfb+k\x1a~\x8f\xf1R\xc7Y\xf1\x07\x88<I\xe1\x99\xf4\xf9\x04\xd6\xb7z5\xa47\x17\x0b)\xe00yN##\'\x0e\x11\xca\x9c\x102\x01\xaf\xd2/\xd9\x83\xe1\x1d\x97\x88\xf4\xe9<I\xe1{\xef\x86\x9ae\xe6\xa2\xed\xe6\xea~-\xf1\xec?\xf0\x90\xdf\x85;L\xd35\xc2\x89|\xb2A\x0b\xb7\x08v\x1c/z\xfc\xa5\xf8]\xf1[\xc2\xb6\x1a\xa4m\xab\xea:\x95\xbe?\xbf\xa5\xb4\x83\xf0dr?:\xfd$\xf8\'\xe1\xcf\xd97\xfe\n\r\xfb(i\x7f\x0e\xbc]\xe2\xab}3\xc5\xde\x17\x82\xee\xff\x00C\xd5\xee\xee\x05\x8d\xe5\x8c\xcc\xe5\xfe\xc5\x19\x8d7\x98\x1d\x81f\x8d\xcb\xe432\xede\x18\xe8\xce0\xf8ia\xdb\xa7V\xeb{sY~k_S\xe78\xe39\x96c\x84Px\x99J\xfb\xa8J\xd1~\xb1\xb6\xbf;\x9fHx\xc7\xe2\x87\x81\xfe\x14\xd8\xbc>9\xf8\xd9\xf0\x8e\xd6\xe2\xce\'\x9d\xac<7\xa8\\x\x82\xfc\xa2c."\xb6P\xaa\x06@.\xee\xa8\t\x00\x91\x91_%\xea\xff\x00\xf0X\x1f\x00\xcf\xf1NKK_\r\xebW^\x1a\xf3c\x07Z\xbd\xbe\x10\xc8\xc5\x14"\xc9,*\x18ya@\\\x19X\xaa\x81\xd4\x0cV\x85\x9f\xc1\x7f\t\xfe\xcf\x1f\x0e\xe1\xf0/\x80\xf4\xf8t\xff\x00\xed\xe9"\xb9\xf1\x1e\xa3\x0c\xb2\xcfu\xaeM\x18\xf9cye,\xe6\xd6,\xb7\x97\x19\xc2\x92Y\xca\x96n:\xcf\x81\x7f\xb2\xa7\xc2?\x08h\xd7\x1a\xd6\xad\xe0\xff\x00\x07\xea\x9a\xce\xa7\x96\x8e\xe2\xefOK\xa7\x89\x89\xc6\x16\'\x065\xc1\x1c\x92\xa0\x9f^q_\x97\x7f\xac\x14\xaa\xe2^\x0e-\xa4\x96\xb2\xba\xb7\xe6\xef\xea\xb4?\x13\xc4b\xbd\x9a\xe5\xa6\x9f\xab\xb1\xf4\'\xc3\xad~\xf3\xe2\xbe\x89g6\x93k}kg}!\x8a\x03\x1c\x02X\x89\'\x00\xe5H;I\xe01\x18 g\xa75\xd7ZC\xe2\x7f\x81\xbe\x15\xd6\xb5\x9dA\xb4\xaf\xf8E\xb4pd\xd5\xa4\xbd\x9b\xc9\x8a\xc3\xb1/\xbf\x05\t\xca\x8f\x94\x92I\x00d\xf1^S\xa4\xfcQ\x93\xc2:\xabj\x1a\x95\xed\xc6\x8f\xa6\xc3o\xe4Z\xda\xe93\xa6!(6\xc5\xbd@\x00m\x1d\x00\x00\x858\xf6\x1e\x7f\xf1\xb7\xc1\x10~\xd5>\x18\xb5\x93V\xf1g\x88\xa3\xb1\xb7\x99\xda\x1b\x0bk\xb0"\x9c\xa9\xc2\xcf-\xbb\x86C/\xcd\x80\xddq\xc0\'\x15t\xf3j)$\xe4\xf9\xf5\xb3\xbd\x9f\xad\x95\xf4d`\xf3:\xb4\xea\xaa\x8aN>k\xfc\x8f\xa5\xb4)|\x1b\xfbBhqjZ]\xc6\x87\xa8d\x90\xd1\xcec\xbd\xb7$\xff\x00\n\xdc\xc6|\xc5?\xec\x96\xfc+\xcf\xfe(\xfe\xca\xfa\x1d\xa3\xc2\xd7\x9e\x1f\xba\xb1u\x90L\x92\xda\xbb^\xc3\x13\x0c\x1d\xea\x0f\xce\xb8\x1c\xe5pF85\xf3\x8f\x81\xff\x00a]K\xc0\xda\xcak^\x15\xf1\xe5\xee\x83\x7f\x17F\xfe\xcf\xdb0\x1c`>\xd9B\xba\x9c\xfd\xd6R=E}\x15\xff\x00\x0b\x03\xe2\xf7\x83\xfe\x10_Ig\xff\x00\x08O\xc4O\x14i\xac\x8f\x0e\x99:\xdc\xe8\x8d\xa8\xc29\x90$\x81\xa5\x89f\xdb\xd0\x10\x88\xc4\x8e;\x1fw/\xcc0x\xa4\xa3\x8f\x84\\\x9f^\xbf\x92?A\xcbs,\xaa\xbdH\xacu8\xce\xfas$\xe3%~\xb7V\xf9\xb4yo\x86\xbe(xeb_\x0cGyu\xe6]^\xb6\xcb\x1dF\x17Y\xa1\xb8\xe0o\x05\x89\xce\xf27}\xe2\xdb\x89\xeeEy_\xed\xf2\xb2xc\xe1V\xad\xadZ\xdb\xdd\xcf&\x96\x96\xe2\x0b\xcce\x83\xbc\xaa\xad\xe6\xf1\x8d\xa07\xcb\x9e\xb9\x1c\xe7\x8a\xf9\xe7\xfe\n)\xfbf\xa7\x89<\x7f\xa7\xea\x97\x1f\x0f\xfcK\xe0}b\xf0K\x06\xb1\xa4\xcf\x7f\x0c\xcdm{n\xe8\xac\xc0l\x8eh\x98\x82\xb9\x0f\x1a\xe4\x80\xca[\'\x1e)\xf1[\xfe\n\x95\xe3\x1f\x89\xbf\x06n<\x03\xadB\xb7\xd67W\x16\xf2\x9dN\x7f\x97Rxbb\xc2\tYN\xd9\x17~\xd6\xdc\xc3~Pd\x9a\xfd.\x86aO\r\x82\xfa\xbc$\xdf\xba\xd2}V\x9a\x7f\xc0?\xa92\x7f\x102\\\xa3/\xa7\xecq2\xe7Qk\xdeR\xe6\x8b{]\xf2\xab\xdb\xa3}7\xbb7\xe1\xfd\xa8\xefu_\t\xeaV\x1a\xdd\xd4r[\xbd\xb3El\xee\xaa\x8d\x03\x16\x04\xf2\x00\xe0\xe4\x8e}\xab\xe8\xef\xd9\xc7\xc5R\xe9\x7f\x0fm\xd3A\xf0\xe6\xb5\xe2\xbf\x1bx\xb2\xc9,\xb4-2+)\xa1\x8bbG\x99.\xa6\x9eEX\x92\xdd\x01f/\xbf\x18PK(\xcb\x0f\x87\xfe\x17\xfe\xdcz\xa7\xc1\x0f\x12\xdb\xea\x9e\x1b\xd0\xfc\x03\x1c\xd6\xce$\x03U\xf0\xcd\x9e\xb0\xccA\xef%\xd2I"\xf7\xe66B3\xc68\xc7\xbf\xfe\xd6\x7f\xf0p_\xc5O\xda\x8f\xe0|~\x05k]\'\xc1z-\xc7:\xb2\xe8WwE\xb5\x90\x01\x0b\x03\x19\xa4s\x15\xb8\xcb\x13\x12\x1c1?1 \x01^&\x1f7\xc5\xd2\x97<\xa4\xdc\xad\xca\x9b\xd6\xca\xf7\xbd\xef\xfa3\xcb\xc5x\xf1\x8b\xa6\xfe\xab\x0eY\xc6Z9\xb9;\xaf{\x9a\xf6I\xdf\xd1\xda\xfd\xce"\xc7\xf6\xb2\xd7<\x13\xacj\x12Y\\E\x0c\x9a\x95\xcc\x12\xdd\xc00b\x9da%\x96&\xfe\xf4d\x9c\xe388\x07\xb0\xaf\xd4\x7f\x06~\xd3\xfe\x0f\xd14\r\'T\x8e\xde\xf3\xc6\xde0\xd6\xed\x17P\xf0\xdf\x85\xa1\xbb\x16\xcbm\x11\x88<\x9a\x96\xa7;|\xb6v\xc8\x0e\x14\xbe\x1bb\x97\x01C+\x8f\xc1m+\xe2F\xa1oz\xf7\x96\xd6v\xd7\x17{\xb7+\xcf\xfb\xc1\x11\xeb\xbboL\xfa\x13\x9cWW\xe1?\x8b\x9e3\x96\xd7T\xb1\xd55K\xeb\x1d?V*\xd7q\xdcZ\x83ot\x06D{\xc6\x01p\x85\xb7\xaa\x93\x80\xe1\\\r\xea\xa4tR\xc6\xe2\x1d)P\x8f\xbd\xcd\xd1\xfa\xeb~\xf7\xf9~\x87\xce\xe6\xde*S\xcc\xb0\xb5#\x89\x8c\xeas\xb7\xa2\\\xa9\xae\xaaS\xd1\xa4\xfa\xa8\xadV\x97KC\xf4\xff\x00\xe3\xdf\xfc\x15/\xc3\xff\x00\x04<Iu}\xaem\xf8\xa1\xf1Ec\xd9\xa7iv\xc1\xf4\xed\x03@\x8d\xc6\xef\xdd\xa1]\xf1\xc3\xcf\x19\x1fh\x9f\x01\xe41\xa9P~5\xf8\xfd\xff\x00\x05\x15\xf8\xb3\xfbK+\xc7\xadx\x86\xe7F\xd2X\x93&\x95\xa3/\xd9,\x94zmS\xb9\xbe\xae\xccO\xade\xf8\x07@\xd3<Euc\x16\xb1\xa0I\xaa^]X\x01cq\x15\xdc\x8d/\x97\x12\xb7\x0b,\x85A\x89\x88bA\xf9T\x907\xf1X~*\xf17\x82\xed\xef\x96\xdfM\xba\xd1\xa5i\xa1IIct\x86<\x8f\xb8L\xa1Sp\xe8J\xe5I\x1c1\xaf\x81\xcecU\xd7\xb4\xe8\xcaK\xbf\xd9\xd3\xca\xf6\xd3\xd2\xe8\xfc\x0f6\xc6V\xc6Us\xaa\xe3\x17\xb2\x84tQ]\x12Ih\xbbw\xdc\xe2m\xb4\x95\xd7/d[yc\x92eB\xecK\xedb\x07S\x93\xd7\xf35q|\x07tT|\xd0\xf4\xff\x00\x9f\x84\xff\x00\xe2\xabK\xfe\x11E\xd5m\xe4\x9a\xce8\xae\xad\xe2\xe1\xda\x16\x12\xacy\xe8\t\x19\x1fL\xf5\xa1>\x15]\xba+-\x8d\xc3\x06\x19\x04By\xfd+\x81b \xb4\x95\xd1\xf3\x8f.\xbb\xb9\xf4w\x89\xbf\xe0\xb3\x1f\x1e\xbcK,m\xa5\xc3\xa2\xe8\xea\t\x19\x83O\x0c\xd8\xc9\xe8p\x08\x1e\xbe\xb5\x9d\xe1O\xda\xc3\xf6\xb9\xfd\xaf\xb5\xcb\xaf\n\xf8\x7f\xc5Z\xf5\xe3:$\x97\xf1\xda\xb2X\xdaX\xc0\xc4\x81%\xc4\xe7\x88\xd0\x90@\x19,\xe4\x10\xaa\xc4b\xba\xbf\x87\x1f\x06t\xbf\x19\xdcCc\x1d\xbe\x97\xa8\xea:\x8d\xd0\xb7\x8aH\x9eQ\x15\x94o\x85\xf3d;\xf1\xbb\'\x81\xfe\xc3\x1e\xd8\xaf\xd0\xaf\r|\x05\xf0\xe7\xec\xed\xe0\x98|\x1f\xe1{\x11o\xa7\xd8\x9d\xf7\x13\xc9\xfe\xbfS\xb9\xc0\x12\\\xcc\xdd]\xdf\x1cvE\xc2\xa8\n\x00\xaf&\x8e\n\x85\x18\xca\xa4\xb0\xf1\xb2\xefy]\xbe\x97\x95\xf6\xeat\xe2+:q\xe6\x93\xbf\x92\xd0\xf8oD\xff\x00\x82A\xe9W\x1aTw\x9f\x10>\'x\x83]\xf1$\xec\xaf0\xd2a\x8cYA\x9e\xb1\xab\\+K\'\xfb\xd8\x8f\xfd\xda\xf3\xff\x00\x8e\x1f\xf0O\xdb?\x86\xf66\xf6\x1e\x1d\xb8\xd6|I\xaa^6\xf0\x90h\xce\xb1\xdbC\xcf2J\x1d\x81v8\xc2\xa8\x1c\x02N8\x07\xf4KQ\xd0-[\xfdd1H\xcc{\x8e\x9cQ\xa5\xf8j3\xb4\x08\xd4\x8eA\x18\xca\x81^\x15\\vc,G5\xed\x05\xb4V\x8b\xcb\xa1\xe7}u\xb7\xb2?0|\r\xff\x00\x04\xb1\xf1\xf7\x8d\xe6Y\x1fD\x87I\xb6\x90\xf36\xa1r\x91\xb7=\xfc\xa0K\xfe`W}\xab\xff\x00\xc1#<A\xe1\xe8\xad\xd7K\xba\xd3uR\xc3\x13\x9b\x98\xda\xc8D\xd9\xfe\x1f\xf5\x9b\x97\x18\xe7\x83\xed_\xa3\xd6\x1a\x05\xbcQ\x1d\xb1\xc0\xa3\x1f\xf3\xccu\xfa\xd3nto"fW\x1bXq\xc8Q\xb7\xf4\xae\xff\x00\xed\x0c\x7f\xc4\xe5\xf2\xb6\x9f\x8e\xa7T1\x92\x8b\xbc,~f\xf8\xef\xfe\t\x1b\xe2\xad7N[\xcd2\xf3J\xd5.\x00\xcb\xd8\xc5\x03[\xf1\x8evH\xc7k\x1c\xfa\x85\x07\xd7\xb5x\xaf\x8c?g\x1f\x15|\x1a\xd4V\xdfR\xd1\xf5\x8d&\xe6\xeb1\xc7\x18FSu\xdbj\xec\xc8|\xfas_\xb2\xd7\x1ato\x13~\xf9A_\x9b\xe5Q\xc1\xff\x00=\xaa\x8d\x9a\xc1ep\xb2H\x82E\xdd\x85\xc9$\xff\x00\x85mG\x88\xb14}\xda\xb6\x9c|\xf4k\xee_\xd7sjx\xa7\xcdy\xa4|k\xe0_\xf8$\x07\x84|Q\xf0\xc7I\xb8\x85\xfc]\xe1\xff\x00\x185\x9d\xbd\xc5\xf5\xd8\x97\xed\x10\xc5rcV\x91\x0c\x1c.\xd0\xe4\x8c\x02\xa7\x03\x86\xafC\xf8\x1b\xfb\x14M\xf0sF\xf1d\x9e9\xf0\xd6\x9b\xa8x\xa2\xd7W\x10\xd9\xdeAm\x1b\xc5\x1d\x82C\x1bC4\x0c\xb1\xa4\x88\xd34\xb21\r\xf3\x0f,.N\t?H\xde[\xdb_\xc9\xe7[\xcdqi2\xa81\xc4\x922\xa99\xeeT\x8c{\x0ejm\x1b\xc2z\xc6\xa7\x15\xc7\xdb\xae!\xb8Y\x1e0eyI-\x12\xa8\n\x1c\xe7sm\xc6\x00<\x01\xc0\xadh\xe7\x15\xaa\xd1\x95\x19\xcaRr\xea\x9e\xde\x9f\x81\x15+T\x9d7I\xcbM\xd1\xe6\xbe\x1f\xf0V\xaf\xa8\xe9\xf7\x17\x92\xdb^E5\xd1U\x86\']\xbeLc g\xae\t\xe3=\xf8\x03\xd6\xb4\x93\xc2\x9a\xd5\xb6\x8b\x0e\x9do\xa5\xc3\xb7j\xb3\xdclm\xdb\xf3\xcb\x12O~\x9c\xf6\xafh\xb0\x97\xfb*\xc8\xc4\xc5\xa4\xda\x0f\xca\x14\x05\xfa\xd6e\xee\xaf\x0bH\xcd\xe5\xa9\xe3h]\xd5\xe3\xc7)\xa5\x17\xce\xe6\xee\xf7<|E(\xdbS\xc7t\xaf\x82\xd7QM#\xdf\xdfy\x92HFS%\xb3\xf9\x03]\x8f\x87\xfc\x19\x16\x84\x99Y\xb8\x0b\x8d\xa9\x16\xd5\xef\xd6\xba\x89Z6\x93\xee\xe3x\xee\x14\xf1Ud\xb6\x85N\xe9\x1dNNH\xdbZ\xd3\xcb\xa9\xc3X\x9c\xf0\x84b\xf4,\xe9\xaf\xe5\xbf\xca\xbf\xbcl|\xc4\xe2\xb5SQ\x06`\xc5\x97\xcc\x18\xf9\x97\xadd\xa4V\xf9]\xbeVOL\x8cf\xac\xd8I\x0e[j\xc6\x07\xaa\x9e\xb5\xd9N\x9f.\x87u\x1a\x8d4\xcf\x9b\xbfmO\xd8_\xc2\xff\x00\x14\xbe\x1d\xf8\x93Z\xd1|\x1euo\x1cjW\xd1\xde5\xcb]\xcb,\xdbL\x85\xa7\xf2\x91\xdfb\xb3g8\x03$d\x0fJ\xf8\x0f\xe2\xa7\xfc\x12\'\xe2\x9d\x97\xc3\x9do\xc7Zo\x87\xee\xa3\xd3t[\x7f\xb5\xdci\xd7\x92\xaa\xeaR\xc4\xb92I\x04#,\xcb\x1a\x02\xec\x1fkm\x04\xa8l\x10?g e\xd9\xfc8>\x94\xdf\x1fx\xbfG\xf8c\xf0\x97\xc4\x9e&\xf1-\xca\xd8\xf8{H\xd3\xa67r2\x82d.\x8c\x89\n\x0f\xe2\x96F`\x8a\x83\x92O\xa0$}\xa6M\x98Wv\xa0\xfd\xeb\xbe\xb7o\xd0\xfb\x0c\x0ei^\xad%\x83q\xe7m\xabn\xdf\xa2?\x9a;\xad5\x90\xee\x1d\x1b\x91\xe9\x8am\xa5\x86\xf9\x88\xdb\xce:\xd7\xaa\xf8\x9f\xe0e\xe2\xe9\xcd6\x94\x1a\xff\x00\xc9\\\xbd\xb0\xc3\\\x15\x03\x96E\x03\xe7\xc7u_\x98u\xc1\x19#\xd0\xff\x00do\xd9\'\xfe\x1a[\xe1\xdf\x8a\xad\xf4\xd8<\xbf\x16\xe9\xbb\xee\xb4\xb6,\x7f\xd2\xccI\xf3[:\xff\x00\x06\xe2\n\xa98;\xc8\xed\x9a\xfaLT\x9e\x1b\xdd\xaa\xac\xee\x97\xdezX\xbc\x8f\x13\x85\xc5}W\x13\x07\x19Z\xf6k\xa7\x93\xd9\x9f<\xcdh-$\x8aKs$rF\xb9v=\x18\xf5\xaf\xa9\xbfgo\x18Y\xff\x00l\xe9z\xbe\xb7y\xa5h+\xa1\xff\x00\xc4\xc3\x1a\xad\x9d\xcd\xc4R\xc9\xb7"\x13\x14(\xe5\xd6erU\xd9\x7fvN\xe0\xea@\xaf\x1d\xb5\xf8={\xae\xcb}\x1c%\x13\xec\xa2)$\xf3>W\x08\xfc3\x01\xdc\xa1# s\xfa\xd7\xbex\xcb\xc0"\xef\xc3p\xeaV\xf6\xed\x0c\xda}\xaa\xdb\x14e\xcf\x9b\n\xafL\xfb\x0f\x98\x1fL\x8a\xf6\xf09}^I9-6\xd7\xa9\xfa\x87\t\xf0\xde.\x11\xaf\n\x9e\xecZI&\x93\\\xda\xd9\xa5\xfd\xd7\xba\xea\x9e\xe9\xd9\xac\xef\x8b\xfe\x08\xd0\xff\x00i]WQ\xd5\xfe\x19\xf8\x97R\xb5\xf1=\xd4\x01\xf5_\t\xdf\xdeI*\xdeB\x80\xb1kY\x0e\x04\xc8\x83$\xc7\x80\xc82J\x01\x96\xaf\x9b\xda\xd2\xdfL[\xab{\xa8o"\xd4m\xdc\xa1\x8d\xb6\x85\x8f\x1f\xc2{\xe3\xd3\xf0\xafH\xb4\xf8[\xe2H5\xdf\r\xcd\xe1y\xaf\xee\xae\xb5K\xed\xb6\x82\xdeD\x86k[\xa8\xd80\n\xe4\xe1HVG\x0eq\xc1\xf6"\xbb\xbf\xdb\xb3\xc3\x90\xda\xcfiu\xafC\x0e\x8b\xe3\xc8a\x8do"\x05\x1e=z"0.A\x85\x164\x9d[;\xd3\x01X|\xcaz\xa8\xf9)9\xd3\xaf\xec\x9e\xd7\xb5\xba\xc5\xfev\xfc|\xcf\xc4\xf3\xc9sb\xaaC\x11\x15N\xb4[\xba[;vZ\xd9\xf9\xdf]\xcf\x99\xeddkfu\x8cm\xdd\xc1\xab@\xcc\x07\xfa\xc9?\xef\xe1\xa7I\x16,\xd9\xf6\xf2\xa3\xb5VX\x99\x86w7<\xf4\xafB*/S\xe7\xbd\xa1\xfa\x13\xe0\xeb\xedZ\xc7K\x91\x97u\xb6\x9f\x1d\xec\x17\rj\xbf)g\x8c\x92\x1dx?0\x0c\xcb\x9e\xbb]\x80\xe4\xd7\xdf\xdf\x0c?j\xbf\x07\xfcJ\xd2l\xf4\xff\x00\x10\xeb\x11i\xfa\xd1\xb7\x8dc\xd4\xafm\xbe\xc3e\xa9\x1d\xa0ww\xf2\xa4\xc8\xc1\xf3\n\x86\xc1o\x97;G\xc0\xbe\x11\xd2\xb5\x8b\xed~\xde\rQ\xa5:\x1c\x80\xc8o\xd6,r:q\xdf\x9fL\xf4\xad\xef\x13\xeaVz6\xab\x17\xdb\xfc\xc5\xd0\xd5\x8c/\x7f\x0b0\x99\x17\xf8[f\t*{\xe7\xde\xbcH\xe2a\x83\x8a\xc2\xe6T_\xb3\x93\xdd=b\xfb\xf5V}\x9e\xe2\xad\xfb\xd5\xed(\xb4\xdfT\xf6\x7f\xa9\xfa\x1b\xafx-\xac\x84sy#\xc9\x98\tb\x91\x08h\xe5R8*\xc3\x86\x07\xd4\x1c\x1a\xc9\x8a\xd1\xad\xff\x00\x85\x95Tc\x81\xd3\xad|\x15\xe0\xef\xda\xab\xc4\x1f\x06\xfcx\xfao\x81|}\x05\xf7\x86\x04M<\x89$\x91\xb4q\xb0\x1d\x1a\xdd\xf7D\xd9\'\x03\n\x1b\x1c\xd7m\xa4\x7f\xc1Zukm~\xde-r\xdf\xc0:\xa5\xbf\x98"\x9e\t\xad.\xf4;\xacg\x04\xac\xead\xb6\xc9\xed\x94\x03\xd7\x15\x85n\x1b\xa1Ys\xe1+Gv\x92\x93Q\x96\x9eOO\x9d\xc9\x95\x19\xc2\x94k\xce-FW\xb7\xda\xda\xd7\xda\xed-wi\x1fb#I\x0cg\x00\x0e;\x8c\xd5{\xb9\x83\x12[\xe7lp\x00\xc6~\xb5\xe7\x1f\x0f\xff\x00l\xff\x00\nx\xba\xc9\x9fZ\xd1\xef|\x16\xdetq\x99/u\x18/\xed<\xa6}\xafq\xe6\xc4\xaa\x04Q\xf0N\x01v\x1c\xaa\xb6\rj\xd9\xfe\xd6_\nn|\xd3m\xf1\'\xc36\xa3-\x93|.,\xf7\x0e\x99\x06h\x95q\xc7\x18\'\x8cW\x8f\x8a\xe1\xbc\xca\x9d\xe2\xe97n\xda\xfeWL\x98\xf2\xdb\x995o\xeb\xfa\xd4\xeb\x95$\x08\xbf\xbbd\x0cq\xc7R*\xab\xe9\x8a\xd3o-\xbb\x91\xc3r+\x9dO\xda7\xe1\xc5\xfcl\xd6\xff\x00\x13>\x1d\xcd\xf6\x7f\xbf\x9f\x10\xdb(L\x8e>\xf3\x0c\xe7\x07\xa7\xa5\\\xb9\xf8\x89\xe1\xd9<\x08|L\x9e&\xf0\xcc\xfe\x19\x8e\xfc\xe9\xa7Y\xfe\xd3\x8b\xfb<]\x08\xc4\xa6\xdcO\xbb\xcb\xf3Dd6\xcd\xdb\xb6\x9c\xe2\xbc\n\xb9>)i:r\xfb\x99\xa7\xbf\xd1\x1d\x05\xbc1\xc3h9@\xc7?2\xf1\x9a\xb9\xa3\xebQ\xe9\xf7K\x1b\x1f2)\x81\x8d\xff\x00\xa7\xe3\x9f\xe7^Gy\xfbQ|1\xb4\xb1\x9a\xf2\xe3\xe2\x97\xc3\x94\x82\xdd\x95%s\xafA"D\xcd\xb8\xaa\x9d\x85\xb9`\xac@\xeav\xb7\xa1\xac\xbb\x9f\xdbG\xe1\x1c\xc2\x18-\xfe\'\xf8\x1e\xeak\x80Z5\x82\xf5\xdc\x908\'!\x08\x18>\xb5\x14\xf2\xfcL}\xe8A\xe9\xe4\xff\x00\xc8?y\xd9\xfd\xc7\xbcM\xac\xab\xb1\xd8\xaf\xf3\x83\xf7\x87J\xcf\x92\xe5\xe0\xdd\x8eww#5\xe5W\xdf\xb5\xd7\xc3\xa8\xf4\x7f\xb7\xb7\x8f<-%\x98\x08\xa1\xad\xe7\x92\xe6R[w\x02(\x91\xa4\xe3i\xe4\xae\x01\xc7\xa8\xcf7\xa9\xfe\xde\x7f\x0b\xf4\x97\x8dc\xd7u\xedO*$\x02\xc3\xc3W\x93\x8c\x11\x9ce\xd5\x06\xee\xc4pA\xe3\xd6\xbd*y&c5x\xd1\x9b\xff\x00\xb7e\xfeG\x1dI]\xdbO\xbd/\xcc\xf7\x18\xef6\xc6\xc5\xd21\xe5\xf7\xdd\xb7\xf2\xa8\xcf\x88#\x8d2\xac\x83p\xe0\x91\xcd|\xd1\xaa\x7f\xc1G<2\xf7A4\xbf\x04\xfcJ\xd6\x95\x8f\xfc\xb4\xd3\xedt\xf5o\xa1\x92f=?\xd9\xaew[\xff\x00\x82\x90j\xc4O\x16\x8f\xf0\xf7\xc3ZL\x91\xfc\xdb\xbcA\xe2\x07\xbc\x95\x17\xd7\xc9\xb5X\xf2\xde\xdb\xcdz\x11\xe1L\xdd.i\xd3p\x8fy\xb8\xc1\x7f\xe4\xcd\x19\'\x0b\xdb\x9d|\x9ao\xeeWg\xd6\xd0\xebFV\xdd\xe6nPp\x17o_z\xd5\x9e\xf6\x1f\x0ci\x0b\xa9k\x17\xfan\x81\xa5\xb1\xc9\xbc\xd4\xee\xa3\xb4\x80\x8f\xf6ZB7\x1fe\xc9\xf6\xaf\x80|Y\xfbq|K\xbf\xfb?\xfcT\xcf\xa4GtH\x8e?\r\xe96\xfa\\G\x8eA\x9d\xbc\xdb\x8f\xc9\x85s>.\xf0\xcf\x8b5_\x1cY\xeaW\xd7\x96\xda\xd4w\x96\x91\\\xad\xed\xfd\xcb\xdf_\x97\xe7\xcc\x8bt\xec\xec\x14p7\r\xa3\xe7\xc0\x1cq\xd5\x87\xca2\xea\t\xd5\xcc1\xd0Q\x8a\xbb\xe4\xbc\xbeI\xd9F\xefe\xab\xbb;\xf08y\xd7\xa8\xe3\x1bF\xc9\xbb\xce\xf1Z+\xd9Y96\xf6J\xda\xbe\xabs\xee\x1f\x1e~\xdf\x1e\x01\xf0\x06\x8b<\x9a%\xbe\xa1\xe3\xadJ4&\xdc\xc3\x03\xd8\xe9nGV3\xca\xa2Y\x10u>TG#\xa3\x0e\xb5\xf9\x9b\xfbi\xfe\xdb\xdf\x10?h\xcf\x8c\x1f\xd9\xfe%\xd6`\x9b\xc3\xba|\x82m\x1fM\xb0\xb7kM>\xd4:czBI&C\xca\x99$,\xe4\x0f\xbd\x83]\xcf\x80\xecc\xf0\x8f\xc3\xedkM\x13\x86\xbd\x92\xfa\xe8Y\xf9\xa0\xcc\xd6\xd0\xb9\xfd\xdf,q\xc2\x9d\xbbNzf\xbc\xb7\xe2\xdf\xc1\xeb\x9doL]N\xea\xe1b\xd5\xb4\xa8\x83Z\xb0\x1b\x92\xf5\x01,\xc8\xfc\xe5[\'*\xdc\x8e\xaaF\x08#\xe9\xa8gy\x06\x19\xd2\xa5\x82\x97\xbc\xec\xe5&\xee\xd5\xd6\x89\xbb[}\xec\xb4\xd9\xbe\xdf\xa7e\xf3\xca\xf2\x8cF\x1e\xae\x1a\xab\xa9R\xc9\xc9\xe8\xa1\x1b\xa4\xec\x92N\\\xda\xd9\xbem=v\xe4D\x97SL\xe8\xa5<\xb9\x17\x01ORO\xf5\xafX\xf0\xc7\xed7\xf1\x1f\xc0\xf6\xda}\xd5\xb7\x88\xa3\xbc\x9am#\xfb\x1e\xdbP\xd4m\xa3\xbb\xbe\xb7\xb6t*bI\xd8o\x18\xc3l,[n\x01\\u\xaf3\xd0-%\xd5\xde\xceh\x97u\xad\xe2\x96\x94\xb7h\xb1\xf3\x12{c8\xfa\xe0W]\'\x86\xef<k\xe1\x08\xec\xcd\xaa,:\\)e\x04\xb0\xae\xd6\xc0vtf\x1d\xc8$\xae\x7f\xbaG\xa5}f+\x13\x85X\xdaxJ\xe97%u~\xf7\\\xbf\x7fC\xf5l\xeb8\xc2\xff\x00j\xe1\xb0\x18\x88\xc6J\xa4[NOf\xec\xe1n\xcaVg\x0fc\xad\xcf\xa3|K\xd3\xee-\xe4\xf2\x9a\xdc\x99\x9bw\xdc!cr\x14\xfb\x12\xa2\xbd\xd7\xe1\xe3j\x1e/\xf0\xb7\xf6\xf7\x87\xed\xa6\xd4\xac7\x81\xa8i\x8cq=\x9b\x7f\x10\x8c7\xdfA\xd4c\x828\xf6\x1e]\xe0\xcf\x85\x13|@\xb9\xbc\xf3\xae\xadt\x96\x84\x1bX%\x9c\x13\xe64k\xb5\xfav\xdcXg\xda\xbd\xaa\xe2\xee\xfb\xe0\xff\x00\x82\xb4\xbbxt\xfd?\xc3Z\xa5\x9a\x96:\xb2N/\x13QV\xfe\xecx\xeb\xc8\xe1\xb23\x8ct\xc5yo\x88\xbd\x86>t\xe9{\xd0N\xd2]\x9a\xec|\x1e}\xe25l\xb7=\xab\xec\x93\x95$\xf9e\x1d\xb5Ox\xf9\xfe\x0e\xdeG\x96\xeb\xcf\x0f\xc3\x9f\x88Q\xd8\xff\x00jjz\x1e\x9b\xa9\x08\xb5->h\xee\x8c\r\x17.\xaa\x08\x03+$gzg\xd0\xe0\x8a\xe7\xff\x00i\x8d\x1e\xd7\xc7\xb2\xd9\xebo\xa5j\xb7S\xc4~\xcds\xa8\xae\xa7\xe6}\xbdG\xdd\x7f-\x90\xecn\x9f\xc4A\xc1\xe3\x9a\xe8\xfe>\xeao\xf1\x8f\xc4\xfa\x0b6\x9f\x0e\xa9w\xa6\x95&\xe6\xda&\x8f\xed(\xc4\x16FQ\xc1b\xd99\x18\xe4\xd7\xa6\xfe\xd1\x16^\x19\xf1\xfe\x87\x1d\xbf\x84t\xcb\xed3P\xb2\x823=\xac\xc8c-\xf2\xf4\xc6Ols\x81^\x06m\x8a\x8dI\xcb\x1f\x87\x9d\xd3i;\xe9k\xff\x00\x91\xf9\x9f\x12f\x94\xb1\xd9\xa4\xf14n\xd4\xac\xd5\xd5\x9a\xd1]y\xdb^\xafK\x1f+x/\xc0Z.\xa5\xa8\xa5\x9d\xc4w\xd0\xc70%\xa5\x92\xe5\x03A\xd7\x07\x1b0GN\xb5\xa3u\xf0\xff\x00\xc3p\\\xc9\x1a_]:\xa3\x15V\xdc\x9f0\x07\xafJ\x96\xff\x00B\xbd\xb2\xd6M\x80\xb3hn/\x17i;p@\xfa\xd5\xe8\xfe\x13L\x11~Xz\x7fz\xbc\xda\xd8\xb8B\xcaU\x1f~\xe7\x83\xcd+\xdd#\xef\xff\x00\x8c\x9a\xa7\x87\xfe\x1fh:5\xbb\x7f\xa7}\x98\xedx\x83c\xca\'\xd7\x1dy\xed^\x1f\xf1\xcf\xc6\x86\xe3J\x92\xe3JhYX\x8c\xc5\xd1\x8f=1E\x15\xf7y\xe6\x16\x9e\t\xbc,\x174jB\xef\x9b[i\xd3\xb1\xe1\xfdj\xa4\xdc^\xdc\xad\xad;\x1eJ\xdf\x0f\xa6H\xe4\xd7,\xe6\x8e\xdfP\xb7O6[<\xe2F\xc8\xecq\xfa\xd7\x07q\xab\xcd\xe3\x1b\xf8\xec\xe3\xf2\xb4\xfb\xc9\xa49\x98)lg\xb9\xfa{c\xebE\x15\xf0\xb52\xea4q\xd5\xa9Ei\x05\x0b_\xcdm\xe8{tqU\x1d\x08\xcd\xee\xef\xf8\r\xf8\xaf\xe1\x0b\xaf\x06\xf8\xb7I\xb7]V]B\xc4\x84bT\x15\x8c\xb9<\xf1\x93\x93\x9c\x1c\x92j\xf6\x83\x06\xa7\xe1K\x96\xbak\xdb\xabX\xd8e^\xd8\x9c\xe3\xb7\xb7=\x0eA\xe34Q_e\x97\xd6\x9a\xca\xab\xd7\x8b\xb4\xa2\xd5\x9a\xe9\xa7\xfc\x03\xf5\x1c\x874\xaf\x1e\x15\xc7b\xe4\xf9\xa7\xcd\x15w\xaf\xc6\xb9^\x9eIi\xd1\x1fNx/\xc1\x9e\x1e\xd6<\x1b\xe1\x9f\x11^]i\xba\xa4\xd2,\xb0\xeb\x1al\x90*\xdc@~c\x1d\xc0\\\x9d\xea\x07\xca\xd8\xc0\x1f)\xc7\'\x1eu\xfbA|I\xd6\x1f\xc5\xf6\xbe\x13\xf0\xbd\xe7\xfcQ:K#\xcdf\x11[Nk\xd6\xc9\x96eL\x15\x04\x06T,\xbc\xb1S\xebE\x15X\\\xf3\x17S\x01*\xb3\x97\xbd\x15&\x9e\xbb\xa4\xda\xeb\xdc\xc7\x840\xf8Z\xb9=H\xd4\xa1M\xfb5;7\x05wh\xb9+\xbe\xba\xfe\x07\x11\xf6-[T\xd4\x96\xe7\xec\xbaM\xa5\x9c\x8d\xb5"\x87M\x8d#\x8f\x0b\xc2n \x9fq\x93\xc8\xce=+\xad\xf0\xdbG\xaa\xf8F\xfe]:\xea\xd6=N\xc2M\xb7A\xe3\x11y#\xe8\x00\x04q\xdf\xd2\x8a+\xcd\xa7\x9dcqThJ\xa5Y+\xc6W\xb3j\xf6j\xcd\xeb\xb9\xf2\xfcI\x87\xc3<\xab\x05\x89\x85\x18FMJ\xfc\xb1J\xf6kW\xe7\xdc\x9f\xe1\x9e\xb7\xaaC\xe2\xcbk\x8dcX\x9e}%n\x07\xda\x16\xde\x13"\x14\x1d\xb6\xe4u\xc7\xaf\x15\xab\xf1o\xe3v\x8f\xe2\xef\x12\xea\xd6\xfe\x13\xb1\xd4-\xact\xfc\x11%\xc3\x94K\x83\xb7\x07\xe5\\m\x03\xd34Q^z\xc4\xd6\x9b\xa9\x19NZ]\xee\xef\xb7\xa9\xf2\xb2\xb2Qi/\xb9wG\x97h\x9f\x17m\xfcA3iz\x95\x95\xa5\xa5\xb4\x8cY\xefl\xd2O6<v$\x96;~\x9c\xd7a\xf0\x9b\xc0~\x13\xf1\xd7\x8c&y\xb5\xab\x1d+\xec\xb18\xb6\xbbh\xcb,\xac:\r\xb9\x18\xcf\xf9\xc5\x14W\x93\x9aaa:Jr\xbd\xd2\xef\xe4uQ\x93U,\xbfB\xe7\xc4=\x19\xb5\r2\xdeK;\xa4\xb8\xb7\xd3w\t^\xdf?!=\xf0:~=3\\\xcf\x82\xbcM\xaa\x0b\xcf\xf4{\xc9\xae\xadrA\x9byl\x0fL\xf3\xd2\x8a+\xe5\xf2\xec-:\xb87N\xae\xaa\xfdMk\xd4\x92\x92h\xef,\xe6\xd2o\xf5\x8b;M5\xe4\xfbD\xa73\x16\xdc7\xb7\xd7$V\x97\xc4_\x87\xf7S[yd1\x9a5\x1b\x95\x19x\x1d\xbd:\x8a(\xaf\xa2\xe2\x8e\x1f\xc1\xe1\xf2Z8\xfa1\xb5K\xda\xeb\xaa\xb6\xc7\x99\x82\xc6U\x962T\xa4\xf48\xbd?\xc1\xdao\x85\x96\xed%\x8ea6\xa4v\x84/\x88\xd3\x90K\x05\xe8\t \x13\xef\xf55\xed\xbf\x00\xff\x00g\x01\xf1#\xe1\xee\xad\xa9>\xad\x0e\x93ca\x99Im\xe9\xbd\xd4d|\xea\xa4\x0c`\x1f\xc4QEy\x99%i\xe6Ua<[rj6Z\xf6\xd8\xf5\xb1\xf8\xaa\xd2\x92\x94\xe6\xdbI$\xdb\xd5%\xb2^\x9d\n_\xb2\xdf\xc0\x1d/\xe3\xb7\xc6k?\r\\k_a\x8eY\xa5\xb9\x9e\xf48M\xc3qb\x89\xbb\x00\x97c\x92}\t5\xca\xfe\xd0_\x0c\xf4\x9f\x86\xbf\xb4^\xbd\xe1Xoc\x9bL\xd2/~\xcd\x1c\xa0p\xf8\x00\xe4\x0e\xdfA\xde\x8a+\xe9p\xb4i\xd5\x85:\x95#v\xe6\xe2\xf7\xd5%\xd4\xe0\x9dI\xcb\x9eM\xea\xd75\xfc\xdd\xb5=\x17\xc4\x7f\x06<\x0b\xf0\xb7\xc1\x9a\x0f\x8f<=\xe3k}cR\xb0x\xe6\xba\xd2^T\xdc\xb2+\xabcf\x03\x81\xc1\x1c\xe79\x1c\xfa\xf3_\x1e\x7fj\x9d\x0f\xe3\xd5\xda\xddh^\x03\xd4\xf4\x7f\x14O\x1a\xc0\xf7\x8a\xe8\xd1\xb2)\x1c\x820\xc4c#\x04w\xa2\x8a\xd2\x8d\x1an\xbc\xb0QV\xa7)$\xd2\xf5\xf3\xbe\xa7,\xb1U\x15\xea\xf5G\x91\xdch\ti\xad\xc8\xfa\xe3Ikyj\xe0\xa0\xdb\xf7\xd4\x8f_\xaf\xeb^\x97a\xe0\xbf\xb6X\xc32\xc9\x0e\xd9cW\x19\x8aN\xe3>\x94Q_Q\xc3\xfc7\x83\xc4U\xadB\xa2v\xa6\xd2Z\xeb\xaf}\x0f7\x15\x99V\x82\x8c\xe2\xfe%v\x7f\xff\xd9'
2023-06-29 11:11:55,564 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:11:57,784 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:12:02,032 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:12:04,912 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:12:12,261 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:12:32,246 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:12:35,499 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:12:38,668 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:12:42,936 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:12:46,851 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:12:52,866 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:13:07,935 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:13:21,023 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:13:22,959 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:13:25,015 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:13:42,963 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\models.py changed, reloading.
2023-06-29 11:15:01,688 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:15:04,789 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:15:11,150 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:15:14,323 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:15:19,659 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:16:33,851 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:16:44,674 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:17:26,611 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:25:55,651 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:26:03,992 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:26:53,395 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:27:19,341 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\models.py changed, reloading.
2023-06-29 11:27:28,674 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\models.py changed, reloading.
2023-06-29 11:27:35,898 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\models.py changed, reloading.
2023-06-29 11:32:58,967 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\models.py changed, reloading.
2023-06-29 11:34:14,568 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:34:27,500 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:34:30,499 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:34:32,363 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:34:37,531 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:34:45,804 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:34:52,025 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:35:05,029 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:35:13,430 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:35:18,831 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:35:23,150 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:35:31,686 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:35:37,137 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:35:48,041 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:35:57,848 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:36:06,406 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:36:08,637 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:36:10,795 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:36:20,530 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:36:29,122 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:36:42,356 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:36:45,607 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:36:56,489 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:37:04,013 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:37:09,037 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:37:15,411 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:37:27,390 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:37:30,375 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:37:35,726 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:37:48,926 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:37:57,467 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:38:05,833 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:38:09,072 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:38:22,127 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:38:35,315 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:38:37,557 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:38:59,129 - INFO - saveImage : starts
2023-06-29 11:38:59,131 - INFO - Image Present in the request
2023-06-29 11:38:59,131 - INFO - Image is reading...
2023-06-29 11:38:59,131 - INFO - Image reading Completed
2023-06-29 11:38:59,156 - INFO - Image saved
2023-06-29 11:41:19,415 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:41:21,625 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:41:29,843 - INFO - saveImage : starts
2023-06-29 11:41:29,843 - INFO - Image Present in the request
2023-06-29 11:41:29,854 - INFO - Image is reading...
2023-06-29 11:41:29,854 - INFO - Image reading Completed
2023-06-29 11:41:29,869 - INFO - Image saved
2023-06-29 11:42:48,593 - INFO - saveImage : starts
2023-06-29 11:42:48,593 - INFO - Image Present in the request
2023-06-29 11:42:48,593 - INFO - Image is reading...
2023-06-29 11:42:48,593 - INFO - Image reading Completed
2023-06-29 11:42:48,629 - INFO - Image saved
2023-06-29 11:44:11,102 - ERROR - Internal Server Error: /products/saveproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\parsers.py", line 64, in parse
    return json.load(decoded_stream, parse_constant=parse_constant)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\utils\json.py", line 31, in load
    return json.load(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 293, in load
    return loads(fp.read(),
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\codecs.py", line 504, in read
    newchars, decodedbytes = self.decode(data, self.errors)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 142: invalid start byte

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 117, in saveProduct
    product_data = JSONParser().parse(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\parsers.py", line 66, in parse
    raise ParseError('JSON parse error - %s' % str(exc))
rest_framework.exceptions.ParseError: JSON parse error - 'utf-8' codec can't decode byte 0xff in position 142: invalid start byte
2023-06-29 11:44:52,723 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:45:01,401 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:45:05,364 - ERROR - Internal Server Error: /products/saveproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\parsers.py", line 64, in parse
    return json.load(decoded_stream, parse_constant=parse_constant)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\utils\json.py", line 31, in load
    return json.load(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 293, in load
    return loads(fp.read(),
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\codecs.py", line 504, in read
    newchars, decodedbytes = self.decode(data, self.errors)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 142: invalid start byte

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 118, in saveProduct
    product_data = JSONParser().parse(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\parsers.py", line 66, in parse
    raise ParseError('JSON parse error - %s' % str(exc))
rest_framework.exceptions.ParseError: JSON parse error - 'utf-8' codec can't decode byte 0xff in position 142: invalid start byte
2023-06-29 11:58:49,251 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\urls.py changed, reloading.
2023-06-29 11:59:05,096 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 11:59:13,405 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:01:33,669 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:01:55,810 - INFO - saveImage : starts
2023-06-29 12:01:55,810 - INFO - Image Present in the request
2023-06-29 12:01:55,810 - INFO - Image is reading...
2023-06-29 12:01:55,810 - INFO - Image reading Completed
2023-06-29 12:01:55,856 - INFO - Image saved
2023-06-29 12:02:55,752 - ERROR - Internal Server Error: /products/saveproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\parsers.py", line 64, in parse
    return json.load(decoded_stream, parse_constant=parse_constant)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\utils\json.py", line 31, in load
    return json.load(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 293, in load
    return loads(fp.read(),
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\codecs.py", line 504, in read
    newchars, decodedbytes = self.decode(data, self.errors)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 142: invalid start byte

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 118, in saveProduct
    product_data = JSONParser().parse(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\parsers.py", line 66, in parse
    raise ParseError('JSON parse error - %s' % str(exc))
rest_framework.exceptions.ParseError: JSON parse error - 'utf-8' codec can't decode byte 0xff in position 142: invalid start byte
2023-06-29 12:04:03,969 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:04:06,227 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:04:08,325 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:04:10,300 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:04:21,978 - INFO - saveImage : starts
2023-06-29 12:04:21,981 - INFO - Image Present in the request
2023-06-29 12:04:21,981 - INFO - Image is reading...
2023-06-29 12:04:21,981 - INFO - Image reading Completed
2023-06-29 12:04:22,011 - INFO - Image saved
2023-06-29 12:04:38,435 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:04:44,627 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:04:47,854 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:04:50,777 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:04:55,093 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:04:57,757 - INFO - saveImage : starts
2023-06-29 12:04:57,757 - INFO - Image Present in the request
2023-06-29 12:04:57,757 - INFO - Image is reading...
2023-06-29 12:04:57,757 - INFO - Image reading Completed
2023-06-29 12:04:57,773 - INFO - Image saved
2023-06-29 12:10:08,038 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:10:11,094 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:10:15,171 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:10:23,399 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:10:29,669 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:10:32,558 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:10:38,686 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:10:43,772 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:10:49,177 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:11:16,334 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:11:20,723 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:11:26,089 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:11:40,726 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:11:53,040 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:11:57,412 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:12:54,453 - ERROR - Internal Server Error: /products/saveproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\parsers.py", line 64, in parse
    return json.load(decoded_stream, parse_constant=parse_constant)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\utils\json.py", line 31, in load
    return json.load(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\json\__init__.py", line 293, in load
    return loads(fp.read(),
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\codecs.py", line 504, in read
    newchars, decodedbytes = self.decode(data, self.errors)
UnicodeDecodeError: 'utf-8' codec can't decode byte 0xff in position 146: invalid start byte

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 124, in saveProduct
    product_data = JSONParser().parse(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\parsers.py", line 66, in parse
    raise ParseError('JSON parse error - %s' % str(exc))
rest_framework.exceptions.ParseError: JSON parse error - 'utf-8' codec can't decode byte 0xff in position 146: invalid start byte
2023-06-29 12:13:48,281 - INFO - saveImage : starts
2023-06-29 12:13:48,287 - INFO - Image Present in the request
2023-06-29 12:13:48,287 - INFO - Image is reading...
2023-06-29 12:13:48,287 - INFO - Image reading Completed
2023-06-29 12:13:48,320 - INFO - Image saved
2023-06-29 12:13:48,418 - ERROR - Internal Server Error: /products/saveimage/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 52, in saveImage
    image = Image.objects.get(id=image_id)
NameError: name 'image_id' is not defined
2023-06-29 12:15:05,641 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:15:21,083 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:15:23,018 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:15:25,909 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:15:37,780 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:15:39,941 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:15:45,341 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:15:49,367 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:17:30,578 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:17:32,800 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:17:41,067 - INFO - saveImage : starts
2023-06-29 12:17:41,067 - INFO - Image Present in the request
2023-06-29 12:17:41,067 - INFO - Image is reading...
2023-06-29 12:17:41,067 - INFO - Image reading Completed
2023-06-29 12:17:41,104 - INFO - Image saved
2023-06-29 12:17:41,241 - ERROR - Internal Server Error: /products/saveimage/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 52, in saveImage
    serialized_image = serialize('json', [image])
NameError: name 'serialize' is not defined
2023-06-29 12:19:02,142 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 12:19:07,828 - INFO - saveImage : starts
2023-06-29 12:19:07,828 - INFO - Image Present in the request
2023-06-29 12:19:07,828 - INFO - Image is reading...
2023-06-29 12:19:07,828 - INFO - Image reading Completed
2023-06-29 12:19:07,857 - INFO - Image saved
2023-06-29 12:21:07,766 - INFO - saveImage : starts
2023-06-29 12:21:07,771 - INFO - Image Present in the request
2023-06-29 12:21:07,771 - INFO - Image is reading...
2023-06-29 12:21:07,771 - INFO - Image reading Completed
2023-06-29 12:21:07,804 - INFO - Image saved
2023-06-29 12:22:36,564 - INFO - saveImage : starts
2023-06-29 12:22:36,564 - INFO - Image Present in the request
2023-06-29 12:22:36,564 - INFO - Image is reading...
2023-06-29 12:22:36,564 - INFO - Image reading Completed
2023-06-29 12:22:36,596 - INFO - Image saved
2023-06-29 12:23:32,016 - INFO - saveImage : starts
2023-06-29 12:23:32,016 - INFO - Image Present in the request
2023-06-29 12:23:32,016 - INFO - Image is reading...
2023-06-29 12:23:32,016 - INFO - Image reading Completed
2023-06-29 12:23:32,046 - INFO - Image saved
2023-06-29 12:24:21,308 - INFO - saveImage : starts
2023-06-29 12:24:21,308 - INFO - Image Present in the request
2023-06-29 12:24:21,308 - INFO - Image is reading...
2023-06-29 12:24:21,308 - INFO - Image reading Completed
2023-06-29 12:24:21,371 - INFO - Image saved
2023-06-29 12:25:30,605 - INFO - saveImage : starts
2023-06-29 12:25:30,605 - INFO - Image Present in the request
2023-06-29 12:25:30,613 - INFO - Image is reading...
2023-06-29 12:25:30,613 - INFO - Image reading Completed
2023-06-29 12:25:30,629 - INFO - Image saved
2023-06-29 12:26:37,347 - INFO - saveImage : starts
2023-06-29 12:26:37,348 - INFO - Image Present in the request
2023-06-29 12:26:37,348 - INFO - Image is reading...
2023-06-29 12:26:37,348 - INFO - Image reading Completed
2023-06-29 12:26:37,365 - INFO - Image saved
2023-06-29 12:30:17,580 - INFO - saveImage : starts
2023-06-29 12:30:17,580 - INFO - Image Present in the request
2023-06-29 12:30:17,580 - INFO - Image is reading...
2023-06-29 12:30:17,580 - INFO - Image reading Completed
2023-06-29 12:30:17,720 - INFO - Image saved
2023-06-29 12:31:39,368 - INFO - saveImage : starts
2023-06-29 12:31:39,368 - INFO - Image Present in the request
2023-06-29 12:31:39,368 - INFO - Image is reading...
2023-06-29 12:31:39,368 - INFO - Image reading Completed
2023-06-29 12:31:39,384 - INFO - Image saved
2023-06-29 12:32:12,218 - INFO - saveImage : starts
2023-06-29 12:32:12,218 - INFO - Image Present in the request
2023-06-29 12:32:12,218 - INFO - Image is reading...
2023-06-29 12:32:12,218 - INFO - Image reading Completed
2023-06-29 12:32:12,241 - INFO - Image saved
2023-06-29 12:34:07,260 - INFO - saveImage : starts
2023-06-29 12:34:07,260 - INFO - Image Present in the request
2023-06-29 12:34:07,260 - INFO - Image is reading...
2023-06-29 12:34:07,260 - INFO - Image reading Completed
2023-06-29 12:34:07,276 - INFO - Image saved
2023-06-29 16:12:30,830 - INFO - saveImage : starts
2023-06-29 16:12:30,830 - INFO - Image Present in the request
2023-06-29 16:12:30,830 - INFO - Image is reading...
2023-06-29 16:12:30,830 - INFO - Image reading Completed
2023-06-29 16:12:30,897 - INFO - Image saved
2023-06-29 16:12:58,502 - INFO - saveImage : starts
2023-06-29 16:12:58,502 - INFO - Image Present in the request
2023-06-29 16:12:58,502 - INFO - Image is reading...
2023-06-29 16:12:58,502 - INFO - Image reading Completed
2023-06-29 16:12:58,517 - INFO - Image saved
2023-06-29 16:20:55,401 - INFO - saveImage : starts
2023-06-29 16:20:55,401 - INFO - Image Present in the request
2023-06-29 16:20:55,401 - INFO - Image is reading...
2023-06-29 16:20:55,401 - INFO - Image reading Completed
2023-06-29 16:20:55,417 - INFO - Image saved
2023-06-29 16:22:22,069 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:22:24,362 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:22:34,688 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:22:36,584 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:22:47,890 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:22:49,699 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:22:52,380 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:22:56,073 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:02,126 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:04,997 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:06,818 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:12,850 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:14,690 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:16,472 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:18,282 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:24,267 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:26,912 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:33,760 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:35,392 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:37,227 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:23:51,731 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 16:24:07,502 - INFO - saveImage : starts
2023-06-29 16:24:07,502 - INFO - Image Present in the request
2023-06-29 16:24:07,502 - INFO - Image is reading...
2023-06-29 16:24:07,502 - INFO - Image reading Completed
2023-06-29 16:24:07,519 - INFO - Image saved
2023-06-29 16:24:07,557 - INFO - save product is executed
2023-06-29 16:24:07,557 - INFO - ProductSerializer(data={'type': '[object Object]', 'name': 'fsd', 'price': 4, 'discount': 5, 'quantity': 3, 'image_data': 'C:\\fakepath\\th.jpg', 'description': 'rfedsa', 'image': {'id': 23, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-29 16:24:07,560 - INFO - save product data ia not valid change
2023-06-29 16:29:19,989 - INFO - saveImage : starts
2023-06-29 16:29:19,989 - INFO - Image Present in the request
2023-06-29 16:29:19,989 - INFO - Image is reading...
2023-06-29 16:29:19,989 - INFO - Image reading Completed
2023-06-29 16:29:20,004 - INFO - Image saved
2023-06-29 16:29:20,017 - INFO - save product is executed
2023-06-29 16:29:20,017 - INFO - ProductSerializer(data={'typeName': 'Seeds', 'name': 'efd', 'price': 3, 'discount': 4, 'quantity': 1, 'image_data': 'C:\\fakepath\\th.jpg', 'description': 'fdsa', 'type': {'id': 2, 'name': 'Seeds'}, 'image': {'id': 24, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-29 16:48:22,316 - INFO - saveImage : starts
2023-06-29 16:48:22,316 - INFO - Image Present in the request
2023-06-29 16:48:22,316 - INFO - Image is reading...
2023-06-29 16:48:22,316 - INFO - Image reading Completed
2023-06-29 16:48:22,332 - INFO - Image saved
2023-06-29 16:48:22,346 - INFO - save product is executed
2023-06-29 16:48:22,346 - INFO - ProductSerializer(data={'typeName': 'Plant', 'name': 'gsfd', 'price': 4, 'discount': 3, 'quantity': 2, 'image_data': 'C:\\fakepath\\th.jpg', 'description': 'ytgf', 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 26, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-29 17:05:33,846 - INFO - saveImage : starts
2023-06-29 17:05:33,846 - INFO - Image Present in the request
2023-06-29 17:05:33,846 - INFO - Image is reading...
2023-06-29 17:05:33,846 - INFO - Image reading Completed
2023-06-29 17:05:33,878 - INFO - Image saved
2023-06-29 17:11:46,041 - INFO - GET method
2023-06-29 17:11:46,041 - INFO - getting all images
2023-06-29 17:14:36,993 - WARNING - Not Found: /products/images/1/
2023-06-29 17:14:41,949 - INFO - getting image by
2023-06-29 17:20:23,422 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 17:20:25,668 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 17:20:30,670 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 17:21:47,428 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 17:21:50,333 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 17:21:54,027 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-29 17:22:18,433 - INFO - saveImage : starts
2023-06-29 17:22:18,433 - INFO - Image Present in the request
2023-06-29 17:22:18,433 - INFO - Image is reading...
2023-06-29 17:22:18,433 - INFO - Image reading Completed
2023-06-29 17:22:18,465 - INFO - Image saved
2023-06-29 17:23:20,869 - INFO - saveImage : starts
2023-06-29 17:23:20,869 - INFO - Image Present in the request
2023-06-29 17:23:20,869 - INFO - Image is reading...
2023-06-29 17:23:20,869 - INFO - Image reading Completed
2023-06-29 17:23:20,869 - INFO - Image saved
2023-06-29 17:23:20,888 - INFO - save product is executed
2023-06-29 17:23:20,889 - INFO - ProductSerializer(data={'typeName': 'Seeds', 'name': 'df', 'price': 3, 'discount': 4, 'quantity': 5, 'image_data': 'C:\\fakepath\\th.jpg', 'description': 'efs', 'type': {'id': 2, 'name': 'Seeds'}, 'image': {'id': 30, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-29 17:41:08,361 - INFO - GET method
2023-06-29 17:41:08,364 - INFO - getting all images
2023-06-29 17:41:09,478 - INFO - GET method
2023-06-29 17:41:09,478 - INFO - getting all images
2023-06-29 17:41:30,983 - INFO - GET method
2023-06-29 17:41:30,983 - INFO - getting all images
2023-06-29 17:41:57,896 - INFO - GET method
2023-06-29 17:41:57,896 - INFO - getting all images
2023-06-29 17:42:18,727 - INFO - GET method
2023-06-29 17:42:18,727 - INFO - getting all images
2023-06-29 17:42:20,339 - INFO - GET method
2023-06-29 17:42:20,341 - INFO - getting all images
2023-06-29 17:42:31,279 - INFO - GET method
2023-06-29 17:42:31,279 - INFO - getting all images
2023-06-29 17:42:46,709 - INFO - GET method
2023-06-29 17:42:46,712 - INFO - getting all images
2023-06-29 17:42:48,945 - INFO - GET method
2023-06-29 17:42:48,945 - INFO - getting all images
2023-06-29 17:42:53,561 - INFO - GET method
2023-06-29 17:42:53,565 - INFO - getting all images
2023-06-29 17:43:12,005 - INFO - GET method
2023-06-29 17:43:12,006 - INFO - getting all images
2023-06-29 17:43:52,819 - INFO - GET method
2023-06-29 17:43:52,819 - INFO - getting all images
2023-06-29 17:43:57,078 - INFO - GET method
2023-06-29 17:43:57,080 - INFO - getting all images
2023-06-29 17:44:03,197 - INFO - GET method
2023-06-29 17:44:03,199 - INFO - getting all images
2023-06-29 17:44:10,846 - INFO - GET method
2023-06-29 17:44:10,849 - INFO - getting all images
2023-06-29 17:44:31,891 - INFO - GET method
2023-06-29 17:44:31,891 - INFO - getting all images
2023-06-29 17:45:17,473 - INFO - GET method
2023-06-29 17:45:17,475 - INFO - getting all images
2023-06-29 17:45:22,457 - INFO - GET method
2023-06-29 17:45:22,457 - INFO - getting all images
2023-06-29 17:46:24,856 - INFO - GET method
2023-06-29 17:46:24,856 - INFO - getting all images
2023-06-29 17:47:09,164 - INFO - GET method
2023-06-29 17:47:09,164 - INFO - getting all images
2023-06-29 17:47:11,262 - INFO - GET method
2023-06-29 17:47:11,262 - INFO - getting all images
2023-06-29 17:47:15,653 - INFO - GET method
2023-06-29 17:47:15,654 - INFO - getting all images
2023-06-29 17:47:23,812 - INFO - GET method
2023-06-29 17:47:23,813 - INFO - getting all images
2023-06-29 17:47:35,682 - INFO - GET method
2023-06-29 17:47:35,682 - INFO - getting all images
2023-06-29 17:47:41,036 - INFO - GET method
2023-06-29 17:47:41,036 - INFO - getting all images
2023-06-29 17:47:44,140 - INFO - GET method
2023-06-29 17:47:44,140 - INFO - getting all images
2023-06-29 17:47:52,279 - INFO - GET method
2023-06-29 17:47:52,279 - INFO - getting all images
2023-06-29 17:47:53,083 - INFO - GET method
2023-06-29 17:47:53,085 - INFO - getting all images
2023-06-29 17:48:15,507 - INFO - GET method
2023-06-29 17:48:15,510 - INFO - getting all images
2023-06-29 17:48:22,427 - INFO - GET method
2023-06-29 17:48:22,431 - INFO - getting all images
2023-06-29 17:48:25,117 - INFO - GET method
2023-06-29 17:48:25,118 - INFO - getting all images
2023-06-29 17:48:35,446 - INFO - GET method
2023-06-29 17:48:35,449 - INFO - getting all images
2023-06-29 17:48:43,544 - INFO - GET method
2023-06-29 17:48:43,547 - INFO - getting all images
2023-06-29 17:48:47,804 - INFO - GET method
2023-06-29 17:48:47,805 - INFO - getting all images
2023-06-29 17:48:51,123 - INFO - GET method
2023-06-29 17:48:51,125 - INFO - getting all images
2023-06-29 17:48:53,293 - INFO - GET method
2023-06-29 17:48:53,297 - INFO - getting all images
2023-06-29 17:48:54,404 - INFO - GET method
2023-06-29 17:48:54,404 - INFO - getting all images
2023-06-29 17:49:02,860 - INFO - GET method
2023-06-29 17:49:02,860 - INFO - getting all images
2023-06-29 17:49:10,511 - INFO - GET method
2023-06-29 17:49:10,512 - INFO - getting all images
2023-06-29 17:49:50,017 - INFO - GET method
2023-06-29 17:49:50,022 - INFO - getting all images
2023-06-29 17:49:56,129 - INFO - GET method
2023-06-29 17:49:56,129 - INFO - getting all images
2023-06-29 17:49:57,092 - INFO - GET method
2023-06-29 17:49:57,096 - INFO - getting all images
2023-06-29 17:50:06,071 - INFO - GET method
2023-06-29 17:50:06,072 - INFO - getting all images
2023-06-29 17:51:35,954 - INFO - GET method
2023-06-29 17:51:35,955 - INFO - getting all images
2023-06-29 17:51:37,728 - INFO - GET method
2023-06-29 17:51:37,728 - INFO - getting all images
2023-06-29 17:51:51,210 - INFO - GET method
2023-06-29 17:51:51,210 - INFO - getting all images
2023-06-29 17:52:47,917 - INFO - GET method
2023-06-29 17:52:47,918 - INFO - getting all images
2023-06-29 17:52:51,356 - INFO - GET method
2023-06-29 17:52:51,358 - INFO - getting all images
2023-06-29 17:53:22,511 - INFO - GET method
2023-06-29 17:53:22,511 - INFO - getting all images
2023-06-29 17:53:34,819 - INFO - GET method
2023-06-29 17:53:34,820 - INFO - getting all images
2023-06-29 17:53:37,078 - INFO - GET method
2023-06-29 17:53:37,080 - INFO - getting all images
2023-06-29 17:53:40,663 - INFO - GET method
2023-06-29 17:53:40,664 - INFO - getting all images
2023-06-29 17:53:42,731 - INFO - GET method
2023-06-29 17:53:42,731 - INFO - getting all images
2023-06-29 17:54:03,597 - INFO - GET method
2023-06-29 17:54:03,597 - INFO - getting all images
2023-06-29 17:54:39,909 - INFO - GET method
2023-06-29 17:54:39,909 - INFO - getting all images
2023-06-29 17:55:47,578 - INFO - GET method
2023-06-29 17:55:47,578 - INFO - getting all images
2023-06-29 17:55:53,138 - INFO - GET method
2023-06-29 17:55:53,138 - INFO - getting all images
2023-06-29 17:56:01,428 - INFO - GET method
2023-06-29 17:56:01,429 - INFO - getting all images
2023-06-29 17:56:09,681 - INFO - GET method
2023-06-29 17:56:09,681 - INFO - getting all images
2023-06-29 17:56:18,134 - INFO - GET method
2023-06-29 17:56:18,134 - INFO - getting all images
2023-06-29 17:57:01,029 - INFO - GET method
2023-06-29 17:57:01,029 - INFO - getting all images
2023-06-29 17:57:05,696 - INFO - GET method
2023-06-29 17:57:05,700 - INFO - getting all images
2023-06-29 17:57:33,005 - INFO - GET method
2023-06-29 17:57:33,005 - INFO - getting all images
2023-06-29 17:59:13,266 - INFO - GET method
2023-06-29 17:59:13,267 - INFO - getting all images
2023-06-29 17:59:20,881 - INFO - GET method
2023-06-29 17:59:20,881 - INFO - getting all images
2023-06-29 17:59:23,222 - INFO - GET method
2023-06-29 17:59:23,222 - INFO - getting all images
2023-06-29 17:59:25,501 - INFO - GET method
2023-06-29 17:59:25,505 - INFO - getting all images
2023-06-29 17:59:29,875 - INFO - GET method
2023-06-29 17:59:29,875 - INFO - getting all images
2023-06-29 18:02:38,757 - INFO - GET method
2023-06-29 18:02:38,758 - INFO - getting all images
2023-06-29 18:02:48,854 - INFO - GET method
2023-06-29 18:02:48,857 - INFO - getting all images
2023-06-29 18:04:04,493 - INFO - getting image by
2023-06-29 18:04:35,697 - INFO - getting image by
2023-06-29 18:04:41,051 - INFO - getting image by
2023-06-29 18:05:07,390 - INFO - saveImage : starts
2023-06-29 18:05:07,462 - INFO - Image Present in the request
2023-06-29 18:05:07,462 - INFO - Image is reading...
2023-06-29 18:05:07,462 - INFO - Image reading Completed
2023-06-29 18:05:07,881 - INFO - Image saved
2023-06-29 18:05:07,894 - INFO - save product is executed
2023-06-29 18:05:07,894 - INFO - ProductSerializer(data={'typeName': 'Fertilizers', 'name': 'trf', 'price': 4, 'discount': 3, 'quantity': 4, 'image_data': 'C:\\fakepath\\PHOTO.jpeg', 'description': 't4erwe', 'type': {'id': 3, 'name': 'Fertilizers'}, 'image': {'id': 32, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-29 18:05:24,515 - INFO - GET method
2023-06-29 18:05:24,515 - INFO - getting all images
2023-06-29 18:05:48,089 - INFO - getting image by
2023-06-29 18:06:20,296 - INFO - GET method
2023-06-29 18:06:20,296 - INFO - getting all images
2023-06-29 18:06:43,407 - INFO - saveImage : starts
2023-06-29 18:06:43,407 - INFO - Image Present in the request
2023-06-29 18:06:43,407 - INFO - Image is reading...
2023-06-29 18:06:43,407 - INFO - Image reading Completed
2023-06-29 18:06:43,422 - INFO - Image saved
2023-06-29 18:07:03,570 - INFO - getting image by
2023-06-29 18:07:45,023 - INFO - GET method
2023-06-29 18:07:45,023 - INFO - getting all images
2023-06-29 18:07:49,667 - INFO - GET method
2023-06-29 18:07:49,667 - INFO - getting all images
2023-06-29 18:07:56,867 - INFO - GET method
2023-06-29 18:07:56,868 - INFO - getting all images
2023-06-29 18:08:04,802 - INFO - GET method
2023-06-29 18:08:04,803 - INFO - getting all images
2023-06-29 18:08:12,930 - INFO - GET method
2023-06-29 18:08:12,930 - INFO - getting all images
2023-06-29 18:08:17,043 - INFO - GET method
2023-06-29 18:08:17,044 - INFO - getting all images
2023-06-29 18:08:20,581 - INFO - GET method
2023-06-29 18:08:20,583 - INFO - getting all images
2023-06-29 18:09:01,614 - INFO - GET method
2023-06-29 18:09:01,616 - INFO - getting all images
2023-06-29 18:09:22,033 - INFO - saveImage : starts
2023-06-29 18:09:22,033 - INFO - Image Present in the request
2023-06-29 18:09:22,033 - INFO - Image is reading...
2023-06-29 18:09:22,033 - INFO - Image reading Completed
2023-06-29 18:09:22,033 - INFO - Image saved
2023-06-29 18:09:22,052 - INFO - save product is executed
2023-06-29 18:09:22,053 - INFO - ProductSerializer(data={'typeName': 'Fertilizers', 'name': 'eqw', 'price': 3, 'discount': 4, 'quantity': 12, 'image_data': 'C:\\fakepath\\th.jpg', 'description': 'rtygr', 'type': {'id': 3, 'name': 'Fertilizers'}, 'image': {'id': 35, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-29 18:09:41,873 - INFO - getting image by
2023-06-30 09:08:32,855 - INFO - GET method
2023-06-30 09:08:32,902 - INFO - getting all images
2023-06-30 09:08:54,702 - INFO - save product is executed
2023-06-30 09:08:54,702 - INFO - ProductSerializer(data={'typeName': 'Plant', 'name': 'gf', 'price': 4, 'discount': 5, 'quantity': 6, 'image_data': 'C:\\fakepath\\th.jpg', 'description': 'tgf', 'type': {'id': 1, 'name': 'Plant'}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 09:08:54,718 - INFO - saveImage : starts
2023-06-30 09:08:54,735 - INFO - Image Present in the request
2023-06-30 09:08:54,735 - INFO - Image is reading...
2023-06-30 09:08:54,735 - INFO - Image reading Completed
2023-06-30 09:08:54,765 - INFO - save product data ia not valid change
2023-06-30 09:08:54,845 - INFO - Image saved
2023-06-30 09:09:20,375 - INFO - getting image by
2023-06-30 09:09:32,511 - INFO - GET method
2023-06-30 09:09:32,513 - INFO - getting all images
2023-06-30 09:09:45,793 - INFO - GET method
2023-06-30 09:09:45,796 - INFO - getting all images
2023-06-30 09:21:42,497 - INFO - GET method
2023-06-30 09:21:42,513 - INFO - getting all images
2023-06-30 09:23:40,660 - INFO - GET method
2023-06-30 09:23:40,668 - INFO - getting all images
2023-06-30 09:24:32,672 - INFO - GET method
2023-06-30 09:24:32,672 - INFO - getting all images
2023-06-30 09:24:39,056 - INFO - GET method
2023-06-30 09:24:39,056 - INFO - getting all images
2023-06-30 09:25:17,210 - INFO - saveImage : starts
2023-06-30 09:25:17,224 - INFO - save product is executed
2023-06-30 09:25:17,224 - INFO - ProductSerializer(data={'typeName': 'Seeds', 'name': 'ds', 'price': 3, 'discount': 4, 'quantity': 6, 'image_data': 'C:\\fakepath\\th.jpg', 'description': 'rgdf', 'type': {'id': 2, 'name': 'Seeds'}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 09:25:17,224 - INFO - Image Present in the request
2023-06-30 09:25:17,224 - INFO - save product data ia not valid change
2023-06-30 09:25:17,224 - INFO - Image is reading...
2023-06-30 09:25:17,224 - INFO - Image reading Completed
2023-06-30 09:25:17,253 - INFO - Image saved
2023-06-30 09:39:41,050 - INFO - GET method
2023-06-30 09:39:41,050 - INFO - getting all images
2023-06-30 09:44:58,187 - INFO - GET method
2023-06-30 09:44:58,187 - INFO - getting all images
2023-06-30 09:45:20,611 - INFO - GET method
2023-06-30 09:45:20,611 - INFO - getting all images
2023-06-30 09:50:37,957 - INFO - GET method
2023-06-30 09:50:37,957 - INFO - getting all images
2023-06-30 09:51:44,999 - INFO - GET method
2023-06-30 09:51:44,999 - INFO - getting all images
2023-06-30 09:51:56,988 - INFO - GET method
2023-06-30 09:51:56,988 - INFO - getting all images
2023-06-30 09:52:33,862 - INFO - GET method
2023-06-30 09:52:33,862 - INFO - getting all images
2023-06-30 09:52:48,683 - INFO - GET method
2023-06-30 09:52:48,683 - INFO - getting all images
2023-06-30 09:52:53,257 - INFO - GET method
2023-06-30 09:52:53,258 - INFO - getting all images
2023-06-30 09:52:54,955 - INFO - GET method
2023-06-30 09:52:54,955 - INFO - getting all images
2023-06-30 09:52:59,659 - INFO - GET method
2023-06-30 09:52:59,659 - INFO - getting all images
2023-06-30 09:53:06,644 - INFO - GET method
2023-06-30 09:53:06,644 - INFO - getting all images
2023-06-30 09:53:09,969 - INFO - GET method
2023-06-30 09:53:09,969 - INFO - getting all images
2023-06-30 09:53:16,996 - INFO - GET method
2023-06-30 09:53:16,996 - INFO - getting all images
2023-06-30 09:54:39,367 - INFO - GET method
2023-06-30 09:54:39,367 - INFO - getting all images
2023-06-30 09:54:42,662 - INFO - GET method
2023-06-30 09:54:42,662 - INFO - getting all images
2023-06-30 09:55:25,938 - INFO - GET method
2023-06-30 09:55:25,938 - INFO - getting all images
2023-06-30 09:55:39,287 - INFO - GET method
2023-06-30 09:55:39,287 - INFO - getting all images
2023-06-30 09:57:31,857 - INFO - GET method
2023-06-30 09:57:31,873 - INFO - getting all images
2023-06-30 09:57:50,570 - INFO - GET method
2023-06-30 09:57:50,570 - INFO - getting all images
2023-06-30 09:58:06,694 - INFO - saveImage : starts
2023-06-30 09:58:06,694 - INFO - Image Present in the request
2023-06-30 09:58:06,694 - INFO - Image is reading...
2023-06-30 09:58:06,694 - INFO - Image reading Completed
2023-06-30 09:58:06,725 - INFO - Image saved
2023-06-30 09:58:06,736 - INFO - save product is executed
2023-06-30 09:58:06,744 - INFO - ProductSerializer(data={'typeName': 'Fertilizers', 'name': 'rwdas', 'price': 4, 'discount': 6, 'quantity': 7, 'image_data': 'C:\\fakepath\\th.jpg', 'description': 'yghdf', 'type': {'id': 3, 'name': 'Fertilizers'}, 'image': {'id': 39, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 09:59:03,454 - INFO - GET method
2023-06-30 09:59:03,454 - INFO - getting all images
2023-06-30 10:00:08,368 - INFO - GET method
2023-06-30 10:00:08,368 - INFO - getting all images
2023-06-30 10:00:13,138 - INFO - GET method
2023-06-30 10:00:13,145 - INFO - getting all images
2023-06-30 10:00:16,438 - INFO - GET method
2023-06-30 10:00:16,438 - INFO - getting all images
2023-06-30 10:00:20,772 - INFO - GET method
2023-06-30 10:00:20,772 - INFO - getting all images
2023-06-30 10:00:22,848 - INFO - GET method
2023-06-30 10:00:22,849 - INFO - getting all images
2023-06-30 10:00:33,814 - INFO - GET method
2023-06-30 10:00:33,824 - INFO - getting all images
2023-06-30 10:00:39,565 - INFO - GET method
2023-06-30 10:00:39,565 - INFO - getting all images
2023-06-30 10:00:41,479 - INFO - GET method
2023-06-30 10:00:41,485 - INFO - getting all images
2023-06-30 10:00:56,988 - INFO - saveImage : starts
2023-06-30 10:00:56,988 - INFO - Image Present in the request
2023-06-30 10:00:56,988 - INFO - Image is reading...
2023-06-30 10:00:56,988 - INFO - Image reading Completed
2023-06-30 10:00:57,018 - INFO - Image saved
2023-06-30 10:00:57,026 - INFO - save product is executed
2023-06-30 10:00:57,026 - INFO - ProductSerializer(data={'typeName': 'Plant', 'name': 'fg', 'price': 4, 'discount': 3, 'quantity': 6, 'image_data': 'C:\\fakepath\\th.jpg', 'description': 'gfxdcx', 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 41, 'image_data': '/9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAIBAQIBAQICAgICAgICAwUDAwMDAwYEBAMFBwYHBwcGBwcICQsJCAgKCAcHCg0KCgsMDAwMBwkODw0MDgsMDAz/2wBDAQICAgMDAwYDAwYMCAcIDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAz/wAARCABoAMoDASIAAhEBAxEB/8QAHwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIhMUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVWV1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXGx8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQFBgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAVYnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOEhYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq8vP09fb3+Pn6/9oADAMBAAIRAxEAPwDoP2ff2K/F3wv8dW/izT/FHjBZtJm3J/bt3FPYz5BUgw4HnKMgkEEDg9RXWfHfwL8XPizB/Y1xoPwd8SWrTlVW706xs7ePOcSNK0Lk8dxyCR9R21xrklhNIzvtKNt3GRWUEngegz0xTr3xDqS2jSbFaNTtPlncQe+eK+FwuW4bDw9nSUoR3ajJpP5J6fKx59bnqrnrtnwf8cv+CV3xi0LRbjXvDfw5+DNrd6bPDPYX3hjxItvqtvepIGjuBkKZlTkeXtVDnJztFGhftu/tf+FNF1nwXq+i/Efw54ieE2s97baI8qtGwxIwlSKRCu3glGPXqDX20fG8+0Dy29PmU1reGPH11Ay+VcXEG0gjZKy4/KvQp1qUKbpUnJLve7XfVnPy05NWlsflPrXwl1X4t6tcW3jHWZ9X8VBRNNrcuY7i538hJFcDeUxtOcHiq/h39jNfCl79tvry41S3VT/o0cflRt7t8xY47bSPrX3B+3De6r8afEnhqGHwZ4qGs6T5sQ1OOP7VFdQOQ2wmJW24fLAs2RubjnjzvRvhL4q8OpdNfeH9bk+yo00gktGKQIo3M7P93aoBJJOABX5rnVfNctxkqOGlL2U9U0r77pPW2t9EefisDCpV5+Xmb8tPuPNdF1628G+FVsZtJksdMtYvJhNrGzxovbPUg9+eevWv0e/4I2/Fi78R+G77WmsbiTQdLiXQrC8kYtL+7IeS3t7cY3P0Z5pWVEGBknIHw98S9etfghHoh8bQ2egx+JbJdTtEvLuGRdRs5CyLInkmQBSVPXB45Fem/sKf8FHZvADQ/D34f64+oI0kt2ulaPaTXcUCuxZ5GUxFIgWJJckAkgZyQK7eE5YnCY72mIhOzvf3Zbvq7pfeKhRmpKSg7eSPtz9rD/grz4d/Z0ku1s7TxBrOo7yTp/hfR59Tk3jr5+oyxraRkd1hWYr61+Tv/BQT/gsP8RP2wbXUtHs7d/AvhvWrZLHU4UvHu9V1qJGLeRcXbqhEIZifs8KRxkk7gxr9OtF/4KA+PtZiVLm8+IFs8Y2iK00lETj1ZtmPxrz39oH4nfEH46aQ1he3l1Bpsm7zBqd1AZWRuqqIUYpnHOHHevu82xlSrScqdbT+VR/Bu9/wN61WbXwt+T0/U/Ce8hawDeW2GY4IU1zfizS7fxDBJNLJDFcwngseJB/jX6z65+wf4J8TfD3WtI1Sy0y/1zWLlrv+34tNji1C0kCbI1jcciJFH+rJIYlmbLHI+VvGn/BJPxtpEDy6XqnhfXHB+WPzJLOR/wDvtSufq1fL4XGKnac9Jf1dXNI3g+aJ8InQVutRt4GZYYpJFV5yCUiXPLHuSBnitHwt4n1Pw/fbFnkuLGNiFW4GG29sY6H9K+ob3/gmx8X1DeX4DmmjQ8yRahZlT+JlFcb4t/Y88e+C7Oe41Pwbq0FvbDMjwiK62c9xC7t+lexLN6M6fJUSd+7R1VMTKcbSj+B4/qHxN1Ir5VtMbSKMnYQuXx9T6e1ZcnjvWLmX95q1/Izdf3h5r1fR/wBmDxZ4ohE1h4F8XXkb8rImi3OxvoxQD9a6PSf+CfXxO1dcx/D3XIfQz+Vb/wDobiiOMwcNHFL7jilHqzxHSPHOt2co+z6pqCN1z5px/hWxN4t1zW3VrzUr+bByN0zfKc54r6J8P/8ABLH4q320/wBgaXYqe91q8Ix+Cbq9F+H3/BHTxbrGrQr4h1/R9L0/70p0wPeXLD+6u9URc/3jux6GuepjMNKV4RV+9k3+A7S6GD+yB4Nu/jL+zb4u0nxBJe6poGoXbWAj3lniKJFJujJBCsj7WHUZ4IxX1X+zv+y/4Q1v4J6H4Rt9H1vW9HscaDcXuqGyggiuSxMdtKpkVjI4bKsibWAzkHJr6L/Zs+DPg34M/CrSfB+n+CdK/szTA37+4jaa4uXY5eWVyfndjkk4H0xgV0H7XHh618M/BCz8aXnjvwv4T8J+CryKWa0gs/Kvre0kkAuVtIlTDXToCsZY7Q7AsduRXlvhaGInKq6n7ty5+VJL3rW5tdnbqjuw8nUXs6u3d9D4c8af8Ekfg34stfFGoeH/AIg6xoh8JxiW/t7Szn1CNmZtgjt/NjHntvOCYZHC4JPFeD+C/h58Gfg98V1sLbxD4g8YeJ7OQG0stQ0qeCKylBG2R08lN7Aj5Q2RnGFJ6e0N/wAFNNF1jxJqOpeHvhfcaxZQuRY3vibxBPqUScZPyKkKSuoIB3AqGz8vSvFPjT/wVO+JPiW8jXTtSi0CS13JE2nWcFo0CkYKo8aBguCQRk8VtVy+vWj9XWJqRjZpqMkr37tpyt5KSvr3sauOApvSPM+9vyv/AJHrmreBvih8Q9cvPJ8MzabbhmJ1HxJqNvo0M2MbmVbmRZ3XnqsRrnR8ERL4xXRdT+KPg7RLtm2zXFvYXupWMRwDtEyhA556hdvB+Y18m33x/wDFlxG8k19bzyXDbmkltkZ255LNjJz3JOa3vCX7Tc0e+113Sbe5s5OBJZsY5IOgyFYkN9Mj6187U4XlhIL6pCMkvPV/J2RrzUpybd/vPob4p+AtB0vVbzT3+KWreLrrTYERL+y0tLe1J7RoJJndlC9xt549ayLb4XeB5reN2+JXjxGZQxX/AIRS2bbntn7fzXO+FrjS/EOkfa9Jl+227YDMGwyNjO1h1U+x9634/DyGNfm7eteDLGOhJwcUvJxSsYz5ZP4fxf8Amfpl8QPi3ofwX8CXT+I9QjtdNO7VrfRYJgZNUlwVVlRcgbsbfNOAoyc8YPxD4R/4KUeOkma3aTSdUtVmYkz2u1lyxO1WUg7RnAJycAE81z2qfGfwb8TPE95onhhvDdvMti9zcppEa+WApAAd1BQO2flXcM4x1NY3hz4cWd7r8lnb3WmpMrcxxyefLkDkFUBAYYORnjBr9EweeVcRh415QlSv0lu1306dj6SlgqV+RvmPojW/+Ch+o+CPDEeqax4Xt57dmVWNvNJARu46tuUj3rB8P/8ABYTwff67caPH4T1uPWFtmmtvNvYjYylcEq8irvXOeMKa8Y+PXxEfxb4f0/wrYx3GoPCrWt8wthGkLKCVByxIPfGB1rzz9mj/AIJ3+Nv2h7DX/E3g2403UZPBKXTavpjyPHOsMcIcsjkbWY5ULGPmJGO4r6jK7YmfLOPN12s7fgepw7kODxWbUKVanzUnJc6Ta9y6Une+lk73X3M+jfGv/BX3xpaf2VYeHdD+Hum65rSlbe1unurya3cHhZSWjQHHPCsOV6g5rx79or9pr41/tFfDFdP1fxprF5MsRfVfDunPHp9hdMxz5SxRKgfZ9353cMRng8nsv2RJtDuPDevXeqeFNL8Rah9iis1M8MTyyxQ+Y6EFlJVkDgArhsKnPyiuNm0mPQPiDb31j50NpeSyE+fMFNuXByC/A47E4wcema+1y/JoUcP7ebvFvf8AlTe/+Z/UfCv0c8qVDEwzZyqc7tCSdlTg37srWd6iau27xs+W27fG+NvhR+0F+xffeG9A1jwrqGgjXlW80u3kiS5tZTMA2DIwKK2BlgSAMHuDX1P8Hv2l779mfw8dJ1rw/eeLfHXiCaFZ207W4V0OO2Ee5VjUQGYTKzuWZpApCglccDybxv8AFfxx+0r421bxp4g1DVta1FI4raS6dXlSwgChI1J5WMYGecZYlupJqrbwtpCwWdvJi5vW2rISMBQDn6dsH6134LJsLWhKtU1T0XbXT5t9NND1OE/owZHRhUrZnN1ZtWS+zC6SaVrNtu9nJKytofbtx+1LofhrwfpeueJItU8J2eqStbhrl1nigmEUkvls0fLZEZVWVSC7AHaAzDkLD/gop4B8STfZ7O38R311vSNo/KtIVj3ttUvK9yEUFiBknH1ANeJfFj4a6pqf7PXgzR2U6teat4nWdo5JfJghto4HUeY8m0IBuxubAG89a4zTfh3ouqePls4rix0rwPoJkubi5W2M0t/gku8a4yzPkRRmQfKuGOPmr47G8P8ANmksJRh+6gouUrvrq12v9yS36H4xjvAWlV4qr5bgHOODoRUqlR6tPlvZNrl5m9bW0WttVf1L4of8FXPDng3xBfadY+AdW1K4sZ3tzO2uwLbuynBKNHE4ZSRwwOCPzqf9mr9sL4mftj+Lr/T/AAb4P8E+EdP0Ty7jVtc1a6udRFrFISI44rZWjM87FHIXIUBcsQMZ+PrLwFpvi1727k1y10u0MjtE1zDJNLINxxwgwWI64PX0rsP2d/gn8atS1nUbn4S2fjbyy6RtqmmX66XCm1w6GRzIpByoIAPUZycV+dYbEUMRiJU409r7Jt/i9fvP5/rYNxqtwXuXdtU3a+my/GyP0qXwdfTpCtxrOq399bskxnSMWTK6ngokIURrkdMn0JNXP+EC0z7OrRadYx3G8SmVbCJZnYZyTKAHOc5IJwTgnOBXzf8AAv8AZn/aO8LeG7ex8SaT4L1qG2vxqFsuv+PNURrZjEInBjsflk3BIjiRnVfLBVVLOW+gNF8M+LrQqdW0PwLH/eh03Ur+4OPYzRc498V1SyGo3zqas+6t+r/MqNNyXvXXyNq90K7kjWO4nmUdVVvlH5e1MXw1/Zo8y4aGOMLu82VljQeuWYgfrV6y0XS4bC4urvw/bwyQqxbcqMrKoJJztzxj0/OvAvFHxAuPht/wUdvvA/iKHS7XwXrUFhE1re2sM39mgaeJdyR7jH5pmY71DAnJ3cgY2wvC9erGU4zTtr/wD6nIeDa2bqs8O9aVOU3puo2ulrvZ6d9tN17h4e1Tw/rN4tvZ+IPC93cZ4ittZtZpP++VkJ/Suw0eHS7fTZ76TULRbW18pHYPkF5WcRouB8zN5cmAP7jE4xXgnx+/aI8L/Aj4j+KPh/oml6fa3s3h2yk0u8j0uKylnvZ5VaWKQo37tfs7DawOcq2T8wx4541/aY+JXw3uZl1bWtH8QXFxZRIbSewFzbDy7fYJY1PMbwKyhZgwbc7HncwP1OQ8ITrUva1ZaeXoff8ADvglmGY4CGZ6xpzs4rS7i1FqS8ves7pWaPuTxHrF5f8Ahy40/wAP/wBoaJqF0RHHqhgSR7VM/O0cbBlEhHCs2duc7ScY+bf2+/DWoa/oPhnSdS1TVdb+zwmW4lvCGdgjMIw5wOAXc5x/HVj9n3/goRq2t/D2Eal4d1TxBr+lzCS8WPGn2b6ZGiuZzIFx9okwYUhQZL/vDsQGq/7Vf7Vnhz40/DyTxvBY6h4btdRuWsdOjjMcrpFGiGWQ42gTeWRnCqodjg7hmuKrwXmVSs3Kq7r3Uvhja+rsm72Wrbu7Hjx8I+JK9b+z1RceaooKTsova8r78qj7z8k9G0fO3i/4ZW3hr4byf2fobQq22FX+z7IQ5BZgD0ySdxH418zeNf2c9V1TSpL9dsMKlnbYq+WnGfr+NfYnwq+Idj8Q/FMml3mm/Ym1aaR7OGNt6WVsltEYkAIAdnZJix7FenNdzrfwwW9gYMsMK2yklcBFGBks3YKByc8Dr2r57NcNVynGvDt3Wln3V7LTz7HwvHnAuN4XzmWWYj3m0nB6e9FtxTSu7XcWl/wT8mNTjms7uS1uEaKa3JjdGGMH6VHFKFU19r/tK/sRx/FfwRd+KvCtjfLrEdwkNrLJD9ng1sbWaQL5mGLL8pWRgoO7B6gj4g1jT77QNUuLG+trmzvbNzHcW88ZjlhcdVZTyp9jXuywc78k1yzsm4vdX2v6nj5hluMy2ssNjqbp1LJ8r3Se110fk9TY8OeLb7wjqa3mm3DW8y8Husg9GHQivVbT9rtUtY1k8PztIqAMUvgqk45wChIH414QNQZV+6T9akXUflHyivLxuSUcRJOvC7X3/gcvMftD4S/4Jp/BDwprDT6TD8QIJjE8MkbeICbcoeoKlMMOO/eum8NfsV/Dnwbr93qWj33i7SLy6h8pLgz20y24x/CnlKP8a9tXTI0uJGWztYWlyFKJllGe5OP0q5pXw3udXkkuIreKRbUZkDSbWT3CjqPrxXyNOpj6sPZO0r+W/wCJ78a0r+4/kfP/AI0/ZL8K+HfhRHb2UE3i6WF5SNUv7eG11CDfIXCvLCimSMbiFLbiucEkYrhfhx+z14N+EPhHUtS8N+IPGkPiC4lF34n0e8vIm+12ahfMnsRFHGJGhKxzbCS7CN144avsW38J/bi0cKxy/KY22YYbSPmBz2NeS/Gn9nWWz0x7y1hMukqylfm3tYMeMMRyFOeG6DgHnBP6nwziliYxwmMXs6sbcs0rJr+WS66aeh+4+GmZZXmFWll+ZfucTT/h1VpzxejhNbO6uleza+FqS1+LPFPw2k/Z2+Pd5pKXFnc6XqKx6npWo225rW+s7lQ8U0ZOCUOCvsQR1FQ/FH4dNb+JpLBB+41BwIfMG7AkYAfkTXp3x7+Hl03wu0qO92y/8IrczC1uW+VoLOc75YJOOUWb96pz8u+UchgRg/Eq6k0D4FaR4ska1j1nQ72C1WGWRd85SQEEc5ZSijJGRhgehzX6fgKMsNQnSrfDr801/SP7myPE/VcBCdaSlJKVN/3mleEvnpfs7+V/ub9k/wCHWifBr4C2eg6bYx/ZVlMNz5iCR7tigWQv2YuSQc/ToAB+eP7Ufw5t/h9+1FYWum2/2XR9Wu7eXTos7ljR5AroP919wx2yBX3V8IfilpOufs6r4pg1CG20VLUapPdv921RFLSl/dSpBHXcAOtflF8Z/wBpvUvij+0BP4qtpJLNobtW0qJ8O1rGjlohg5BfPzt6szGvNzCcKeGUE7axsvJW/Q/K+FcfUy/MMTXqyf7x2a7vdfd08rn1D+1BrskN5pPhWGaPdpcRe9iifL+bJjbGV7YUA4PPzY9aSXQbX4QfD+zXWNAkm/ti0fULma4UxW1zE2+JIVkbAKKokGVHzO7ckKlcb+xRqfgnTfiFH4k+LWoajfWP2qP7F4d05/N1zxXqEj4ROT+4hLsC80hUnogZuR9g6z8D/Cfi7443XiLWrKx8M/8ACRXELWGk6x4jn1No1hQRosH2xzIwVcYWJFjXoEFZ4ytiMywkqWG91N+85dF2Xqjn8S86xWLytcP5P7kZJyr1pe7FX+xFbzb6tJxSVm+bb4p+Ff8AwT88ZfGm4FzoItLPQrh8pf6ozRxW8Z6ABVLSEdMIvPHIzW98Xvgd4g/YG+INhY+Afid4g1Xx80Xm65HptktlZ6amAY4GBkczSsSWaNgQi7d3zNgfoZ8S7vxF4a8DrpnwrXTYtQwyTX12ZPMjTuLY42q5/vtjtt2n5h8y/Bz9kfTNRvrjxN4pjm17WoJwsml8ra6LcA7miuRnNxcAlS4fMSsSFDgCRvzHMsjwWEg4YDmc3rz9I2/lS/Hc/iXPqeTYRfVsDJ1Z7Od9P+3Unb5ts8p8Pf8ABUL4veDrLf4gPhLxAIwP+PrSFgkHX70kDRjPtjtRJ/wXP1TRbll1L4c+D7iP7peHV7i3I9xu3ivqvUvCOoBWuPsKZ4Ct5Ybyx2GOnvirsj/EDwVoYm03QdDvLO8COJLjSba+XK5wVDKyjuDu9cV8/g6+NpSft6kpLyhf8z4upOvK6pJ6eVzwj4Nf8FSPFn7RDXUfhb4D3Gv2ShoLy7TxJ9n0+13LgrJcyQCNWw33QS/IO01518fPHeseFvjTeQ+IreOYeLIINYvoNv2mO2vPLEcxt5dqb1OwMSAuc7SBtNfSmj/H2z8M6VDo994TXSYY55pnGlWkNtbxu7FnItUVEUsxJOwjPpXO/HP4b6b+0r4MR/DN5p2peJvD7f2hY2S5ivnQczW5hfa5V03YIBXeBg8mvpuHuJIUsZGMpc0ZaO6s18rL0P1rwX40hkufRWOtKhWXJN6e621Zvsr2v23PiP8AaH8Y33jH4mQa9eNdXrm2t4oXnmMjr5Eaxqofr8gVQAeQMCsDWtQf4keMmk8y6UkRWtu8shbynyMu3qB8zY9h1r7Wh/Zq8DfFX4B6P/aWmLo+vXkDra6naM0WXSR1Tev3CwUbWDDJ4ycivmDxD8E9V+DvjhtP1Py5JRIZY54SGikz0YYJw2CeD0561+nexqquvZr91UaenTy/E/vTJ/q2Pf1TCx5IX0jZWstNGt7X+R3174ruPh/pd3Hp9sf7BtbaazuBE3zMdhZZMsCVdsfeOd25j1PGD8C9XmMEeveJbW2utG8PXXnafYmEMLq5mlBRdv3WXzFJOeco2d2MGLxo99bRXF5N5Cwz25nLopGNobj/AHht6+9bvwq1CbxPqXh+z0uxto9N06ATIk3WJQpHnORkM5aRj0xk/U19BiKV8UktuVtrp0W3W6/U+jx2VrRxS5bNv7uV/NpuPkhvgC2i0j9rGxlvL2CDTY5729kuZd2yBGtZ5DkAZO13K9Mk4x1FeseIfjkvxY8Yyaf4b02az8M2UY+0POmRd4JbzLkggqjFTtiU8DqSeR4JpWg6h8SfjbLp+lrHcXLDDSzHZDFvbBlcj7qgenc4HNfYfwY+FVt8GPBcljptus1w86y3+salZiaS4k4A+zQH5QGJCoGycEZOa8KllOClj6mNnHnnFuKb2ilu153b16WPzzi7hfI6ObRz3FQ9rio01Tgm1y01GUm52/mvJpPW1tEM8O/CrVPENmur6xJc3k+oxI8M0yCKCK35ZVjjwNoYuzYAzgpnJGTxvxs/YP8AAfx/05m8QeG7i71C1QIuqWbNaXdqnQL5o+8uc4Vww64A5r6ruDZ+C/BR1DxFMUaEBZ52Tc0szfct4lH35SOAi+7fKgLCK1aPXrWMLYyWKeWGFqfmaM7RvklYfLuJ4GeFUAdSxP5Fm+HrTzCeLjPWTdmtNFpp5LbzP8/uNObM84xWZuXNCc2otKydrJKP92KSSfZJtJs/MjxN/wAEStLurif+xfHevWqnmOG+0uK6CfVkaIn64rBH/BD/AFwD/komlj2/sOXj/wAjV94fGf8AbP8AhP8AAxJY9a8UafPfQnb9i07bcy59CQQin8T9K8Yb/gsv8PYmKp4X1qRVOFb7UBuHr/qq8p5vOOkajl6R5l96Vj5VZe18Vl6tI/QFr5re4cRp5YwcqYsd/XFRLrF3bXq3UN0tvPGSEKzDcM/hWZH4lguLpo0k83nhfmQL6ZzVu6e8uLOT+y1019SZMRR3rSeTnvuMa7iR7V50ajqK0Xc6tVqdLc+KF1uwU6npNrNcLwLuGGPcT7rjB/DFUz4H8O+Krk2ceoaVYz3SfPb3Ur6fJIp/uNIuw544UmvBPjB+1mvwFsZn8Ta58J7OaIEtbw3140wODhXLYRCeBycj0r5K+JP/AAXM1XTy1r4f0P4Y3UatkrK+pawsn1VY4oz9NxHvXr4HiTEQl7Gg41OXfTm+XNG2vq2fTZbnGJwqT0a6X0a+7U+sv2h/2EvjR4jNxb+F9e0KxspoTbNaXsUUtvcIcjcriJ5ELKSpU7lPUba/MT4p+CdV8Hj7LdXljK8ZKsYS5EOOOrAGor7/AILi/tAeEPErTeH/ABNY6DZLMZFsLW1K2q85AWOdpCoHt6c5rw/xn+1/rHj3xTcaxcaLot5c3kz3Ex1CS4vkMjksxVN8carknjbX3sc8nVpJYim3ppaX4Xdn+B+38O+OmIwtF4fGaxtpyxs36u7v6nomo/tdeNPCXwa1X4Y6ffLJ4b1+5j1K5hRT5p29FVjyIXYKzKBgtGpz1B4DQvFHiDR1m+yxw28l196UIomAGflV8blBzyFIz3zgVxXx5+MOsfEPx7oeq/Z9J0+azsYrcf2VxGNrMWLKWIUnJ+XOAAK67xTbeIvCscU0ln/bekzRpcJq+hOLq3jU9BMB/qZBnDK+OehIwa0weMp11GWOlyPor3S8r6X/AK0PGn4oVK+JnLm9n72jt6a97+v3nqn7K2safo/xUsdZ8QeIPEnhmfT5BNa3ejWkNxcLKeAweU4jIycOEcqcEDIBr9Iv2YPhHZeI9Ok8SeF774aaZeai7ebqfi3x7D/wkN+FO0zTNcKJfLJBC7cIdhwvevyl+F3xW8K2GqRtq+o6lb4/v6W0g/Bkcj86/ST4J+HP2Tf+Cg37KGl/Drxd4qt9M8XeF4Lu/wBD1e7uBY3ljMzl/sUZjTeYHYFmjcvkMzLtZRjozjD4aWHbp1bre3NZfmtfU+c44zmWY4RQeJlK+6hK0X6xtr87n0h4x+KHgf4U2Lw+OfjZ8I7W4s4nnaw8N6hceIL8omMuIrZQqgZALu6oCQCRkV8l6v8A8FgfAM/xTktLXw3rV14a82MHWr2+EMjFFCLJLCoYeWFAXBlYqoHUDFaFn8F/Cf7PHw7h8C+A9Ph0/wDt6SK58R6jDLLPda5NGPljeWUs5tYst5cZwpJZypZuOs+Bf7Knwj8IaNca1q3g/wAH6prOp5aO4u9PS6eJicYWJwY1wRySoJ9ecV+Xf6wUquJeDi2klrK6t+bv6rQ/E8RivZrlpp+rsfQnw61+8+K+iWc2k2t9a2d9IYoDHAJYiScA5Ug7SeAxGCBnpzXXWkPif4G+Fda1nUG0r/hFtHBk1aS9m8mKw7EvvwUJyo+UkkkAZPFeU6T8UZPCOqtqGpXtxo+mw2/kWtrpM6YhKDbFvUAAbR0AAIU49h5/8bfBEH7VPhi1k1bxZ4ijsbeZ2hsLa7AinKnCzy27hkMvzYDdccAnFXTzaikk5Pn1s72frZX0ZGDzOrTqqopOPmv8j6W0KXwb+0JocWpaXcaHqGSQ0c5jvbck/wAK3MZ8xT/slvwrz/4o/sr6HaPC154furF1kEyS2rtewxMMHeoPzrgc5XBGODXzj4H/AGFdS8DaymteFfHl7oN/F0b+z9swHGA+2UK6nP3WUj1FfRX/AAsD4veD/hBfSWf/AAhPxE8UaayPDpk63OiNqMI5kCSBpYlm29AQiMSOOx93L8wweKSjj4Rcn16/kj9By3Msqr1IrHU4zvpzJOMlfrdW+bR5b4a+KHhlYl8MR3l15l1etssdRhdZobjgbwWJzvI3feLbie5FeV/t8rJ4Y+FWra1a293PJpaW4gvMZYO8qq3m8Y2gN8ueuRznivnn/gop+2aniTx/p+qXHw/8S+B9YvBLBrGkz38MzW17buiswGyOaJiCuQ8a5IDKWyceKfFb/gqV4x+JvwZuPAOtQrfWN1cW8p1Of5dSeGJiwglZTtkXftbcw35QZJr9LoZhTw2C+rwk37rSfVaaf8A/qTJ/EDJcoy+n7HEy51Fr3lLmi3td8qvbo303uzfh/ajvdV8J6lYa3dRyW72zRWzuqo0DFgTyAODkjn2r6O/Zx8VS6X8PbdNB8Oa14r8beLLJLLQtMispoYtiR5kupp5FWJLdAWYvvxhQSyjLD4f+F/7ceqfBDxLb6p4b0PwDHNbOJANV8M2esMxB7yXSSSL35jZCM8Y4x7/+1n/wcF/FT9qP4Hx+BWtdJ8F6Lcc6suhXd0W1kAELAxmkcxW4yxMSHDE/MSABXiYfN8XSlzyk3K3Km9bK973v+jPLxXjxi6b+qw5Zxlo5uTuve5r2Sd/R2v3OIsf2stc8E6xqEllcRQyalcwS3cAwYp1hJZYm/vRknOM4OAewr9R/Bn7T/g/RNA0nVI7e88beMNbtF1Dw34WhuxbLbRGIPJqWpzt8tnbIDhS+G2KXAUMrj8FtK+JGoW9695bWdtcXe7crz/vBEeu7b0z6E5xXV+E/i54zltdUsdU1S+sdP1Yq13HcWoNvdAZEe8YBcIW3qpOA4VwN6qR0UsbiHSlQj73N0frrfvf5fofO5t4qU8ywtSOJjOpzt6Jcqa6qU9Gk+qitVpdLQ/T/AOPf/BUvw/8ABDxJdX2ubfih8UVj2adpdsH07QNAjcbv3aFd8cPPGR9onwHkMalQfjX4/f8ABRX4s/tLK8eteIbnRtJYkyaVoy/ZLJR6bVO5vq7MT61l+AdA0zxFdWMWsaBJql5dWAFjcRXcjS+XErcLLIVBiYhiQflUkDfxWH4q8TeC7e+W30260aVpoUlJY3SGPI+4TKFTcOhK5UkcMa+BzmNV17Toyku/2dPK9tPS6PwPNsZWxlVzquMXsoR0UV0SSWi7d9zibbSV1y9kW3ljkmVC7EvtYgdTk9fzNXF8B3RUfND0/wCfhP8A4qtL/hFF1W3kms44rq3i4doWEqx56AkZH0z1oT4VXborLY3DBhkEQnn9K4FiILSV0fOPLru59HeJv+CzHx68SyxtpcOi6OoJGYNPDNjJ6HAIHr61neFP2sP2uf2vtcuvCvh/xVr14zokl/HasljaWMDEgSXE54jQkEAZLOQQqsRiur+HHwZ0vxncQ2Mdvpeo6jqN0LeKSJ5RFZRvhfNkO/G7J4H+wx7Yr9CvDXwF8Ofs7eCYfB/hexFvp9id9xPJ/r9TucASXMzdXd8cdkXCqAoAryaOCoUYyqSw8bLveV2+l5X26nTiKzpx5pO/ktD4b0T/AIJB6VcaVHefED4neINd8STsrzDSYYxZQZ6xq1wrSyf72I/92vP/AI4f8E/bP4b2NvYeHbjWfEmqXjbwkGjOsdtDzzJKHYF2OMKoHAJOOAf0S1HQLVv9ZDFIzHuOnFGl+GoztAjUjkEYyoFeFVx2YyxHNe0FtFaLy6HnfXW3sj8wfA3/AASx8feN5lkfRIdJtpDzNqFykbc9/KBL/mBXfav/AMEjPEHh6K3XS7rTdVLDE5uY2shE2f4f9ZuXGOeD7V+j1hoFvFEdscCjH/PMdfrTbnRvImZXG1hxyFG39K7/AO0Mf8Tl8rafjqdUMZKLvCx+Zvjv/gkb4q03TlvNMvNK1S4Ay9jFA1vxjnZIx2sc+oUH17V4r4w/Zx8VfBrUVt9S0fWNJubrMccYRlN122rsyHz6c1+y1xp0bxN++UFfm+VRwf8APaqNmsFlcLJIgkXdhckk/wCFbUeIsTR92racfPRr7l/Xc2p4p815pHxr4F/4JAeEfFHwx0m4hfxd4f8AGDWdvcX12JftEMVyY1aRDBwu0OSMAqcDhq9D+Bv7FE3wc0bxZJ458NabqHii11cQ2d5BbRvFHYJDG0M0DLGkiNM0sjEN8w8sLk4JP0jeW9tfyedbzXFpMqgxxJIyqTnuVIx7DmptG8J6xqcVx9uuIbhZHjBleUktEqgKHOdzbcYAPAHArWjnFarRlRnKUnLqnt6fgRUrVJ03SctN0ea+H/BWr6jp9xeS215FNdFVhiddvkxjIGeuCeM9+APWtJPCmtW2iw6db6XDt2qz3Gxt2/PLEk9+nPavaLCX+yrIxMWk2g/KFAX61mXurwtIzeWp42hd1ePHKaUXzubu9zx8RSjbU8d0r4LXUU0j3995kkhGUyWz+QNdj4f8GRaEmVm4C42pFtXv1rqJWjaT7uN47hTxVWS2hU7pHU5OSNta08upw1ic8IRi9Czpr+W/yr+8bHzE4rVTUQZgxZfMGPmXrWSkVvldvlZPTIxmrNhJDltqxgeqnrXZTp8uh3UajTTPm79tT9hfwv8AFL4d+JNa0XwedW8calfR3jXLXcss20yFp/KR32KzZzgDJGQPSvgP4qf8EifinZfDnW/HWm+H7qPTdFt/tdxp15Kq6lLEuTJJBCMsyxoC7B9rbQSobBA/ZyBl2fw4PpTfH3i/R/hj8JfEnibxLcrY+HtI06Y3cjKCZC6MiQoP4pZGYIqDkk+gJH2mTZhXdqD96763b9D7DA5pXq0lg3Hnbatu36I/mjutNZDuHRuR6YptpYb5iNvOOteq+J/gZeLpzTaUGv8AyVy9sMNcFQOWRQPnx3VfmHXBGSPQ/wBkb9kn/hpb4d+KrfTYPL8W6bvutLYsf9LMSfNbOv8ABuIKqTg7yO2a+kxUnhvdqqzul956WLyPE4XFfVcTBxla9munk9mfPM1oLSSKS3Mkcka5dj0Y9a+pv2dvGFn/AGzper63eaVoK6H/AMTDGq2dzcRSybciExQo5dZlclXZf3ZO4OpArx21+D17rst9HCUT7KIpJPM+Vwj8MwHcoSMgc/rXvnjLwCLvw3DqVvbtDNp9qtsUZc+bCq9M+w+YH0yK9vA5fV5JOS0216n6hwnw3i4Rrwqe7FpJJpNc2tml/de66p7p2azvi/4I0P8AaV1XUdX+GfiXUrXxPdQB9V8J395JKt5CgLFrWQ4EyIMkx4DIMkoBlq+b2tLfTFure6hvItRt3KGNtoWPH8J749Pwr0i0+FviSDXfDc3hea/urrVL7baC3kSGa1uo2DAK5OFIVkcOccH2Iru/27PDkNrPaXWvQw6L48hhjW8iBR49eiIwLkGFFjSdWzvTAVh8ynqo+Sk506/snte1usX+dvx8z8TzyXNiqkMRFU60W7pbO3Za2fnfXc+Z7WRrZnWMbd3Bq0DMB/rJP+/hp0kWLNn28qO1VliZhnc3PPSvQiovU+e9ofoT4OvtWsdLkZd1tp8d7BcNar8pZ4ySHXg/MAzLnrtdgOTX398MP2q/B/xK0mz0/wAQ6xFp+tG3jWPUr22+w2WpHaB3d/KkyMHzCobBb5c7R8C+EdK1i+1+3g1RpTocgMhv1ixyOnHfn0z0re8T6lZ6NqsX2/zF0NWML38LMJkX+FtmCSp75968SOJhg4rC5lRfs5PdPWL79VZ9nuKt+9XtKLTfVPZ/qfobr3gtrIRzeSPJmAlikQho5VI4KsOGB9QcGsmK0a3/AIWVVGOB0618FeDv2qvEHwb8ePpvgXx9BfeGBE08iSSRtHGwHRrd90TZJwMKGxzXbaR/wVp1a21+3i1y38A6pb+YIp4JrS70O6xnBKzqZLbJ7ZQD1xWFbhuhWXPhK0d2kpNRlp5PT53JlRnClGvOLUZXt9ra19rtLXdpH2IjSQxnAA47jNV7uYMSW+dscADGfrXnHw//AGz/AAp4usmfWtHvfBbedHGZL3UYL+08pn2vcebEqgRR8E4Bdhyqtg1q2f7WXwpufNNt8SfDNqMtk3wuLPcOmQZolXHHGCeMV4+K4bzKneLpN27a/ldMmPLbmTVv6/rU65UkCL+7ZAxxx1Iqq+mK028tu5HDciudT9o34cX8bNb/ABM+Hc32f7+fENsoTI4+8wznB6elXLn4ieHZPAh8TJ4m8Mz+GY786adZ/tOL+zxdCMSm3E+7y/NEZDbN27ac4rwKuT4paTpy+5mnv9EdBbwxw2g5QMc/MvGauaPrUen3SxsfMimBjf8Ap+Of515HeftRfDG0sZry4+KXw5SC3ZUlc69BIkTNuKqdhblgrEDqdrehrLuf20fhHMIYLf4n+B7qa4BaNYL13JA4JyEIGD61FPL8TH3oQenk/wDIP3nZ/ce8Tayrsdiv84P3h0rPkuXg3Y53dyM15VfftdfDqPR/t7ePPC0lmAihreeS5lJbdwIokaTjaeSuAceozzep/t5/C/SXjWPXde1PKiQCw8NXk4wRnGXVBu7EcEHj1r0qeSZjNXjRm/8At2X+Rx1JXdtPvS/M9xjvNsbF0jHl99238qjPiCONMqyDcOCRzXzRqn/BRzwy90E0vwT8StaVj/y00+109W+hkmY9P9mud1v/AIKQasRPFo/w98NaTJH827xB4ge8lRfXybVY8t7bzXoR4UzdLmnTcI95uMF/5M0ZJwvbnXyab+5XZ9bQ60ZW3eZuUHAXb1961Z72HwxpC6lrF/pugaWxybzU7qO0gI/2WkI3H2XJ9q+AfFn7cXxLv/s//FTPpEd0SI4/Dek2+lxHjkGdvNuPyYVzPi7wz4s1XxxZ6lfXltrUd5aRXK3t/cvfX5fnzIt07OwUcDcNo+fAHHHVh8oy6gnVzDHQUYq75Ly+SdlG72WruzvwOHnXqOMbRsm7zvFaK9lZOTb2Stq+q3PuHx5+3x4B8AaLPJolvqHjrUo0JtzDA9jpbkdWM8qiWRB1PlRHI6MOtfmb+2n+298QP2jPjB/Z/iXWYJvDunyCbR9NsLdrTT7UOmN6QkkmQ8qZJCzkD72DXc+A7GPwj8Pta00Thr2S+uhZ+aDM1tC5/d8sccKdu056Zry34t/B651vTF1O6uFi1bSog1qwG5L1ASzI/OVbJyrcjqpGCCPpqGd5BhnSpYKXvOzlJu7V1om7W33stNm+36dl88ryjEYerhqrqVLJyeihG6Tskk5c2tm+bT125ESXU0zopTy5FwFPUk/1r1jwx+038R/A9tp91beIo7yabSP7HttQ1G2ju763tnQqYknYbxjDbCxbbgFcda8z0C0l1d7OaJd1reKWlLdosfMSe2M4+uBXXSeG7zxr4QjszaosOlwpZQSwrtbAdnRmHcgkrn+6R6V9ZisThVjaeErpNyV1fvdcv39D9WzrOML/AGrhsBiIxkqkW05PZuzhbspWZw9jrc+jfEvT7i3k8prcmZt33CFjchT7EqK91+Hjah4v8Lf294ftptSsN4GoaYxxPZt/EIw330HUY4I49h5d4M+FE3xAubzzrq10loQbWCWcE+Y0a7X6dtxYZ9q9quLu++D/AIK0u3h0/T/DWqWaljqyTi8TUVb+7HjryOGyM4x0xXlviL2GPnTpe9BO0l2a7HwefeI1bLc9q+yTlST5ZR21T3j5/g7eR5brzw/Dn4hR2P8Aamp6HpupCLUtPmjujA0XLqoIAyskZ3pn0OCK5/8AaY0e18ey2etvpWq3U8R+zXOorqfmfb1H3X8tkOxun8RBweOa6P4+6m/xj8T6CzafDql3ppUm5tomj+0oxBZGUcFi2TkY5Nem/tEWXhnx/ocdv4R0y+0zULKCMz2syGMt8vTGT2xzgV4GbYqNScsfh53TaTvpa/8AkfmfEmaUsdmk8TRu1KzV1ZrRXXnbXq9LHyt4L8BaLqWopZ3Ed9DHMCWlkuUDQdcHGzBHTrWjdfD/AMNwXMkaX106oxVW3J8wB69Klv8AQr2y1k2As2huLxdpO3BA+tXo/hNMEX5Yen96vNrYuELKVR9+54PNK90j7/8AjJqnh/4faDo1u3+nfZjteINjyifXHXntXh/xz8aG40qS40poWViMxdGPPTFFFfd55haeCbwsFzRqQu+bW2nTseH9aqTcXtytrTseSt8Ppkjk1yzmjt9Qt082WzziRsjscfrXB3GrzeMb+Ozj8rT7yaQ5mClsZ7n6e2PrRRXwtTLqNHHVqUVpBQtfzW3oe3RxVR0Ize7v+A34r+ELrwb4t0m3XVZdQsSEYlQVjLk88ZOTnBySavaDBqfhS5a6a9urWNhlXtic47e3PQ5B4zRRX2WX1prKq9eLtKLVmumn/AP1HIc0rx4Vx2Lk+afNFXevxrlenklp0R9OeC/Bnh7WPBvhnxFeXWm6pNIssOsabJAq3EB+Yx3AXJ3qB8rYwB8pxycedftBfEnWH8X2vhPwvef8UTpLI81mEVtOa9bJlmVMFQQGVCy8sVPrRRVYXPMXUwEqs5e9FSaeu6Ta69zHhDD4Wrk9SNShTfs1OzcFd2i5K766/gcR9i1bVNSW5+y6TaWcjbUih02NI48Lwm4gn3GTyM49K63w20eq+Eb+XTrq1j1Owk23QeMReSPoAARx39KKK82nnWNxVGhKpVkrxlezavZqzeu58vxJh8M8qwWJhRhGTUr8sUr2a1fn3J/hnreqQ+LLa41jWJ59JW4H2hbeEyIUHbbkdcevFavxb+N2j+LvEurW/hOx1C2sdPwRJcOUS4O3B+VcbQPTNFFeesTWm6kZTlpd7u+3qfKyslFpL7l3R5donxdt/EEzaXqVlaWltIxZ72zSTzY8diSWO36c12Hwm8B+E/HXjCZ5tasdK+yxOLa7aMssrDoNuRjP+cUUV5OaYWE6SnK90u/kdVGTVSy/QufEPRm1DTLeSzukuLfTdwle3z8hPfA6fj0zXM+CvE2qC8/0e8murXJBm3lsD0zz0oor5fLsLTq4N06uqv1Na9SSkmjvLObSb/WLO0015PtEpzMW3De31yRWl8Rfh/dTW3lkMZo1G5UZeB29Oooor6Lijh/B4fJaOPoxtUva66q2x5mCxlWWMlSk9Di9P8Hab4WW7SWOYTakdoQviNOQSwXoCSAT7/U17b8A/wBnAfEj4e6tqT6tDpNjYZlJbem91GR86qQMYB/EUUV5mSVp5lVhPFtyajZa9tj1sfiq0pKU5ttJJNvVJbJenQpfst/AHS/jt8ZrPw1ca19hjlmluZ70OE3DcWKJuwCXY5J9CTXK/tBfDPSfhr+0Xr3hWG9jm0zSL37NHKBw+ADkDt9B3oor6XC0adWFOpUjdubi99Ul1OCdScueTerXNfzdtT0XxH8GPAvwt8GaD488PeNrfWNSsHjmutJeVNyyK6tjZgOBwRznORz6818ef2qdD+PV2t1oXgPU9H8UTxrA94ro0bIpHIIwxGMjBHeiitKNGm68sFFWpykk0vXzvqcssVUV6vVHkdxoCWmtyPrjSWt5auCg2/fUj1+v616XYeC/tljDMskO2WNXGYpO4z6UUV9Rw/w3g8RVrUKidqbSWuuvfQ83FZlWgozi/iV2f//Z'}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 10:07:47,557 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:07:50,394 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:10:35,007 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:10:38,229 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:10:40,305 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:10:42,438 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:10:45,546 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:10:47,596 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:10:52,882 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:11:07,165 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:11:23,525 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:11:32,484 - INFO - saveImage : starts
2023-06-30 10:11:32,493 - INFO - Image Present in the request
2023-06-30 10:11:32,493 - INFO - Image is reading...
2023-06-30 10:11:32,496 - INFO - Image reading Completed
2023-06-30 10:11:32,512 - INFO - Image saved
2023-06-30 10:11:32,568 - INFO - save product is executed
2023-06-30 10:11:32,568 - INFO - ProductSerializer(data={'typeName': 'Plant', 'name': 'fg', 'price': 4, 'discount': 3, 'quantity': 6, 'image_data': 'C:\\fakepath\\th.jpg', 'description': 'gfxdcx', 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 43, 'image_data': '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'}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 10:11:32,725 - ERROR - Internal Server Error: /products/saveproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 126, in saveProduct
    product_serializer.data.image_data=product_serializer.data.image_data.read()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 555, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 255, in data
    self._data = self.to_representation(self.validated_data)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 522, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 522, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 1875, in to_representation
    value = self.model_field.value_from_object(obj)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\__init__.py", line 1088, in value_from_object
    return getattr(obj, self.attname)
AttributeError: 'collections.OrderedDict' object has no attribute 'image_data'
2023-06-30 10:20:45,446 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:20:47,466 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:21:02,382 - INFO - saveImage : starts
2023-06-30 10:21:02,386 - INFO - Image Present in the request
2023-06-30 10:21:02,386 - INFO - Image is reading...
2023-06-30 10:21:02,386 - INFO - Image reading Completed
2023-06-30 10:21:02,401 - INFO - Image saved
2023-06-30 10:21:02,451 - INFO - save product is executed
2023-06-30 10:21:02,451 - INFO - ProductSerializer(data={'typeName': 'Plant', 'name': 'fg', 'price': 4, 'discount': 3, 'quantity': 6, 'image_data': 'C:\\fakepath\\th.jpg', 'description': 'gfxdcx', 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 44, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 10:21:02,607 - ERROR - Internal Server Error: /products/saveproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 126, in saveProduct
    product_serializer.data.image_data=product_serializer.data.image.image_data.read()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 555, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 255, in data
    self._data = self.to_representation(self.validated_data)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 522, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 522, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 1875, in to_representation
    value = self.model_field.value_from_object(obj)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\__init__.py", line 1088, in value_from_object
    return getattr(obj, self.attname)
AttributeError: 'collections.OrderedDict' object has no attribute 'image_data'
2023-06-30 10:22:08,654 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:22:16,440 - INFO - saveImage : starts
2023-06-30 10:22:16,440 - INFO - Image Present in the request
2023-06-30 10:22:16,440 - INFO - Image is reading...
2023-06-30 10:22:16,440 - INFO - Image reading Completed
2023-06-30 10:22:16,457 - INFO - Image saved
2023-06-30 10:22:16,478 - INFO - save product is executed
2023-06-30 10:22:16,532 - ERROR - Internal Server Error: /products/saveproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 126, in saveProduct
    log.info(product_serializer)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 555, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 255, in data
    self._data = self.to_representation(self.validated_data)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 522, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 522, in to_representation
    ret[field.field_name] = field.to_representation(attribute)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 1875, in to_representation
    value = self.model_field.value_from_object(obj)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\__init__.py", line 1088, in value_from_object
    return getattr(obj, self.attname)
AttributeError: 'collections.OrderedDict' object has no attribute 'image_data'
2023-06-30 10:24:42,747 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:24:51,517 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 10:24:57,067 - INFO - saveImage : starts
2023-06-30 10:24:57,067 - INFO - Image Present in the request
2023-06-30 10:24:57,067 - INFO - Image is reading...
2023-06-30 10:24:57,067 - INFO - Image reading Completed
2023-06-30 10:24:57,082 - INFO - Image saved
2023-06-30 10:24:57,110 - INFO - save product is executed
2023-06-30 10:24:57,110 - INFO - ProductSerializer(data={'typeName': 'Plant', 'name': 'fg', 'price': 4, 'discount': 3, 'quantity': 6, 'image_data': 'C:\\fakepath\\th.jpg', 'description': 'gfxdcx', 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 46, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 10:25:56,245 - INFO - getting image by
2023-06-30 10:26:01,891 - INFO - getting image by
2023-06-30 10:26:05,851 - INFO - getting image by
2023-06-30 10:27:11,562 - INFO - GET method
2023-06-30 10:27:11,563 - INFO - getting all images
2023-06-30 10:27:14,934 - INFO - GET method
2023-06-30 10:27:14,934 - INFO - getting all images
2023-06-30 10:27:35,037 - INFO - GET method
2023-06-30 10:27:35,037 - INFO - getting all images
2023-06-30 10:31:45,597 - INFO - GET method
2023-06-30 10:31:45,597 - INFO - getting all images
2023-06-30 10:32:27,656 - INFO - GET method
2023-06-30 10:32:27,666 - INFO - getting all images
2023-06-30 10:33:23,622 - INFO - GET method
2023-06-30 10:33:23,622 - INFO - getting all images
2023-06-30 10:33:26,751 - INFO - GET method
2023-06-30 10:33:26,751 - INFO - getting all images
2023-06-30 10:33:28,465 - INFO - GET method
2023-06-30 10:33:28,465 - INFO - getting all images
2023-06-30 10:33:39,299 - INFO - GET method
2023-06-30 10:33:39,299 - INFO - getting all images
2023-06-30 10:33:43,080 - INFO - GET method
2023-06-30 10:33:43,088 - INFO - getting all images
2023-06-30 10:34:05,197 - INFO - GET method
2023-06-30 10:34:05,197 - INFO - getting all images
2023-06-30 10:34:28,083 - INFO - GET method
2023-06-30 10:34:28,083 - INFO - getting all images
2023-06-30 10:34:49,208 - INFO - saveImage : starts
2023-06-30 10:34:49,220 - INFO - Image Present in the request
2023-06-30 10:34:49,220 - INFO - Image is reading...
2023-06-30 10:34:49,220 - INFO - Image reading Completed
2023-06-30 10:34:49,254 - INFO - Image saved
2023-06-30 10:34:49,290 - INFO - save product is executed
2023-06-30 10:34:49,298 - INFO - ProductSerializer(data={'name': 'es', 'description': '5yrt', 'price': 4, 'quantity': 6, 'discount': 5, 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 48, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 10:36:38,243 - INFO - getting image by
2023-06-30 10:37:27,323 - INFO - GET method
2023-06-30 10:37:27,323 - INFO - getting all images
2023-06-30 10:37:39,020 - INFO - saveImage : starts
2023-06-30 10:37:39,020 - INFO - Image Present in the request
2023-06-30 10:37:39,020 - INFO - Image is reading...
2023-06-30 10:37:39,020 - INFO - Image reading Completed
2023-06-30 10:37:39,036 - INFO - Image saved
2023-06-30 10:37:49,080 - INFO - getting image by
2023-06-30 10:38:59,623 - INFO - GET method
2023-06-30 10:38:59,623 - INFO - getting all images
2023-06-30 10:39:45,466 - INFO - GET method
2023-06-30 10:39:45,466 - INFO - getting all images
2023-06-30 10:39:56,822 - INFO - GET method
2023-06-30 10:39:56,822 - INFO - getting all images
2023-06-30 10:40:01,918 - INFO - GET method
2023-06-30 10:40:01,918 - INFO - getting all images
2023-06-30 10:40:07,094 - INFO - GET method
2023-06-30 10:40:07,094 - INFO - getting all images
2023-06-30 10:40:57,962 - INFO - GET method
2023-06-30 10:40:57,970 - INFO - getting all images
2023-06-30 10:41:08,439 - INFO - GET method
2023-06-30 10:41:08,447 - INFO - getting all images
2023-06-30 10:41:12,063 - INFO - GET method
2023-06-30 10:41:12,063 - INFO - getting all images
2023-06-30 10:41:44,674 - INFO - GET method
2023-06-30 10:41:44,681 - INFO - getting all images
2023-06-30 10:41:47,954 - INFO - GET method
2023-06-30 10:41:47,964 - INFO - getting all images
2023-06-30 10:42:00,305 - INFO - GET method
2023-06-30 10:42:00,305 - INFO - getting all images
2023-06-30 10:42:21,547 - INFO - saveImage : starts
2023-06-30 10:42:21,547 - INFO - Image Present in the request
2023-06-30 10:42:21,547 - INFO - Image is reading...
2023-06-30 10:42:21,547 - INFO - Image reading Completed
2023-06-30 10:42:21,570 - INFO - Image saved
2023-06-30 10:42:21,579 - INFO - save product is executed
2023-06-30 10:42:21,588 - INFO - ProductSerializer(data={'name': 'hf', 'description': 'trhegr', 'price': 5, 'quantity': 7, 'discount': 7, 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 51, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 10:42:48,463 - INFO - getting image by
2023-06-30 10:42:51,323 - INFO - getting image by
2023-06-30 10:43:49,377 - INFO - GET method
2023-06-30 10:43:49,377 - INFO - getting all images
2023-06-30 10:43:52,757 - INFO - GET method
2023-06-30 10:43:52,757 - INFO - getting all images
2023-06-30 10:43:55,178 - INFO - GET method
2023-06-30 10:43:55,178 - INFO - getting all images
2023-06-30 10:43:59,626 - INFO - GET method
2023-06-30 10:43:59,634 - INFO - getting all images
2023-06-30 10:44:03,376 - INFO - GET method
2023-06-30 10:44:03,376 - INFO - getting all images
2023-06-30 10:44:07,670 - INFO - GET method
2023-06-30 10:44:07,670 - INFO - getting all images
2023-06-30 10:49:46,066 - INFO - GET method
2023-06-30 10:49:46,066 - INFO - getting all images
2023-06-30 10:49:48,795 - INFO - GET method
2023-06-30 10:49:48,795 - INFO - getting all images
2023-06-30 10:49:51,169 - INFO - GET method
2023-06-30 10:49:51,169 - INFO - getting all images
2023-06-30 10:50:07,196 - INFO - saveImage : starts
2023-06-30 10:50:07,205 - INFO - Image Present in the request
2023-06-30 10:50:07,205 - INFO - Image is reading...
2023-06-30 10:50:07,205 - INFO - Image reading Completed
2023-06-30 10:50:07,223 - INFO - Image saved
2023-06-30 10:50:22,677 - INFO - getting image by
2023-06-30 10:50:32,561 - INFO - GET method
2023-06-30 10:50:32,561 - INFO - getting all images
2023-06-30 10:50:46,932 - INFO - saveImage : starts
2023-06-30 10:50:46,932 - INFO - Image Present in the request
2023-06-30 10:50:46,932 - INFO - Image is reading...
2023-06-30 10:50:46,932 - INFO - Image reading Completed
2023-06-30 10:50:46,946 - INFO - Image saved
2023-06-30 10:50:46,961 - INFO - save product is executed
2023-06-30 10:50:46,961 - INFO - ProductSerializer(data={'name': 'ddf', 'description': 'fghfxd', 'price': 3, 'quantity': 6, 'discount': 3, 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 54, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 10:50:53,732 - INFO - getting image by
2023-06-30 10:51:33,406 - INFO - getting image by
2023-06-30 10:54:18,331 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:54:24,145 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:54:29,461 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:54:32,628 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:54:35,766 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:54:59,302 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:55:02,678 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:55:06,982 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:55:11,969 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:55:15,195 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:55:19,151 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:55:21,275 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:55:23,446 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:55:26,400 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:55:28,538 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:55:30,640 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 10:55:44,134 - INFO - saveImage : starts
2023-06-30 10:55:44,147 - INFO - Image Present in the request
2023-06-30 10:55:44,147 - INFO - Image is reading...
2023-06-30 10:55:44,147 - INFO - Image reading Completed
2023-06-30 10:55:44,166 - INFO - Image saved
2023-06-30 10:55:44,220 - INFO - save product is executed
2023-06-30 10:55:44,223 - INFO - ProductSerializer(data={'name': 'ddf', 'description': 'fghfxd', 'price': 3, 'quantity': 6, 'discount': 3, 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 56, 'image_data': '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'}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 10:55:59,444 - INFO - getting image by
2023-06-30 10:56:04,882 - ERROR - Internal Server Error: /products/image/57/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 29, in getImageById
    image=Image.objects.get(id=id)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 637, in get
    raise self.model.DoesNotExist(
products_app.models.Image.DoesNotExist: Image matching query does not exist.
2023-06-30 11:01:16,129 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:01:21,657 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:01:25,909 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:01:28,931 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:01:34,206 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:01:39,467 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:01:41,597 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:01:44,837 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:01:47,963 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:01:50,049 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:01:51,921 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:01:55,099 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:02:02,540 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:02:04,663 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:02:06,533 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:02:10,748 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:02:16,099 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:02:19,265 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:02:21,354 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:02:30,825 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:02:33,039 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:02:36,431 - INFO - saveImage : starts
2023-06-30 11:02:36,431 - INFO - Image Present in the request
2023-06-30 11:02:36,431 - INFO - Image is reading...
2023-06-30 11:02:36,431 - INFO - Image reading Completed
2023-06-30 11:02:36,447 - INFO - Image saved
2023-06-30 11:02:36,474 - INFO - save product is executed
2023-06-30 11:02:36,474 - INFO - ProductSerializer(data={'name': 'ddf', 'description': 'fghfxd', 'price': 3, 'quantity': 6, 'discount': 3, 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 57, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 11:02:36,525 - ERROR - Internal Server Error: /products/saveproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 128, in saveProduct
    product_serializer.save()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 212, in save
    self.instance = self.create(validated_data)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py", line 29, in create
    log.info("image is getting")
NameError: name 'log' is not defined
2023-06-30 11:03:17,792 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:03:19,773 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:04:18,706 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:04:34,859 - INFO - saveImage : starts
2023-06-30 11:04:34,873 - INFO - Image Present in the request
2023-06-30 11:04:34,873 - INFO - Image is reading...
2023-06-30 11:04:34,874 - INFO - Image reading Completed
2023-06-30 11:04:34,889 - INFO - Image saved
2023-06-30 11:04:34,934 - INFO - save product is executed
2023-06-30 11:04:34,940 - INFO - ProductSerializer(data={'name': 'ddf', 'description': 'fghfxd', 'price': 3, 'quantity': 6, 'discount': 3, 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 58, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 11:04:34,943 - INFO - image is getting
2023-06-30 11:04:34,943 - INFO - OrderedDict()
2023-06-30 11:04:34,952 - INFO - image received------
2023-06-30 11:04:34,952 - INFO - Image object (41)
2023-06-30 11:11:37,276 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:11:39,540 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:11:41,658 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:11:45,212 - INFO - saveImage : starts
2023-06-30 11:11:45,212 - INFO - Image Present in the request
2023-06-30 11:11:45,212 - INFO - Image is reading...
2023-06-30 11:11:45,212 - INFO - Image reading Completed
2023-06-30 11:11:45,233 - INFO - Image saved
2023-06-30 11:11:45,263 - INFO - save product is executed
2023-06-30 11:11:45,263 - INFO - ProductSerializer(data={'name': 'ddf', 'description': 'fghfxd', 'price': 3, 'quantity': 6, 'discount': 3, 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 59, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 11:11:45,263 - INFO - image is getting
2023-06-30 11:11:45,263 - INFO - OrderedDict()
2023-06-30 11:11:45,263 - INFO - OrderedDict([('name', 'Plant')])
2023-06-30 11:11:45,272 - INFO - image received------
2023-06-30 11:11:45,272 - INFO - Image object (41)
2023-06-30 11:12:53,926 - ERROR - Internal Server Error: /products/images/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 21, in getAllImages
    logging.info("GET method")
NameError: name 'logging' is not defined
2023-06-30 11:12:56,445 - ERROR - Internal Server Error: /products/images/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 21, in getAllImages
    logging.info("GET method")
NameError: name 'logging' is not defined
2023-06-30 11:13:01,517 - ERROR - Internal Server Error: /products/images/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 21, in getAllImages
    logging.info("GET method")
NameError: name 'logging' is not defined
2023-06-30 11:13:08,561 - ERROR - Internal Server Error: /products/images/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 21, in getAllImages
    logging.info("GET method")
NameError: name 'logging' is not defined
2023-06-30 11:13:48,155 - ERROR - Internal Server Error: /products/images/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 21, in getAllImages
    logging.info("GET method")
NameError: name 'logging' is not defined
2023-06-30 11:14:10,898 - INFO - saveImage : starts
2023-06-30 11:14:10,898 - INFO - Image Present in the request
2023-06-30 11:14:10,898 - INFO - Image is reading...
2023-06-30 11:14:10,898 - INFO - Image reading Completed
2023-06-30 11:14:10,919 - INFO - Image saved
2023-06-30 11:14:10,930 - INFO - save product is executed
2023-06-30 11:14:10,930 - INFO - ProductSerializer(data={'name': 'ws', 'description': 'tfrde', 'price': 3, 'quantity': 6, 'discount': 5, 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 60, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 11:14:10,930 - INFO - image is getting
2023-06-30 11:14:10,930 - INFO - OrderedDict()
2023-06-30 11:14:10,930 - INFO - OrderedDict([('name', 'Plant')])
2023-06-30 11:14:10,938 - INFO - image received------
2023-06-30 11:14:10,938 - INFO - Image object (41)
2023-06-30 11:16:13,073 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:16:15,144 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:16:18,332 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:16:25,291 - INFO - saveImage : starts
2023-06-30 11:16:25,291 - INFO - Image Present in the request
2023-06-30 11:16:25,291 - INFO - Image is reading...
2023-06-30 11:16:25,306 - INFO - Image reading Completed
2023-06-30 11:16:25,306 - INFO - Image saved
2023-06-30 11:16:25,355 - INFO - save product is executed
2023-06-30 11:16:25,355 - INFO - ProductSerializer(data={'name': 'ws', 'description': 'tfrde', 'price': 3, 'quantity': 6, 'discount': 5, 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 61, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 11:16:25,355 - INFO - image is getting
2023-06-30 11:16:25,355 - INFO - OrderedDict()
2023-06-30 11:16:25,355 - INFO - OrderedDict([('name', 'Plant')])
2023-06-30 11:16:25,355 - INFO - image received------
2023-06-30 11:16:25,355 - INFO - <QuerySet [<Image: Image object (41)>, <Image: Image object (42)>, <Image: Image object (43)>, <Image: Image object (44)>, <Image: Image object (45)>, <Image: Image object (46)>, <Image: Image object (47)>, <Image: Image object (48)>, <Image: Image object (49)>, <Image: Image object (50)>, <Image: Image object (51)>, <Image: Image object (52)>, <Image: Image object (53)>, <Image: Image object (54)>, <Image: Image object (55)>, <Image: Image object (56)>, <Image: Image object (57)>, <Image: Image object (58)>, <Image: Image object (59)>, <Image: Image object (60)>, '...(remaining elements truncated)...']>
2023-06-30 11:16:25,416 - ERROR - Internal Server Error: /products/saveproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 128, in saveProduct
    product_serializer.save()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 212, in save
    self.instance = self.create(validated_data)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py", line 42, in create
    product = Product.objects.create(image=image, type=type, **validated_data)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 656, in create
    obj = self.model(**kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\base.py", line 543, in __init__
    _setattr(self, field.name, rel_obj)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 369, in __set__
    super().__set__(instance, value)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 266, in __set__
    raise ValueError(
ValueError: Cannot assign "<QuerySet [<Image: Image object (41)>, <Image: Image object (42)>, <Image: Image object (43)>, <Image: Image object (44)>, <Image: Image object (45)>, <Image: Image object (46)>, <Image: Image object (47)>, <Image: Image object (48)>, <Image: Image object (49)>, <Image: Image object (50)>, <Image: Image object (51)>, <Image: Image object (52)>, <Image: Image object (53)>, <Image: Image object (54)>, <Image: Image object (55)>, <Image: Image object (56)>, <Image: Image object (57)>, <Image: Image object (58)>, <Image: Image object (59)>, <Image: Image object (60)>, '...(remaining elements truncated)...']>": "Product.image" must be a "Image" instance.
2023-06-30 11:18:51,953 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:18:55,019 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:19:03,241 - INFO - saveImage : starts
2023-06-30 11:19:03,241 - INFO - Image Present in the request
2023-06-30 11:19:03,241 - INFO - Image is reading...
2023-06-30 11:19:03,241 - INFO - Image reading Completed
2023-06-30 11:19:03,270 - INFO - Image saved
2023-06-30 11:19:03,304 - INFO - save product is executed
2023-06-30 11:19:03,304 - INFO - ProductSerializer(data={'name': 'ws', 'description': 'tfrde', 'price': 3, 'quantity': 6, 'discount': 5, 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 62, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 11:19:03,304 - INFO - image is getting
2023-06-30 11:19:03,304 - INFO - OrderedDict()
2023-06-30 11:19:03,304 - INFO - OrderedDict([('name', 'Plant')])
2023-06-30 11:19:03,317 - INFO - image received------
2023-06-30 11:19:03,317 - INFO - <QuerySet [<Image: Image object (41)>, <Image: Image object (42)>, <Image: Image object (43)>, <Image: Image object (44)>, <Image: Image object (45)>, <Image: Image object (46)>, <Image: Image object (47)>, <Image: Image object (48)>, <Image: Image object (49)>, <Image: Image object (50)>, <Image: Image object (51)>, <Image: Image object (52)>, <Image: Image object (53)>, <Image: Image object (54)>, <Image: Image object (55)>, <Image: Image object (56)>, <Image: Image object (57)>, <Image: Image object (58)>, <Image: Image object (59)>, <Image: Image object (60)>, '...(remaining elements truncated)...']>
2023-06-30 11:19:03,475 - ERROR - Internal Server Error: /products/saveproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 128, in saveProduct
    product_serializer.save()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 212, in save
    self.instance = self.create(validated_data)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py", line 42, in create
    product = Product.objects.create(instance=image, type=type, **validated_data)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 656, in create
    obj = self.model(**kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\base.py", line 567, in __init__
    raise TypeError(
TypeError: Product() got unexpected keyword arguments: 'instance'
2023-06-30 11:19:26,569 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:19:28,562 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:21:31,648 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:21:39,773 - INFO - saveImage : starts
2023-06-30 11:21:39,773 - INFO - Image Present in the request
2023-06-30 11:21:39,773 - INFO - Image is reading...
2023-06-30 11:21:39,773 - INFO - Image reading Completed
2023-06-30 11:21:39,789 - INFO - Image saved
2023-06-30 11:21:39,820 - INFO - save product is executed
2023-06-30 11:21:39,820 - INFO - ProductSerializer(data={'name': 'ws', 'description': 'tfrde', 'price': 3, 'quantity': 6, 'discount': 5, 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 63, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 11:21:39,820 - INFO - image is getting
2023-06-30 11:21:39,820 - INFO - OrderedDict()
2023-06-30 11:21:39,820 - INFO - OrderedDict([('name', 'Plant')])
2023-06-30 11:21:39,820 - INFO - image received------
2023-06-30 11:21:39,820 - INFO - Image object (63)
2023-06-30 11:22:07,166 - ERROR - Internal Server Error: /products/image/63/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 30, in getImageById
    logging.info("getting image by")
NameError: name 'logging' is not defined
2023-06-30 11:24:59,426 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 11:25:03,863 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 11:25:08,712 - ERROR - Internal Server Error: /products/image/63/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 30, in getImageById
    logging.info("getting image by")
NameError: name 'logging' is not defined
2023-06-30 11:25:23,194 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 11:25:27,680 - INFO - getting image by
2023-06-30 11:26:16,338 - INFO - saveImage : starts
2023-06-30 11:26:16,338 - INFO - Image Present in the request
2023-06-30 11:26:16,338 - INFO - Image is reading...
2023-06-30 11:26:16,338 - INFO - Image reading Completed
2023-06-30 11:26:16,350 - INFO - Image saved
2023-06-30 11:26:16,397 - INFO - save product is executed
2023-06-30 11:26:16,399 - INFO - ProductSerializer(data={'name': 'ws', 'description': 'tfrde', 'price': 3, 'quantity': 6, 'discount': 5, 'type': {'id': 1, 'name': 'Plant'}, 'image': {'id': 64, 'image_data': ''}}):
    id = IntegerField(read_only=True)
    image = ImageSerializer(read_only=False):
        id = IntegerField(read_only=True)
        image_data = ModelField(model_field=<django.db.models.fields.BinaryField: image_data>, read_only=True)
    type = TypeSerializer(read_only=False):
        id = IntegerField(read_only=True)
        name = CharField(max_length=40, style={'base_template': 'textarea.html'})
    name = CharField(max_length=60)
    description = CharField(max_length=300, style={'base_template': 'textarea.html'})
    price = FloatField()
    discount = FloatField()
    quantity = FloatField()
2023-06-30 11:26:16,399 - INFO - image is getting
2023-06-30 11:26:16,399 - INFO - OrderedDict()
2023-06-30 11:26:16,399 - INFO - OrderedDict([('name', 'Plant')])
2023-06-30 11:26:16,416 - INFO - image received------
2023-06-30 11:26:16,416 - INFO - Image object (64)
2023-06-30 11:27:12,607 - INFO - GET method
2023-06-30 11:27:12,607 - INFO - getting all images
2023-06-30 11:28:10,209 - INFO - GET method
2023-06-30 11:28:10,209 - INFO - getting all images
2023-06-30 11:29:27,556 - INFO - GET method
2023-06-30 11:29:27,556 - INFO - getting all images
2023-06-30 11:29:55,538 - INFO - GET method
2023-06-30 11:29:55,538 - INFO - getting all images
2023-06-30 11:29:59,589 - INFO - GET method
2023-06-30 11:29:59,589 - INFO - getting all images
2023-06-30 11:30:09,483 - INFO - GET method
2023-06-30 11:30:09,488 - INFO - getting all images
2023-06-30 11:30:14,764 - INFO - GET method
2023-06-30 11:30:14,764 - INFO - getting all images
2023-06-30 11:30:18,236 - INFO - GET method
2023-06-30 11:30:18,236 - INFO - getting all images
2023-06-30 11:30:21,010 - INFO - GET method
2023-06-30 11:30:21,026 - INFO - getting all images
2023-06-30 11:30:23,779 - INFO - GET method
2023-06-30 11:30:23,780 - INFO - getting all images
2023-06-30 11:30:30,760 - INFO - GET method
2023-06-30 11:30:30,760 - INFO - getting all images
2023-06-30 11:30:32,954 - INFO - GET method
2023-06-30 11:30:32,954 - INFO - getting all images
2023-06-30 11:30:36,882 - INFO - GET method
2023-06-30 11:30:36,882 - INFO - getting all images
2023-06-30 11:30:44,118 - INFO - GET method
2023-06-30 11:30:44,118 - INFO - getting all images
2023-06-30 11:30:50,393 - INFO - GET method
2023-06-30 11:30:50,393 - INFO - getting all images
2023-06-30 11:30:54,675 - INFO - GET method
2023-06-30 11:30:54,675 - INFO - getting all images
2023-06-30 11:30:57,104 - INFO - GET method
2023-06-30 11:30:57,104 - INFO - getting all images
2023-06-30 11:31:06,212 - INFO - GET method
2023-06-30 11:31:06,220 - INFO - getting all images
2023-06-30 11:31:14,051 - INFO - GET method
2023-06-30 11:31:14,052 - INFO - getting all images
2023-06-30 11:31:18,151 - INFO - GET method
2023-06-30 11:31:18,163 - INFO - getting all images
2023-06-30 11:32:00,932 - INFO - GET method
2023-06-30 11:32:00,932 - INFO - getting all images
2023-06-30 11:32:06,984 - INFO - GET method
2023-06-30 11:32:06,984 - INFO - getting all images
2023-06-30 11:32:09,859 - INFO - GET method
2023-06-30 11:32:09,865 - INFO - getting all images
2023-06-30 11:32:12,687 - INFO - GET method
2023-06-30 11:32:12,691 - INFO - getting all images
2023-06-30 11:32:18,245 - INFO - GET method
2023-06-30 11:32:18,245 - INFO - getting all images
2023-06-30 11:32:19,713 - INFO - GET method
2023-06-30 11:32:19,713 - INFO - getting all images
2023-06-30 11:32:26,991 - INFO - GET method
2023-06-30 11:32:26,991 - INFO - getting all images
2023-06-30 11:33:16,592 - INFO - GET method
2023-06-30 11:33:16,592 - INFO - getting all images
2023-06-30 11:33:19,661 - INFO - GET method
2023-06-30 11:33:19,661 - INFO - getting all images
2023-06-30 11:40:28,980 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:40:36,537 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:40:41,608 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:40:45,521 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-06-30 11:40:55,824 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 11:40:58,800 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 11:41:00,666 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 11:41:02,480 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 11:41:04,367 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 11:41:17,924 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 11:41:20,865 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 11:42:39,010 - INFO - GET method
2023-06-30 11:42:39,010 - INFO - getting all images
2023-06-30 11:42:41,425 - INFO - GET method
2023-06-30 11:42:41,425 - INFO - getting all images
2023-06-30 11:43:06,789 - INFO - GET method
2023-06-30 11:43:06,790 - INFO - getting all images
2023-06-30 11:46:50,330 - INFO - GET method
2023-06-30 11:46:50,330 - INFO - getting all images
2023-06-30 11:48:27,088 - INFO - GET method
2023-06-30 11:48:27,088 - INFO - getting all images
2023-06-30 11:48:46,024 - INFO - GET method
2023-06-30 11:48:46,024 - INFO - getting all images
2023-06-30 11:48:49,343 - INFO - GET method
2023-06-30 11:48:49,345 - INFO - getting all images
2023-06-30 11:50:00,931 - INFO - saveImage : starts
2023-06-30 11:50:00,946 - INFO - Image Present in the request
2023-06-30 11:50:00,946 - INFO - Image is reading...
2023-06-30 11:50:00,946 - INFO - Image reading Completed
2023-06-30 11:50:00,980 - INFO - Image saved
2023-06-30 11:50:01,039 - INFO - save product is executed
2023-06-30 11:50:08,688 - INFO - GET method
2023-06-30 11:50:08,689 - INFO - getting all images
2023-06-30 11:50:43,751 - INFO - GET method
2023-06-30 11:50:43,751 - INFO - getting all images
2023-06-30 11:50:44,825 - INFO - GET method
2023-06-30 11:50:44,825 - INFO - getting all images
2023-06-30 11:50:49,657 - INFO - GET method
2023-06-30 11:50:49,657 - INFO - getting all images
2023-06-30 11:50:52,850 - INFO - GET method
2023-06-30 11:50:52,850 - INFO - getting all images
2023-06-30 11:50:59,124 - INFO - GET method
2023-06-30 11:50:59,124 - INFO - getting all images
2023-06-30 11:51:33,100 - INFO - GET method
2023-06-30 11:51:33,100 - INFO - getting all images
2023-06-30 11:51:46,359 - INFO - GET method
2023-06-30 11:51:46,359 - INFO - getting all images
2023-06-30 11:52:01,913 - INFO - GET method
2023-06-30 11:52:01,917 - INFO - getting all images
2023-06-30 11:52:04,646 - INFO - GET method
2023-06-30 11:52:04,652 - INFO - getting all images
2023-06-30 11:52:12,361 - INFO - GET method
2023-06-30 11:52:12,361 - INFO - getting all images
2023-06-30 11:52:15,188 - INFO - GET method
2023-06-30 11:52:15,188 - INFO - getting all images
2023-06-30 11:52:27,510 - INFO - GET method
2023-06-30 11:52:27,510 - INFO - getting all images
2023-06-30 11:53:04,544 - INFO - GET method
2023-06-30 11:53:04,546 - INFO - getting all images
2023-06-30 11:53:13,796 - INFO - GET method
2023-06-30 11:53:13,796 - INFO - getting all images
2023-06-30 11:53:21,081 - INFO - GET method
2023-06-30 11:53:21,081 - INFO - getting all images
2023-06-30 11:53:22,575 - INFO - GET method
2023-06-30 11:53:22,580 - INFO - getting all images
2023-06-30 11:53:23,642 - INFO - GET method
2023-06-30 11:53:23,642 - INFO - getting all images
2023-06-30 11:53:25,598 - INFO - GET method
2023-06-30 11:53:25,598 - INFO - getting all images
2023-06-30 11:53:32,362 - INFO - GET method
2023-06-30 11:53:32,362 - INFO - getting all images
2023-06-30 11:53:38,866 - INFO - GET method
2023-06-30 11:53:38,867 - INFO - getting all images
2023-06-30 11:53:40,686 - INFO - GET method
2023-06-30 11:53:40,690 - INFO - getting all images
2023-06-30 11:53:44,334 - INFO - GET method
2023-06-30 11:53:44,334 - INFO - getting all images
2023-06-30 11:53:46,008 - INFO - GET method
2023-06-30 11:53:46,008 - INFO - getting all images
2023-06-30 11:53:47,563 - INFO - GET method
2023-06-30 11:53:47,563 - INFO - getting all images
2023-06-30 11:54:09,159 - INFO - GET method
2023-06-30 11:54:09,159 - INFO - getting all images
2023-06-30 11:54:36,770 - INFO - GET method
2023-06-30 11:54:36,770 - INFO - getting all images
2023-06-30 11:59:29,480 - INFO - GET method
2023-06-30 11:59:29,481 - INFO - getting all images
2023-06-30 12:01:10,006 - INFO - GET method
2023-06-30 12:01:10,007 - INFO - getting all images
2023-06-30 12:01:40,744 - INFO - GET method
2023-06-30 12:01:40,744 - INFO - getting all images
2023-06-30 12:01:49,479 - INFO - GET method
2023-06-30 12:01:49,479 - INFO - getting all images
2023-06-30 12:03:19,773 - INFO - GET method
2023-06-30 12:03:19,773 - INFO - getting all images
2023-06-30 12:03:48,774 - INFO - GET method
2023-06-30 12:03:48,775 - INFO - getting all images
2023-06-30 12:03:58,350 - INFO - GET method
2023-06-30 12:03:58,350 - INFO - getting all images
2023-06-30 12:04:28,946 - INFO - GET method
2023-06-30 12:04:28,946 - INFO - getting all images
2023-06-30 12:05:20,290 - INFO - GET method
2023-06-30 12:05:20,291 - INFO - getting all images
2023-06-30 12:05:46,904 - INFO - GET method
2023-06-30 12:05:46,904 - INFO - getting all images
2023-06-30 12:06:18,879 - INFO - GET method
2023-06-30 12:06:18,879 - INFO - getting all images
2023-06-30 12:06:38,504 - INFO - GET method
2023-06-30 12:06:38,505 - INFO - getting all images
2023-06-30 12:07:22,523 - INFO - GET method
2023-06-30 12:07:22,523 - INFO - getting all images
2023-06-30 12:24:01,015 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 12:24:07,450 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 12:24:55,809 - INFO - GET method
2023-06-30 12:24:55,809 - INFO - getting all images
2023-06-30 12:24:59,895 - INFO - GET method
2023-06-30 12:24:59,899 - INFO - getting all images
2023-06-30 12:46:02,312 - INFO - GET method
2023-06-30 12:46:02,313 - INFO - getting all images
2023-06-30 12:46:33,340 - INFO - GET method
2023-06-30 12:46:33,340 - INFO - getting all images
2023-06-30 12:46:37,467 - INFO - GET method
2023-06-30 12:46:37,467 - INFO - getting all images
2023-06-30 12:46:40,048 - INFO - GET method
2023-06-30 12:46:40,048 - INFO - getting all images
2023-06-30 12:46:52,109 - INFO - GET method
2023-06-30 12:46:52,112 - INFO - getting all images
2023-06-30 12:47:58,889 - INFO - GET method
2023-06-30 12:47:58,889 - INFO - getting all images
2023-06-30 12:49:01,897 - INFO - GET method
2023-06-30 12:49:01,898 - INFO - getting all images
2023-06-30 12:49:10,550 - INFO - GET method
2023-06-30 12:49:10,550 - INFO - getting all images
2023-06-30 12:49:12,085 - INFO - GET method
2023-06-30 12:49:12,088 - INFO - getting all images
2023-06-30 12:49:16,034 - INFO - GET method
2023-06-30 12:49:16,034 - INFO - getting all images
2023-06-30 12:49:23,713 - INFO - GET method
2023-06-30 12:49:23,714 - INFO - getting all images
2023-06-30 12:50:43,324 - INFO - GET method
2023-06-30 12:50:43,325 - INFO - getting all images
2023-06-30 12:51:00,190 - INFO - GET method
2023-06-30 12:51:00,190 - INFO - getting all images
2023-06-30 12:51:12,773 - INFO - GET method
2023-06-30 12:51:12,774 - INFO - getting all images
2023-06-30 12:51:31,331 - INFO - GET method
2023-06-30 12:51:31,331 - INFO - getting all images
2023-06-30 12:51:34,377 - INFO - GET method
2023-06-30 12:51:34,377 - INFO - getting all images
2023-06-30 12:52:02,629 - INFO - GET method
2023-06-30 12:52:02,630 - INFO - getting all images
2023-06-30 12:52:06,644 - INFO - GET method
2023-06-30 12:52:06,648 - INFO - getting all images
2023-06-30 12:52:19,521 - INFO - GET method
2023-06-30 12:52:19,522 - INFO - getting all images
2023-06-30 12:52:24,144 - INFO - GET method
2023-06-30 12:52:24,144 - INFO - getting all images
2023-06-30 12:52:34,900 - INFO - GET method
2023-06-30 12:52:34,900 - INFO - getting all images
2023-06-30 12:52:37,742 - INFO - GET method
2023-06-30 12:52:37,742 - INFO - getting all images
2023-06-30 12:52:38,660 - INFO - GET method
2023-06-30 12:52:38,660 - INFO - getting all images
2023-06-30 12:52:50,161 - INFO - GET method
2023-06-30 12:52:50,161 - INFO - getting all images
2023-06-30 12:52:53,828 - INFO - GET method
2023-06-30 12:52:53,828 - INFO - getting all images
2023-06-30 12:53:15,452 - INFO - GET method
2023-06-30 12:53:15,452 - INFO - getting all images
2023-06-30 12:53:36,258 - INFO - GET method
2023-06-30 12:53:36,259 - INFO - getting all images
2023-06-30 12:53:40,796 - INFO - GET method
2023-06-30 12:53:40,797 - INFO - getting all images
2023-06-30 12:53:42,945 - INFO - GET method
2023-06-30 12:53:42,946 - INFO - getting all images
2023-06-30 12:53:50,207 - INFO - GET method
2023-06-30 12:53:50,207 - INFO - getting all images
2023-06-30 12:53:51,739 - INFO - GET method
2023-06-30 12:53:51,739 - INFO - getting all images
2023-06-30 12:53:52,977 - INFO - GET method
2023-06-30 12:53:52,978 - INFO - getting all images
2023-06-30 12:53:56,829 - INFO - GET method
2023-06-30 12:53:56,832 - INFO - getting all images
2023-06-30 12:54:27,826 - INFO - GET method
2023-06-30 12:54:27,827 - INFO - getting all images
2023-06-30 12:56:18,914 - INFO - GET method
2023-06-30 12:56:18,914 - INFO - getting all images
2023-06-30 12:56:37,289 - INFO - GET method
2023-06-30 12:56:37,289 - INFO - getting all images
2023-06-30 12:56:41,536 - INFO - GET method
2023-06-30 12:56:41,536 - INFO - getting all images
2023-06-30 12:56:51,013 - INFO - GET method
2023-06-30 12:56:51,013 - INFO - getting all images
2023-06-30 12:56:52,872 - INFO - GET method
2023-06-30 12:56:52,873 - INFO - getting all images
2023-06-30 12:56:55,044 - INFO - GET method
2023-06-30 12:56:55,044 - INFO - getting all images
2023-06-30 12:57:38,660 - INFO - GET method
2023-06-30 12:57:38,660 - INFO - getting all images
2023-06-30 12:57:39,177 - INFO - GET method
2023-06-30 12:57:39,177 - INFO - getting all images
2023-06-30 12:57:46,036 - INFO - GET method
2023-06-30 12:57:46,037 - INFO - getting all images
2023-06-30 12:58:02,268 - INFO - GET method
2023-06-30 12:58:02,272 - INFO - getting all images
2023-06-30 12:58:22,920 - INFO - GET method
2023-06-30 12:58:22,921 - INFO - getting all images
2023-06-30 12:58:32,502 - INFO - GET method
2023-06-30 12:58:32,506 - INFO - getting all images
2023-06-30 12:58:34,675 - INFO - GET method
2023-06-30 12:58:34,678 - INFO - getting all images
2023-06-30 12:59:22,755 - INFO - GET method
2023-06-30 12:59:22,755 - INFO - getting all images
2023-06-30 12:59:29,329 - INFO - GET method
2023-06-30 12:59:29,331 - INFO - getting all images
2023-06-30 12:59:36,783 - INFO - GET method
2023-06-30 12:59:36,784 - INFO - getting all images
2023-06-30 13:00:51,697 - INFO - GET method
2023-06-30 13:00:51,698 - INFO - getting all images
2023-06-30 13:01:05,074 - INFO - GET method
2023-06-30 13:01:05,074 - INFO - getting all images
2023-06-30 13:01:07,194 - INFO - GET method
2023-06-30 13:01:07,197 - INFO - getting all images
2023-06-30 13:01:11,063 - INFO - GET method
2023-06-30 13:01:11,065 - INFO - getting all images
2023-06-30 13:01:29,484 - INFO - GET method
2023-06-30 13:01:29,485 - INFO - getting all images
2023-06-30 13:01:33,816 - INFO - GET method
2023-06-30 13:01:33,822 - INFO - getting all images
2023-06-30 13:01:34,328 - INFO - GET method
2023-06-30 13:01:34,332 - INFO - getting all images
2023-06-30 13:01:39,766 - INFO - GET method
2023-06-30 13:01:39,767 - INFO - getting all images
2023-06-30 13:05:21,657 - INFO - saveImage : starts
2023-06-30 13:05:21,669 - INFO - Image Present in the request
2023-06-30 13:05:21,675 - INFO - saveImage : starts
2023-06-30 13:05:21,675 - INFO - Image is reading...
2023-06-30 13:05:21,676 - INFO - saveImage : starts
2023-06-30 13:05:21,676 - INFO - Image Present in the request
2023-06-30 13:05:21,684 - INFO - Image reading Completed
2023-06-30 13:05:21,684 - INFO - Image Present in the request
2023-06-30 13:05:21,684 - INFO - Image is reading...
2023-06-30 13:05:21,692 - INFO - Image is reading...
2023-06-30 13:05:21,692 - INFO - Image reading Completed
2023-06-30 13:05:21,692 - INFO - Image reading Completed
2023-06-30 13:05:21,740 - INFO - Image saved
2023-06-30 13:05:21,740 - INFO - Image saved
2023-06-30 13:05:21,749 - INFO - Image saved
2023-06-30 13:05:21,860 - INFO - save product is executed
2023-06-30 13:05:21,877 - INFO - save product is executed
2023-06-30 13:05:22,144 - ERROR - Internal Server Error: /products/updateproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 135, in updateProduct
    product=Product.objects.get(id=product_data['id'])
KeyError: 'id'
2023-06-30 13:08:14,844 - INFO - GET method
2023-06-30 13:08:14,876 - INFO - getting all images
2023-06-30 13:08:41,061 - INFO - GET method
2023-06-30 13:08:41,061 - INFO - getting all images
2023-06-30 13:08:46,394 - INFO - GET method
2023-06-30 13:08:46,395 - INFO - getting all images
2023-06-30 13:09:08,790 - INFO - saveImage : starts
2023-06-30 13:09:08,801 - INFO - saveImage : starts
2023-06-30 13:09:08,803 - INFO - saveImage : starts
2023-06-30 13:09:08,803 - INFO - Image Present in the request
2023-06-30 13:09:08,803 - INFO - saveImage : starts
2023-06-30 13:09:08,803 - INFO - saveImage : starts
2023-06-30 13:09:08,803 - INFO - Image Present in the request
2023-06-30 13:09:08,803 - INFO - Image Present in the request
2023-06-30 13:09:08,815 - INFO - Image is reading...
2023-06-30 13:09:08,815 - INFO - Image Present in the request
2023-06-30 13:09:08,817 - INFO - Image is reading...
2023-06-30 13:09:08,817 - INFO - Image Present in the request
2023-06-30 13:09:08,817 - INFO - Image is reading...
2023-06-30 13:09:08,817 - INFO - Image reading Completed
2023-06-30 13:09:08,817 - INFO - Image is reading...
2023-06-30 13:09:08,817 - INFO - Image reading Completed
2023-06-30 13:09:08,820 - INFO - Image is reading...
2023-06-30 13:09:08,820 - INFO - Image reading Completed
2023-06-30 13:09:08,820 - INFO - Image reading Completed
2023-06-30 13:09:08,820 - INFO - Image reading Completed
2023-06-30 13:09:08,843 - INFO - Image saved
2023-06-30 13:09:08,848 - INFO - Image saved
2023-06-30 13:09:08,851 - INFO - Image saved
2023-06-30 13:09:08,859 - INFO - save product is executed
2023-06-30 13:09:08,868 - INFO - save product is executed
2023-06-30 13:09:08,876 - INFO - Image saved
2023-06-30 13:09:08,877 - INFO - save product is executed
2023-06-30 13:09:08,890 - INFO - Image saved
2023-06-30 13:09:08,917 - INFO - save product is executed
2023-06-30 13:09:29,860 - INFO - GET method
2023-06-30 13:09:29,860 - INFO - getting all images
2023-06-30 14:07:19,004 - INFO - GET method
2023-06-30 14:07:19,017 - INFO - getting all images
2023-06-30 14:07:23,234 - INFO - GET method
2023-06-30 14:07:23,234 - INFO - getting all images
2023-06-30 14:07:27,059 - INFO - GET method
2023-06-30 14:07:27,059 - INFO - getting all images
2023-06-30 14:07:29,495 - INFO - GET method
2023-06-30 14:07:29,495 - INFO - getting all images
2023-06-30 14:08:08,363 - INFO - GET method
2023-06-30 14:08:08,363 - INFO - getting all images
2023-06-30 14:08:26,491 - INFO - GET method
2023-06-30 14:08:26,491 - INFO - getting all images
2023-06-30 14:08:31,911 - INFO - GET method
2023-06-30 14:08:31,911 - INFO - getting all images
2023-06-30 14:09:06,063 - INFO - saveImage : starts
2023-06-30 14:09:06,068 - INFO - saveImage : starts
2023-06-30 14:09:06,070 - INFO - saveImage : starts
2023-06-30 14:09:06,071 - INFO - Image Present in the request
2023-06-30 14:09:06,071 - INFO - Image Present in the request
2023-06-30 14:09:06,083 - INFO - saveImage : starts
2023-06-30 14:09:06,083 - INFO - Image Present in the request
2023-06-30 14:09:06,083 - INFO - Image is reading...
2023-06-30 14:09:06,085 - INFO - Image is reading...
2023-06-30 14:09:06,095 - INFO - Image reading Completed
2023-06-30 14:09:06,086 - INFO - saveImage : starts
2023-06-30 14:09:06,086 - INFO - Image is reading...
2023-06-30 14:09:06,086 - INFO - Image reading Completed
2023-06-30 14:09:06,095 - INFO - saveImage : starts
2023-06-30 14:09:06,086 - INFO - Image Present in the request
2023-06-30 14:09:06,100 - INFO - Image Present in the request
2023-06-30 14:09:06,100 - INFO - Image reading Completed
2023-06-30 14:09:06,102 - INFO - Image Present in the request
2023-06-30 14:09:06,102 - INFO - Image is reading...
2023-06-30 14:09:06,102 - INFO - Image is reading...
2023-06-30 14:09:06,105 - INFO - Image is reading...
2023-06-30 14:09:06,105 - INFO - Image reading Completed
2023-06-30 14:09:06,105 - INFO - Image reading Completed
2023-06-30 14:09:06,105 - INFO - Image reading Completed
2023-06-30 14:09:06,170 - INFO - Image saved
2023-06-30 14:09:06,181 - INFO - Image saved
2023-06-30 14:09:06,186 - INFO - Image saved
2023-06-30 14:09:06,186 - INFO - Image saved
2023-06-30 14:09:06,186 - INFO - Image saved
2023-06-30 14:09:06,186 - INFO - Image saved
2023-06-30 14:09:06,205 - INFO - saveImage : starts
2023-06-30 14:09:06,205 - INFO - Image Present in the request
2023-06-30 14:09:06,205 - INFO - Image is reading...
2023-06-30 14:09:06,205 - INFO - Image reading Completed
2023-06-30 14:09:06,205 - INFO - saveImage : starts
2023-06-30 14:09:06,213 - INFO - Image Present in the request
2023-06-30 14:09:06,216 - INFO - saveImage : starts
2023-06-30 14:09:06,217 - INFO - Image is reading...
2023-06-30 14:09:06,217 - INFO - Image reading Completed
2023-06-30 14:09:06,217 - INFO - Image Present in the request
2023-06-30 14:09:06,224 - INFO - Image is reading...
2023-06-30 14:09:06,224 - INFO - Image reading Completed
2023-06-30 14:09:06,233 - INFO - Image saved
2023-06-30 14:09:06,242 - INFO - save product is executed
2023-06-30 14:09:06,242 - INFO - save product is executed
2023-06-30 14:09:06,248 - INFO - Image saved
2023-06-30 14:09:06,257 - INFO - Image saved
2023-06-30 14:09:06,266 - INFO - save product is executed
2023-06-30 14:09:06,266 - INFO - save product is executed
2023-06-30 14:09:06,289 - INFO - save product is executed
2023-06-30 14:09:06,307 - INFO - save product is executed
2023-06-30 14:09:06,326 - INFO - save product is executed
2023-06-30 14:09:06,339 - INFO - save product is executed
2023-06-30 14:09:39,875 - INFO - GET method
2023-06-30 14:09:39,875 - INFO - getting all images
2023-06-30 14:15:09,698 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 14:15:13,416 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 14:15:17,809 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 14:15:24,274 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 14:15:26,692 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 14:17:38,025 - INFO - GET method
2023-06-30 14:17:38,031 - INFO - getting all images
2023-06-30 14:17:41,096 - INFO - GET method
2023-06-30 14:17:41,096 - INFO - getting all images
2023-06-30 14:17:53,113 - INFO - GET method
2023-06-30 14:17:53,115 - INFO - getting all images
2023-06-30 14:20:16,851 - INFO - GET method
2023-06-30 14:20:16,851 - INFO - getting all images
2023-06-30 14:21:10,082 - INFO - GET method
2023-06-30 14:21:10,082 - INFO - getting all images
2023-06-30 14:21:56,462 - INFO - saveImage : starts
2023-06-30 14:21:56,472 - INFO - Image Present in the request
2023-06-30 14:21:56,472 - INFO - Image is reading...
2023-06-30 14:21:56,472 - INFO - Image reading Completed
2023-06-30 14:21:56,513 - INFO - Image saved
2023-06-30 14:21:56,779 - ERROR - Internal Server Error: /products/updateproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 135, in updateProduct
    product=Product.objects.get(id=product_data['id'])
KeyError: 'id'
2023-06-30 14:22:23,781 - INFO - GET method
2023-06-30 14:22:23,782 - INFO - getting all images
2023-06-30 14:22:38,780 - INFO - saveImage : starts
2023-06-30 14:22:38,788 - INFO - Image Present in the request
2023-06-30 14:22:38,788 - INFO - Image is reading...
2023-06-30 14:22:38,788 - INFO - Image reading Completed
2023-06-30 14:22:38,821 - INFO - Image saved
2023-06-30 14:22:38,906 - ERROR - Internal Server Error: /products/updateproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 135, in updateProduct
    product=Product.objects.get(id=product_data['id'])
KeyError: 'id'
2023-06-30 14:22:50,463 - INFO - GET method
2023-06-30 14:22:50,463 - INFO - getting all images
2023-06-30 14:22:54,415 - INFO - GET method
2023-06-30 14:22:54,417 - INFO - getting all images
2023-06-30 14:22:57,642 - INFO - GET method
2023-06-30 14:22:57,650 - INFO - getting all images
2023-06-30 14:23:12,949 - INFO - saveImage : starts
2023-06-30 14:23:12,949 - INFO - Image Present in the request
2023-06-30 14:23:12,949 - INFO - Image is reading...
2023-06-30 14:23:12,949 - INFO - Image reading Completed
2023-06-30 14:23:12,981 - INFO - Image saved
2023-06-30 14:23:13,057 - ERROR - Internal Server Error: /products/updateproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 135, in updateProduct
    product=Product.objects.get(id=product_data['id'])
KeyError: 'id'
2023-06-30 14:23:58,469 - INFO - GET method
2023-06-30 14:23:58,477 - INFO - getting all images
2023-06-30 14:24:10,045 - INFO - saveImage : starts
2023-06-30 14:24:10,046 - INFO - Image Present in the request
2023-06-30 14:24:10,046 - INFO - Image is reading...
2023-06-30 14:24:10,047 - INFO - Image reading Completed
2023-06-30 14:24:10,070 - INFO - Image saved
2023-06-30 14:24:10,173 - ERROR - Internal Server Error: /products/updateproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 135, in updateProduct
    product=Product.objects.get(id=product_data['id'])
KeyError: 'id'
2023-06-30 14:25:22,457 - INFO - GET method
2023-06-30 14:25:22,459 - INFO - getting all images
2023-06-30 14:25:23,917 - INFO - GET method
2023-06-30 14:25:23,925 - INFO - getting all images
2023-06-30 14:25:35,069 - INFO - saveImage : starts
2023-06-30 14:25:35,069 - INFO - Image Present in the request
2023-06-30 14:25:35,069 - INFO - Image is reading...
2023-06-30 14:25:35,069 - INFO - Image reading Completed
2023-06-30 14:25:35,103 - INFO - Image saved
2023-06-30 14:25:35,191 - ERROR - Internal Server Error: /products/updateproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 135, in updateProduct
    product=Product.objects.get(id=product_data['id'])
KeyError: 'id'
2023-06-30 14:25:54,009 - INFO - GET method
2023-06-30 14:25:54,009 - INFO - getting all images
2023-06-30 14:27:03,547 - INFO - GET method
2023-06-30 14:27:03,547 - INFO - getting all images
2023-06-30 14:27:07,458 - INFO - GET method
2023-06-30 14:27:07,460 - INFO - getting all images
2023-06-30 14:27:15,322 - INFO - GET method
2023-06-30 14:27:15,328 - INFO - getting all images
2023-06-30 14:27:19,665 - INFO - GET method
2023-06-30 14:27:19,673 - INFO - getting all images
2023-06-30 14:27:27,868 - INFO - GET method
2023-06-30 14:27:27,868 - INFO - getting all images
2023-06-30 14:27:31,270 - INFO - GET method
2023-06-30 14:27:31,270 - INFO - getting all images
2023-06-30 14:27:48,496 - INFO - GET method
2023-06-30 14:27:48,505 - INFO - getting all images
2023-06-30 14:27:55,190 - INFO - GET method
2023-06-30 14:27:55,191 - INFO - getting all images
2023-06-30 14:28:08,595 - INFO - saveImage : starts
2023-06-30 14:28:08,595 - INFO - Image Present in the request
2023-06-30 14:28:08,595 - INFO - Image is reading...
2023-06-30 14:28:08,595 - INFO - Image reading Completed
2023-06-30 14:28:08,628 - INFO - Image saved
2023-06-30 14:28:08,744 - ERROR - Internal Server Error: /products/updateproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 135, in updateProduct
    product=Product.objects.get(id=product_data['id'])
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 637, in get
    raise self.model.DoesNotExist(
products_app.models.Product.DoesNotExist: Product matching query does not exist.
2023-06-30 14:28:53,839 - INFO - GET method
2023-06-30 14:28:53,844 - INFO - getting all images
2023-06-30 14:29:12,430 - INFO - GET method
2023-06-30 14:29:12,430 - INFO - getting all images
2023-06-30 14:29:16,333 - INFO - GET method
2023-06-30 14:29:16,341 - INFO - getting all images
2023-06-30 14:29:19,209 - INFO - GET method
2023-06-30 14:29:19,209 - INFO - getting all images
2023-06-30 14:29:46,265 - INFO - saveImage : starts
2023-06-30 14:29:46,271 - INFO - Image Present in the request
2023-06-30 14:29:46,271 - INFO - Image is reading...
2023-06-30 14:29:46,271 - INFO - Image reading Completed
2023-06-30 14:29:46,288 - INFO - Image saved
2023-06-30 14:29:46,387 - ERROR - Internal Server Error: /products/updateproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 135, in updateProduct
    product=Product.objects.get(id=product_data['id'])
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 637, in get
    raise self.model.DoesNotExist(
products_app.models.Product.DoesNotExist: Product matching query does not exist.
2023-06-30 14:30:06,421 - INFO - GET method
2023-06-30 14:30:06,421 - INFO - getting all images
2023-06-30 14:30:23,931 - INFO - saveImage : starts
2023-06-30 14:30:23,931 - INFO - Image Present in the request
2023-06-30 14:30:23,931 - INFO - Image is reading...
2023-06-30 14:30:23,931 - INFO - Image reading Completed
2023-06-30 14:30:23,951 - INFO - Image saved
2023-06-30 14:30:24,050 - ERROR - Internal Server Error: /products/updateproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 135, in updateProduct
    product=Product.objects.get(id=product_data['id'])
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 637, in get
    raise self.model.DoesNotExist(
products_app.models.Product.DoesNotExist: Product matching query does not exist.
2023-06-30 14:31:34,906 - INFO - GET method
2023-06-30 14:31:34,907 - INFO - getting all images
2023-06-30 14:31:46,194 - INFO - saveImage : starts
2023-06-30 14:31:46,194 - INFO - Image Present in the request
2023-06-30 14:31:46,194 - INFO - Image is reading...
2023-06-30 14:31:46,194 - INFO - Image reading Completed
2023-06-30 14:31:46,220 - INFO - Image saved
2023-06-30 14:31:46,330 - ERROR - Internal Server Error: /products/updateproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 135, in updateProduct
    product=Product.objects.get(id=product_data['id'])
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 637, in get
    raise self.model.DoesNotExist(
products_app.models.Product.DoesNotExist: Product matching query does not exist.
2023-06-30 14:32:01,686 - INFO - GET method
2023-06-30 14:32:01,686 - INFO - getting all images
2023-06-30 14:32:20,437 - INFO - GET method
2023-06-30 14:32:20,437 - INFO - getting all images
2023-06-30 14:32:33,977 - INFO - GET method
2023-06-30 14:32:33,977 - INFO - getting all images
2023-06-30 14:32:37,550 - INFO - GET method
2023-06-30 14:32:37,550 - INFO - getting all images
2023-06-30 14:32:52,057 - INFO - GET method
2023-06-30 14:32:52,057 - INFO - getting all images
2023-06-30 14:33:03,363 - INFO - saveImage : starts
2023-06-30 14:33:03,363 - INFO - Image Present in the request
2023-06-30 14:33:03,363 - INFO - Image is reading...
2023-06-30 14:33:03,363 - INFO - Image reading Completed
2023-06-30 14:33:03,377 - INFO - Image saved
2023-06-30 14:33:03,403 - INFO - update product==
2023-06-30 14:33:12,922 - INFO - GET method
2023-06-30 14:33:12,922 - INFO - getting all images
2023-06-30 14:37:42,687 - INFO - GET method
2023-06-30 14:37:42,687 - INFO - getting all images
2023-06-30 14:37:55,745 - INFO - GET method
2023-06-30 14:37:55,748 - INFO - getting all images
2023-06-30 14:38:40,360 - INFO - GET method
2023-06-30 14:38:40,360 - INFO - getting all images
2023-06-30 14:38:45,879 - INFO - GET method
2023-06-30 14:38:45,879 - INFO - getting all images
2023-06-30 14:38:48,414 - INFO - GET method
2023-06-30 14:38:48,420 - INFO - getting all images
2023-06-30 14:38:56,137 - INFO - GET method
2023-06-30 14:38:56,137 - INFO - getting all images
2023-06-30 14:40:56,907 - INFO - GET method
2023-06-30 14:40:56,907 - INFO - getting all images
2023-06-30 14:41:00,173 - INFO - GET method
2023-06-30 14:41:00,173 - INFO - getting all images
2023-06-30 14:41:02,662 - INFO - GET method
2023-06-30 14:41:02,662 - INFO - getting all images
2023-06-30 14:41:05,574 - INFO - GET method
2023-06-30 14:41:05,582 - INFO - getting all images
2023-06-30 14:41:09,950 - INFO - GET method
2023-06-30 14:41:09,950 - INFO - getting all images
2023-06-30 14:41:25,951 - INFO - GET method
2023-06-30 14:41:25,951 - INFO - getting all images
2023-06-30 14:41:27,692 - INFO - GET method
2023-06-30 14:41:27,694 - INFO - getting all images
2023-06-30 14:41:36,605 - INFO - GET method
2023-06-30 14:41:36,615 - INFO - getting all images
2023-06-30 14:42:14,508 - INFO - GET method
2023-06-30 14:42:14,508 - INFO - getting all images
2023-06-30 14:42:24,739 - INFO - GET method
2023-06-30 14:42:24,739 - INFO - getting all images
2023-06-30 14:42:33,462 - INFO - GET method
2023-06-30 14:42:33,462 - INFO - getting all images
2023-06-30 14:42:40,717 - INFO - GET method
2023-06-30 14:42:40,717 - INFO - getting all images
2023-06-30 14:44:56,917 - INFO - GET method
2023-06-30 14:44:56,918 - INFO - getting all images
2023-06-30 14:45:08,161 - INFO - GET method
2023-06-30 14:45:08,161 - INFO - getting all images
2023-06-30 14:45:26,000 - INFO - GET method
2023-06-30 14:45:26,008 - INFO - getting all images
2023-06-30 14:46:15,994 - INFO - GET method
2023-06-30 14:46:15,995 - INFO - getting all images
2023-06-30 14:46:44,504 - INFO - GET method
2023-06-30 14:46:44,504 - INFO - getting all images
2023-06-30 14:47:58,369 - INFO - GET method
2023-06-30 14:47:58,369 - INFO - getting all images
2023-06-30 14:48:49,133 - INFO - GET method
2023-06-30 14:48:49,133 - INFO - getting all images
2023-06-30 14:49:29,585 - INFO - GET method
2023-06-30 14:49:29,589 - INFO - getting all images
2023-06-30 14:49:34,875 - INFO - GET method
2023-06-30 14:49:34,875 - INFO - getting all images
2023-06-30 14:50:01,562 - INFO - GET method
2023-06-30 14:50:01,562 - INFO - getting all images
2023-06-30 14:50:21,129 - INFO - GET method
2023-06-30 14:50:21,129 - INFO - getting all images
2023-06-30 14:50:22,156 - INFO - GET method
2023-06-30 14:50:22,156 - INFO - getting all images
2023-06-30 14:50:27,603 - INFO - GET method
2023-06-30 14:50:27,603 - INFO - getting all images
2023-06-30 14:50:30,775 - INFO - GET method
2023-06-30 14:50:30,775 - INFO - getting all images
2023-06-30 14:53:11,909 - INFO - GET method
2023-06-30 14:53:11,913 - INFO - getting all images
2023-06-30 14:53:44,778 - INFO - GET method
2023-06-30 14:53:44,778 - INFO - getting all images
2023-06-30 14:53:50,171 - INFO - GET method
2023-06-30 14:53:50,171 - INFO - getting all images
2023-06-30 14:55:14,111 - INFO - GET method
2023-06-30 14:55:14,111 - INFO - getting all images
2023-06-30 14:55:23,797 - INFO - GET method
2023-06-30 14:55:23,797 - INFO - getting all images
2023-06-30 14:55:26,988 - INFO - GET method
2023-06-30 14:55:26,988 - INFO - getting all images
2023-06-30 14:55:29,560 - INFO - GET method
2023-06-30 14:55:29,560 - INFO - getting all images
2023-06-30 14:55:36,974 - INFO - GET method
2023-06-30 14:55:36,984 - INFO - getting all images
2023-06-30 14:55:43,799 - INFO - GET method
2023-06-30 14:55:43,800 - INFO - getting all images
2023-06-30 14:55:48,684 - INFO - GET method
2023-06-30 14:55:48,684 - INFO - getting all images
2023-06-30 14:56:32,278 - INFO - GET method
2023-06-30 14:56:32,278 - INFO - getting all images
2023-06-30 14:56:45,174 - INFO - GET method
2023-06-30 14:56:45,174 - INFO - getting all images
2023-06-30 14:56:49,844 - INFO - GET method
2023-06-30 14:56:49,854 - INFO - getting all images
2023-06-30 14:56:52,706 - INFO - GET method
2023-06-30 14:56:52,706 - INFO - getting all images
2023-06-30 14:56:54,299 - INFO - GET method
2023-06-30 14:56:54,299 - INFO - getting all images
2023-06-30 14:57:19,678 - INFO - GET method
2023-06-30 14:57:19,678 - INFO - getting all images
2023-06-30 14:57:42,552 - INFO - GET method
2023-06-30 14:57:42,558 - INFO - getting all images
2023-06-30 14:57:51,734 - INFO - GET method
2023-06-30 14:57:51,734 - INFO - getting all images
2023-06-30 14:58:00,710 - INFO - GET method
2023-06-30 14:58:00,713 - INFO - getting all images
2023-06-30 14:58:03,996 - INFO - GET method
2023-06-30 14:58:03,999 - INFO - getting all images
2023-06-30 14:58:05,950 - INFO - GET method
2023-06-30 14:58:05,950 - INFO - getting all images
2023-06-30 14:58:21,372 - INFO - GET method
2023-06-30 14:58:21,376 - INFO - getting all images
2023-06-30 14:59:01,518 - INFO - GET method
2023-06-30 14:59:01,520 - INFO - getting all images
2023-06-30 14:59:18,557 - INFO - GET method
2023-06-30 14:59:18,557 - INFO - getting all images
2023-06-30 14:59:38,833 - INFO - GET method
2023-06-30 14:59:38,833 - INFO - getting all images
2023-06-30 14:59:50,365 - INFO - GET method
2023-06-30 14:59:50,370 - INFO - getting all images
2023-06-30 14:59:52,779 - INFO - GET method
2023-06-30 14:59:52,786 - INFO - getting all images
2023-06-30 14:59:57,479 - INFO - GET method
2023-06-30 14:59:57,480 - INFO - getting all images
2023-06-30 15:00:05,269 - INFO - GET method
2023-06-30 15:00:05,269 - INFO - getting all images
2023-06-30 15:00:10,561 - INFO - GET method
2023-06-30 15:00:10,561 - INFO - getting all images
2023-06-30 15:00:24,596 - INFO - GET method
2023-06-30 15:00:24,596 - INFO - getting all images
2023-06-30 15:00:32,165 - INFO - GET method
2023-06-30 15:00:32,165 - INFO - getting all images
2023-06-30 15:00:58,866 - INFO - GET method
2023-06-30 15:00:58,866 - INFO - getting all images
2023-06-30 15:01:06,652 - INFO - GET method
2023-06-30 15:01:06,652 - INFO - getting all images
2023-06-30 15:01:38,812 - INFO - GET method
2023-06-30 15:01:38,812 - INFO - getting all images
2023-06-30 15:03:49,828 - ERROR - Internal Server Error: /products/deleteproduct/32/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 145, in deleteProductById
    product = Product.objects.get(id=id)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 637, in get
    raise self.model.DoesNotExist(
products_app.models.Product.DoesNotExist: Product matching query does not exist.
2023-06-30 15:04:04,020 - INFO - GET method
2023-06-30 15:04:04,022 - INFO - getting all images
2023-06-30 15:04:10,925 - INFO - GET method
2023-06-30 15:04:10,926 - INFO - getting all images
2023-06-30 15:06:20,913 - INFO - GET method
2023-06-30 15:06:20,916 - INFO - getting all images
2023-06-30 15:06:45,666 - INFO - GET method
2023-06-30 15:06:45,666 - INFO - getting all images
2023-06-30 15:07:24,918 - INFO - saveImage : starts
2023-06-30 15:07:24,918 - INFO - Image Present in the request
2023-06-30 15:07:24,918 - INFO - Image is reading...
2023-06-30 15:07:24,918 - INFO - Image reading Completed
2023-06-30 15:07:24,934 - INFO - Image saved
2023-06-30 15:07:24,934 - INFO - save product is executed
2023-06-30 15:07:35,041 - INFO - GET method
2023-06-30 15:07:35,042 - INFO - getting all images
2023-06-30 15:07:45,569 - INFO - GET method
2023-06-30 15:07:45,569 - INFO - getting all images
2023-06-30 15:07:57,698 - WARNING - Not Found: /admin/saveadmin/
2023-06-30 15:07:59,189 - INFO - GET method
2023-06-30 15:07:59,189 - INFO - getting all images
2023-06-30 15:11:35,316 - INFO - GET method
2023-06-30 15:11:35,316 - INFO - getting all images
2023-06-30 15:12:37,917 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 15:12:41,368 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 15:12:49,498 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 15:12:56,452 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 15:13:05,760 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 15:13:38,877 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 15:13:40,772 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 15:13:45,785 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 15:13:56,185 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 15:14:08,773 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
2023-06-30 15:15:15,254 - INFO - GET method
2023-06-30 15:15:15,257 - INFO - getting all images
2023-06-30 15:15:18,671 - INFO - GET method
2023-06-30 15:15:18,671 - INFO - getting all images
2023-06-30 15:15:20,292 - INFO - GET method
2023-06-30 15:15:20,300 - INFO - getting all images
2023-06-30 15:15:22,801 - INFO - GET method
2023-06-30 15:15:22,801 - INFO - getting all images
2023-06-30 15:15:27,040 - INFO - GET method
2023-06-30 15:15:27,040 - INFO - getting all images
2023-06-30 15:15:42,769 - INFO - GET method
2023-06-30 15:15:42,769 - INFO - getting all images
2023-06-30 15:16:00,926 - INFO - GET method
2023-06-30 15:16:00,926 - INFO - getting all images
2023-06-30 15:16:03,702 - INFO - GET method
2023-06-30 15:16:03,702 - INFO - getting all images
2023-06-30 15:16:08,731 - INFO - GET method
2023-06-30 15:16:08,734 - INFO - getting all images
2023-06-30 15:16:11,899 - INFO - GET method
2023-06-30 15:16:11,899 - INFO - getting all images
2023-06-30 15:16:27,663 - INFO - GET method
2023-06-30 15:16:27,663 - INFO - getting all images
2023-06-30 15:16:38,886 - INFO - GET method
2023-06-30 15:16:38,886 - INFO - getting all images
2023-06-30 15:17:11,954 - INFO - GET method
2023-06-30 15:17:11,954 - INFO - getting all images
2023-06-30 15:17:27,112 - INFO - GET method
2023-06-30 15:17:27,112 - INFO - getting all images
2023-06-30 15:17:28,828 - INFO - GET method
2023-06-30 15:17:28,832 - INFO - getting all images
2023-06-30 15:17:35,466 - INFO - GET method
2023-06-30 15:17:35,467 - INFO - getting all images
2023-06-30 15:17:36,329 - INFO - GET method
2023-06-30 15:17:36,333 - INFO - getting all images
2023-06-30 15:17:49,146 - INFO - GET method
2023-06-30 15:17:49,146 - INFO - getting all images
2023-06-30 15:17:51,112 - INFO - GET method
2023-06-30 15:17:51,112 - INFO - getting all images
2023-06-30 15:17:58,697 - INFO - GET method
2023-06-30 15:17:58,698 - INFO - getting all images
2023-06-30 15:18:01,987 - INFO - GET method
2023-06-30 15:18:01,988 - INFO - getting all images
2023-06-30 15:18:03,775 - INFO - GET method
2023-06-30 15:18:03,779 - INFO - getting all images
2023-06-30 15:18:07,063 - INFO - GET method
2023-06-30 15:18:07,064 - INFO - getting all images
2023-06-30 15:18:22,692 - INFO - GET method
2023-06-30 15:18:22,692 - INFO - getting all images
2023-06-30 15:18:25,939 - INFO - GET method
2023-06-30 15:18:25,942 - INFO - getting all images
2023-06-30 15:18:36,927 - INFO - GET method
2023-06-30 15:18:36,928 - INFO - getting all images
2023-06-30 15:19:00,323 - INFO - saveImage : starts
2023-06-30 15:19:00,323 - INFO - Image Present in the request
2023-06-30 15:19:00,323 - INFO - Image is reading...
2023-06-30 15:19:00,323 - INFO - Image reading Completed
2023-06-30 15:19:00,355 - INFO - Image saved
2023-06-30 15:19:00,372 - INFO - save product is executed
2023-06-30 15:19:49,159 - INFO - saveImage : starts
2023-06-30 15:19:49,159 - INFO - Image Present in the request
2023-06-30 15:19:49,159 - INFO - Image is reading...
2023-06-30 15:19:49,159 - INFO - Image reading Completed
2023-06-30 15:19:49,190 - INFO - Image saved
2023-06-30 15:19:49,206 - INFO - save product is executed
2023-06-30 15:20:23,089 - INFO - GET method
2023-06-30 15:20:23,089 - INFO - getting all images
2023-06-30 15:20:57,322 - INFO - GET method
2023-06-30 15:20:57,322 - INFO - getting all images
2023-06-30 15:21:14,864 - INFO - saveImage : starts
2023-06-30 15:21:14,864 - INFO - Image Present in the request
2023-06-30 15:21:14,864 - INFO - Image is reading...
2023-06-30 15:21:14,864 - INFO - Image reading Completed
2023-06-30 15:21:14,881 - INFO - Image saved
2023-06-30 15:21:14,881 - INFO - save product is executed
2023-06-30 15:21:41,843 - INFO - GET method
2023-06-30 15:21:41,844 - INFO - getting all images
2023-06-30 15:21:57,605 - INFO - saveImage : starts
2023-06-30 15:21:57,605 - INFO - Image Present in the request
2023-06-30 15:21:57,605 - INFO - Image is reading...
2023-06-30 15:21:57,605 - INFO - Image reading Completed
2023-06-30 15:21:57,621 - INFO - Image saved
2023-06-30 15:21:57,621 - INFO - save product is executed
2023-06-30 15:22:03,286 - INFO - GET method
2023-06-30 15:22:03,286 - INFO - getting all images
2023-06-30 15:22:11,514 - INFO - GET method
2023-06-30 15:22:11,519 - INFO - getting all images
2023-06-30 15:22:29,162 - INFO - saveImage : starts
2023-06-30 15:22:29,162 - INFO - Image Present in the request
2023-06-30 15:22:29,162 - INFO - Image is reading...
2023-06-30 15:22:29,162 - INFO - Image reading Completed
2023-06-30 15:22:29,178 - INFO - Image saved
2023-06-30 15:22:29,178 - INFO - save product is executed
2023-06-30 15:22:41,757 - INFO - GET method
2023-06-30 15:22:41,757 - INFO - getting all images
2023-06-30 15:22:54,037 - INFO - saveImage : starts
2023-06-30 15:22:54,037 - INFO - Image Present in the request
2023-06-30 15:22:54,037 - INFO - Image is reading...
2023-06-30 15:22:54,037 - INFO - Image reading Completed
2023-06-30 15:22:54,052 - INFO - Image saved
2023-06-30 15:22:54,054 - INFO - save product is executed
2023-06-30 15:23:06,530 - INFO - GET method
2023-06-30 15:23:06,530 - INFO - getting all images
2023-06-30 15:23:19,560 - INFO - saveImage : starts
2023-06-30 15:23:19,560 - INFO - Image Present in the request
2023-06-30 15:23:19,560 - INFO - Image is reading...
2023-06-30 15:23:19,560 - INFO - Image reading Completed
2023-06-30 15:23:19,575 - INFO - Image saved
2023-06-30 15:23:19,577 - INFO - save product is executed
2023-06-30 15:23:52,606 - INFO - GET method
2023-06-30 15:23:52,606 - INFO - getting all images
2023-06-30 15:24:15,900 - INFO - GET method
2023-06-30 15:24:15,900 - INFO - getting all images
2023-06-30 15:24:21,650 - INFO - GET method
2023-06-30 15:24:21,652 - INFO - getting all images
2023-06-30 15:24:55,650 - INFO - GET method
2023-06-30 15:24:55,651 - INFO - getting all images
2023-06-30 15:25:06,563 - INFO - GET method
2023-06-30 15:25:06,564 - INFO - getting all images
2023-06-30 15:26:26,078 - INFO - GET method
2023-06-30 15:26:26,078 - INFO - getting all images
2023-06-30 15:27:07,239 - INFO - GET method
2023-06-30 15:27:07,240 - INFO - getting all images
2023-06-30 15:27:14,971 - INFO - GET method
2023-06-30 15:27:14,971 - INFO - getting all images
2023-06-30 15:27:29,160 - INFO - GET method
2023-06-30 15:27:29,160 - INFO - getting all images
2023-06-30 15:27:37,450 - INFO - GET method
2023-06-30 15:27:37,450 - INFO - getting all images
2023-06-30 15:27:57,829 - INFO - GET method
2023-06-30 15:27:57,829 - INFO - getting all images
2023-06-30 15:28:04,894 - INFO - GET method
2023-06-30 15:28:04,895 - INFO - getting all images
2023-06-30 15:35:23,456 - INFO - GET method
2023-06-30 15:35:23,471 - INFO - getting all images
2023-06-30 15:35:57,392 - INFO - GET method
2023-06-30 15:35:57,395 - INFO - getting all images
2023-06-30 15:36:10,635 - INFO - GET method
2023-06-30 15:36:10,635 - INFO - getting all images
2023-06-30 15:36:23,107 - INFO - saveImage : starts
2023-06-30 15:36:23,122 - INFO - Image Present in the request
2023-06-30 15:36:23,122 - INFO - Image is reading...
2023-06-30 15:36:23,122 - INFO - Image reading Completed
2023-06-30 15:36:23,170 - INFO - Image saved
2023-06-30 15:36:23,171 - INFO - save product is executed
2023-06-30 15:36:49,520 - INFO - GET method
2023-06-30 15:36:49,520 - INFO - getting all images
2023-06-30 15:36:52,983 - INFO - GET method
2023-06-30 15:36:52,986 - INFO - getting all images
2023-06-30 15:36:59,003 - INFO - GET method
2023-06-30 15:36:59,003 - INFO - getting all images
2023-06-30 15:37:17,770 - INFO - saveImage : starts
2023-06-30 15:37:17,770 - INFO - Image Present in the request
2023-06-30 15:37:17,770 - INFO - Image is reading...
2023-06-30 15:37:17,770 - INFO - Image reading Completed
2023-06-30 15:37:17,804 - INFO - Image saved
2023-06-30 15:37:17,805 - INFO - save product is executed
2023-06-30 15:38:07,500 - INFO - GET method
2023-06-30 15:38:07,500 - INFO - getting all images
2023-06-30 15:39:26,702 - INFO - GET method
2023-06-30 15:39:26,702 - INFO - getting all images
2023-06-30 15:39:34,640 - INFO - GET method
2023-06-30 15:39:34,640 - INFO - getting all images
2023-06-30 15:39:38,483 - INFO - GET method
2023-06-30 15:39:38,483 - INFO - getting all images
2023-06-30 15:39:57,129 - INFO - GET method
2023-06-30 15:39:57,129 - INFO - getting all images
2023-06-30 15:40:03,664 - INFO - GET method
2023-06-30 15:40:03,665 - INFO - getting all images
2023-06-30 15:40:05,417 - INFO - GET method
2023-06-30 15:40:05,418 - INFO - getting all images
2023-06-30 15:40:11,493 - INFO - GET method
2023-06-30 15:40:11,493 - INFO - getting all images
2023-06-30 15:40:29,624 - INFO - saveImage : starts
2023-06-30 15:40:29,624 - INFO - Image Present in the request
2023-06-30 15:40:29,624 - INFO - Image is reading...
2023-06-30 15:40:29,624 - INFO - Image reading Completed
2023-06-30 15:40:29,639 - INFO - Image saved
2023-06-30 15:40:29,657 - INFO - update product==
2023-06-30 15:40:56,574 - INFO - GET method
2023-06-30 15:40:56,574 - INFO - getting all images
2023-06-30 15:41:05,193 - INFO - GET method
2023-06-30 15:41:05,195 - INFO - getting all images
2023-06-30 16:48:07,338 - ERROR - Internal Server Error: /products/deleteproduct/22/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 145, in deleteProductById
    product = Product.objects.get(id=id)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 637, in get
    raise self.model.DoesNotExist(
products_app.models.Product.DoesNotExist: Product matching query does not exist.
2023-06-30 16:48:08,352 - ERROR - Internal Server Error: /products/deleteproduct/22/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 145, in deleteProductById
    product = Product.objects.get(id=id)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\manager.py", line 87, in manager_method
    return getattr(self.get_queryset(), name)(*args, **kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 637, in get
    raise self.model.DoesNotExist(
products_app.models.Product.DoesNotExist: Product matching query does not exist.
2023-06-30 16:48:25,337 - INFO - GET method
2023-06-30 16:48:25,344 - INFO - getting all images
2023-06-30 16:48:45,077 - INFO - GET method
2023-06-30 16:48:45,077 - INFO - getting all images
2023-07-01 09:35:26,200 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\models.py changed, reloading.
2023-07-01 09:37:08,085 - INFO - GET method
2023-07-01 09:37:08,120 - INFO - getting all images
2023-07-01 09:37:08,609 - ERROR - Internal Server Error: /products/images/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 25, in getAllImages
    return JsonResponse(images_serializer.data,safe=False)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 768, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 686, in to_representation
    return [
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 398, in __iter__
    self._fetch_all()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 1881, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")
2023-07-01 09:37:08,637 - ERROR - Internal Server Error: /products/products/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 218, in __get__
    rel_obj = self.field.get_cached_value(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\mixins.py", line 15, in get_cached_value
    return instance._state.fields_cache[cache_name]
KeyError: 'image'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 113, in getAllProducts
    return JsonResponse(products_serializer.data,safe=False)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 768, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 686, in to_representation
    return [
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 687, in <listcomp>
    self.child.to_representation(item) for item in iterable
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 509, in to_representation
    attribute = field.get_attribute(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 446, in get_attribute
    return get_attribute(instance, self.source_attrs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 96, in get_attribute
    instance = getattr(instance, attr)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 236, in __get__
    rel_obj = self.get_object(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 366, in get_object
    return super().get_object(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 199, in get_object
    return qs.get(self.field.get_reverse_related_filter(instance))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 633, in get
    num = len(clone)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 380, in __len__
    self._fetch_all()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 1881, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")
2023-07-01 09:38:11,952 - INFO - GET method
2023-07-01 09:38:11,952 - INFO - getting all images
2023-07-01 09:38:12,217 - ERROR - Internal Server Error: /products/images/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 25, in getAllImages
    return JsonResponse(images_serializer.data,safe=False)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 768, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 686, in to_representation
    return [
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 398, in __iter__
    self._fetch_all()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 1881, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")
2023-07-01 09:38:12,333 - ERROR - Internal Server Error: /products/products/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 218, in __get__
    rel_obj = self.field.get_cached_value(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\mixins.py", line 15, in get_cached_value
    return instance._state.fields_cache[cache_name]
KeyError: 'image'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 113, in getAllProducts
    return JsonResponse(products_serializer.data,safe=False)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 768, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 686, in to_representation
    return [
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 687, in <listcomp>
    self.child.to_representation(item) for item in iterable
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 509, in to_representation
    attribute = field.get_attribute(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 446, in get_attribute
    return get_attribute(instance, self.source_attrs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 96, in get_attribute
    instance = getattr(instance, attr)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 236, in __get__
    rel_obj = self.get_object(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 366, in get_object
    return super().get_object(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 199, in get_object
    return qs.get(self.field.get_reverse_related_filter(instance))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 633, in get
    num = len(clone)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 380, in __len__
    self._fetch_all()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 1881, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")
2023-07-01 09:38:39,232 - INFO - GET method
2023-07-01 09:38:39,232 - INFO - getting all images
2023-07-01 09:38:39,501 - ERROR - Internal Server Error: /products/images/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 25, in getAllImages
    return JsonResponse(images_serializer.data,safe=False)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 768, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 686, in to_representation
    return [
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 398, in __iter__
    self._fetch_all()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 1881, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")
2023-07-01 09:38:39,609 - ERROR - Internal Server Error: /products/products/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 218, in __get__
    rel_obj = self.field.get_cached_value(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\mixins.py", line 15, in get_cached_value
    return instance._state.fields_cache[cache_name]
KeyError: 'image'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 113, in getAllProducts
    return JsonResponse(products_serializer.data,safe=False)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 768, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 686, in to_representation
    return [
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 687, in <listcomp>
    self.child.to_representation(item) for item in iterable
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 509, in to_representation
    attribute = field.get_attribute(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 446, in get_attribute
    return get_attribute(instance, self.source_attrs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 96, in get_attribute
    instance = getattr(instance, attr)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 236, in __get__
    rel_obj = self.get_object(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 366, in get_object
    return super().get_object(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 199, in get_object
    return qs.get(self.field.get_reverse_related_filter(instance))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 633, in get
    num = len(clone)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 380, in __len__
    self._fetch_all()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 1881, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")
2023-07-01 09:38:41,115 - INFO - GET method
2023-07-01 09:38:41,115 - INFO - getting all images
2023-07-01 09:38:41,312 - ERROR - Internal Server Error: /products/images/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 25, in getAllImages
    return JsonResponse(images_serializer.data,safe=False)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 768, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 686, in to_representation
    return [
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 398, in __iter__
    self._fetch_all()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 1881, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")
2023-07-01 09:38:41,597 - ERROR - Internal Server Error: /products/products/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 218, in __get__
    rel_obj = self.field.get_cached_value(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\mixins.py", line 15, in get_cached_value
    return instance._state.fields_cache[cache_name]
KeyError: 'image'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 113, in getAllProducts
    return JsonResponse(products_serializer.data,safe=False)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 768, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 686, in to_representation
    return [
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 687, in <listcomp>
    self.child.to_representation(item) for item in iterable
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 509, in to_representation
    attribute = field.get_attribute(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 446, in get_attribute
    return get_attribute(instance, self.source_attrs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 96, in get_attribute
    instance = getattr(instance, attr)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 236, in __get__
    rel_obj = self.get_object(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 366, in get_object
    return super().get_object(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 199, in get_object
    return qs.get(self.field.get_reverse_related_filter(instance))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 633, in get
    num = len(clone)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 380, in __len__
    self._fetch_all()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 1881, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")
2023-07-01 09:39:00,625 - INFO - GET method
2023-07-01 09:39:00,625 - INFO - getting all images
2023-07-01 09:39:00,792 - ERROR - Internal Server Error: /products/images/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 25, in getAllImages
    return JsonResponse(images_serializer.data,safe=False)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 768, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 686, in to_representation
    return [
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 398, in __iter__
    self._fetch_all()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 1881, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")
2023-07-01 09:39:00,889 - ERROR - Internal Server Error: /products/products/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 218, in __get__
    rel_obj = self.field.get_cached_value(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\mixins.py", line 15, in get_cached_value
    return instance._state.fields_cache[cache_name]
KeyError: 'image'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 113, in getAllProducts
    return JsonResponse(products_serializer.data,safe=False)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 768, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 686, in to_representation
    return [
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 687, in <listcomp>
    self.child.to_representation(item) for item in iterable
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 509, in to_representation
    attribute = field.get_attribute(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 446, in get_attribute
    return get_attribute(instance, self.source_attrs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 96, in get_attribute
    instance = getattr(instance, attr)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 236, in __get__
    rel_obj = self.get_object(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 366, in get_object
    return super().get_object(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 199, in get_object
    return qs.get(self.field.get_reverse_related_filter(instance))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 633, in get
    num = len(clone)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 380, in __len__
    self._fetch_all()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 1881, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")
2023-07-01 09:40:16,959 - INFO - GET method
2023-07-01 09:40:16,959 - INFO - getting all images
2023-07-01 09:40:17,105 - ERROR - Internal Server Error: /products/images/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 25, in getAllImages
    return JsonResponse(images_serializer.data,safe=False)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 768, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 686, in to_representation
    return [
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 398, in __iter__
    self._fetch_all()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 1881, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")
2023-07-01 09:40:17,121 - ERROR - Internal Server Error: /products/products/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 218, in __get__
    rel_obj = self.field.get_cached_value(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\mixins.py", line 15, in get_cached_value
    return instance._state.fields_cache[cache_name]
KeyError: 'image'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
MySQLdb.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 113, in getAllProducts
    return JsonResponse(products_serializer.data,safe=False)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 768, in data
    ret = super().data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 253, in data
    self._data = self.to_representation(self.instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 686, in to_representation
    return [
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 687, in <listcomp>
    self.child.to_representation(item) for item in iterable
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 509, in to_representation
    attribute = field.get_attribute(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 446, in get_attribute
    return get_attribute(instance, self.source_attrs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\fields.py", line 96, in get_attribute
    instance = getattr(instance, attr)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 236, in __get__
    rel_obj = self.get_object(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 366, in get_object
    return super().get_object(instance)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 199, in get_object
    return qs.get(self.field.get_reverse_related_filter(instance))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 633, in get
    num = len(clone)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 380, in __len__
    self._fetch_all()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 1881, in _fetch_all
    self._result_cache = list(self._iterable_class(self))
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\query.py", line 91, in __iter__
    results = compiler.execute_sql(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\sql\compiler.py", line 1562, in execute_sql
    cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 102, in execute
    return super().execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 67, in execute
    return self._execute_with_wrappers(
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 80, in _execute_with_wrappers
    return executor(sql, params, many, context)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 84, in _execute
    with self.db.wrap_database_errors:
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\utils.py", line 91, in __exit__
    raise dj_exc_value.with_traceback(traceback) from exc_value
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\utils.py", line 89, in _execute
    return self.cursor.execute(sql, params)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\backends\mysql\base.py", line 75, in execute
    return self.cursor.execute(query, args)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 206, in execute
    res = self._query(query)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\cursors.py", line 319, in _query
    db.query(q)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\MySQLdb\connections.py", line 254, in query
    _mysql.connection.query(self, query)
django.db.utils.OperationalError: (1054, "Unknown column 'image.image' in 'field list'")
2023-07-01 09:40:53,949 - INFO - GET method
2023-07-01 09:40:53,949 - INFO - getting all images
2023-07-01 09:42:44,722 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-07-01 09:43:23,137 - INFO - GET method
2023-07-01 09:43:23,137 - INFO - getting all images
2023-07-01 09:43:42,845 - INFO - saveImage : starts
2023-07-01 09:43:42,845 - INFO - Image Present in the request
2023-07-01 09:43:42,845 - INFO - Image is reading...
2023-07-01 09:43:42,845 - INFO - Image reading Completed
2023-07-01 09:43:42,861 - INFO - Image saved
2023-07-01 09:43:42,929 - INFO - save product is executed
2023-07-01 09:43:54,528 - INFO - GET method
2023-07-01 09:43:54,531 - INFO - getting all images
2023-07-01 09:44:18,047 - INFO - saveImage : starts
2023-07-01 09:44:18,047 - INFO - Image Present in the request
2023-07-01 09:44:18,047 - INFO - Image is reading...
2023-07-01 09:44:18,047 - INFO - Image reading Completed
2023-07-01 09:44:18,055 - INFO - Image saved
2023-07-01 09:44:18,088 - INFO - update product==
2023-07-01 09:44:26,189 - INFO - GET method
2023-07-01 09:44:26,189 - INFO - getting all images
2023-07-01 09:46:53,015 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-07-01 09:46:56,354 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-07-01 09:46:59,326 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-07-01 09:47:02,288 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-07-01 09:47:09,727 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-07-01 09:47:11,872 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-07-01 09:47:27,006 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-07-01 09:47:29,245 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-07-01 09:47:33,009 - INFO - GET method
2023-07-01 09:47:33,009 - INFO - getting all images
2023-07-01 09:47:44,089 - INFO - saveImage : starts
2023-07-01 09:47:44,089 - INFO - Image Present in the request
2023-07-01 09:47:44,089 - INFO - Image is reading...
2023-07-01 09:47:44,089 - INFO - Image reading Completed
2023-07-01 09:47:44,100 - INFO - Image saved
2023-07-01 09:47:44,147 - INFO - update product==
2023-07-01 09:47:44,292 - ERROR - Internal Server Error: /products/updateproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 139, in updateProduct
    product_serializer.save()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 207, in save
    self.instance = self.update(self.instance, validated_data)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py", line 58, in update
    instance.type = type_data
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 266, in __set__
    raise ValueError(
ValueError: Cannot assign "OrderedDict([('name', 'Seeds')])": "Product.type" must be a "Type" instance.
2023-07-01 09:49:20,288 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-07-01 09:49:33,372 - INFO - GET method
2023-07-01 09:49:33,377 - INFO - getting all images
2023-07-01 09:49:39,586 - INFO - GET method
2023-07-01 09:49:39,586 - INFO - getting all images
2023-07-01 09:49:49,939 - INFO - saveImage : starts
2023-07-01 09:49:49,939 - INFO - Image Present in the request
2023-07-01 09:49:49,939 - INFO - Image is reading...
2023-07-01 09:49:49,939 - INFO - Image reading Completed
2023-07-01 09:49:49,948 - INFO - Image saved
2023-07-01 09:49:49,982 - INFO - update product==
2023-07-01 09:49:50,111 - ERROR - Internal Server Error: /products/updateproduct/
Traceback (most recent call last):
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\exception.py", line 55, in inner
    response = get_response(request)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\core\handlers\base.py", line 197, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\views\decorators\csrf.py", line 56, in wrapper_view
    return view_func(*args, **kwargs)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py", line 139, in updateProduct
    product_serializer.save()
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\rest_framework\serializers.py", line 207, in save
    self.instance = self.update(self.instance, validated_data)
  File "C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py", line 58, in update
    instance.type = TypeSerializer(instance.type, data=type_data)
  File "C:\Users\sures\AppData\Local\Programs\Python\Python310\lib\site-packages\django\db\models\fields\related_descriptors.py", line 266, in __set__
    raise ValueError(
ValueError: Cannot assign "TypeSerializer(<Type: Type object (4)>, data=OrderedDict([('name', 'Seeds')])):
    id = IntegerField(read_only=True)
    name = CharField(max_length=40, style={'base_template': 'textarea.html'})": "Product.type" must be a "Type" instance.
2023-07-01 09:51:06,575 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\serializer.py changed, reloading.
2023-07-01 09:51:16,346 - INFO - GET method
2023-07-01 09:51:16,354 - INFO - getting all images
2023-07-01 09:51:26,226 - INFO - saveImage : starts
2023-07-01 09:51:26,226 - INFO - Image Present in the request
2023-07-01 09:51:26,226 - INFO - Image is reading...
2023-07-01 09:51:26,226 - INFO - Image reading Completed
2023-07-01 09:51:26,240 - INFO - Image saved
2023-07-01 09:51:26,286 - INFO - update product==
2023-07-01 09:51:33,710 - INFO - GET method
2023-07-01 09:51:33,723 - INFO - getting all images
2023-07-01 09:52:39,684 - INFO - GET method
2023-07-01 09:52:39,684 - INFO - getting all images
2023-07-01 09:54:12,415 - INFO - GET method
2023-07-01 09:54:12,415 - INFO - getting all images
2023-07-01 09:54:16,224 - INFO - GET method
2023-07-01 09:54:16,228 - INFO - getting all images
2023-07-01 09:54:21,113 - INFO - GET method
2023-07-01 09:54:21,121 - INFO - getting all images
2023-07-01 09:54:27,968 - INFO - GET method
2023-07-01 09:54:27,968 - INFO - getting all images
2023-07-01 09:54:33,854 - INFO - GET method
2023-07-01 09:54:33,854 - INFO - getting all images
2023-07-01 09:54:43,222 - INFO - GET method
2023-07-01 09:54:43,222 - INFO - getting all images
2023-07-01 09:55:20,260 - INFO - GET method
2023-07-01 09:55:20,269 - INFO - getting all images
2023-07-01 09:55:23,268 - INFO - GET method
2023-07-01 09:55:23,268 - INFO - getting all images
2023-07-01 09:55:45,451 - INFO - GET method
2023-07-01 09:55:45,459 - INFO - getting all images
2023-07-01 09:55:51,417 - INFO - GET method
2023-07-01 09:55:51,417 - INFO - getting all images
2023-07-01 09:56:02,311 - INFO - GET method
2023-07-01 09:56:02,311 - INFO - getting all images
2023-07-01 09:57:49,839 - INFO - GET method
2023-07-01 09:57:49,844 - INFO - getting all images
2023-07-01 09:58:01,058 - INFO - GET method
2023-07-01 09:58:01,058 - INFO - getting all images
2023-07-01 09:58:08,217 - INFO - GET method
2023-07-01 09:58:08,221 - INFO - getting all images
2023-07-01 10:35:48,479 - INFO - C:\Users\sures\OneDrive\Desktop\e-nursery-django\e_nursery\Scripts\e_nursery\products_app\views.py changed, reloading.
